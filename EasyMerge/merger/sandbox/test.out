[0, 'os']
[1, 'ConfigParser']
[2, 'codecs']
[3, 'yaml']
[4, 'logging']
[5, 'time']
[6, 'itertools']
[7, 're']
[8, 'beets']
=======================
ID:0
Name:grouper
lines:(60, 62)
scope:[('Global', '', (0, 999998))]
member:False
=======================
ID:1
Name:_displace
lines:(64, 71)
scope:[('Global', '', (0, 999998))]
member:False
=======================
ID:2
Name:default_paths
lines:(74, 96)
scope:[('Global', '', (0, 999998))]
member:False
=======================
ID:3
Name:exp
lines:(85, 86)
scope:[('Function', 'default_paths', (74, 96))]
member:False
=======================
ID:4
Name:get_config
lines:(98, 115)
scope:[('Global', '', (0, 999998))]
member:False
=======================
ID:5
Name:flatten_config
lines:(117, 126)
scope:[('Global', '', (0, 999998))]
member:False
=======================
ID:6
Name:transform_value
lines:(128, 150)
scope:[('Global', '', (0, 999998))]
member:False
=======================
ID:7
Name:transform_data
lines:(152, 214)
scope:[('Global', '', (0, 999998))]
member:False
=======================
ID:8
Name:outsideFunc
lines:(216, 217)
scope:[('Global', '', (0, 999998))]
member:False
=======================
ID:9
Name:__init__
lines:(219, 220)
scope:[('Class', 'outsideClass', (218, 220))]
member:True
=======================
ID:10
Name:__init__
lines:(228, 229)
scope:[('Class', 'Dumper', (222, 259)), ('Class', 'insideClass', (227, 229))]
member:True
=======================
ID:11
Name:represent_mapping
lines:(230, 259)
scope:[('Class', 'Dumper', (222, 259))]
member:True
=======================
ID:12
Name:insideFunc
lines:(231, 232)
scope:[('Class', 'Dumper', (222, 259)), ('Function', 'represent_mapping', (230, 259))]
member:False
=======================
ID:13
Name:migrate_config
lines:(262, 317)
scope:[('Global', '', (0, 999998))]
member:False
=======================
ID:14
Name:migrate_db
lines:(319, 344)
scope:[('Global', '', (0, 999998))]
member:False
=======================
ID:15
Name:migrate_state
lines:(346, 365)
scope:[('Global', '', (0, 999998))]
member:False
=======================
ID:16
Name:automigrate
lines:(370, 390)
scope:[('Global', '', (0, 999998))]
member:False
=======================
ID:17
Name:migrate_func
lines:(396, 413)
scope:[('Global', '', (0, 999998))]
member:False
=======================
ID:0
Name:util
lines:(-1, -1)
scope:[]
=======================
ID:1
Name:ui
lines:(-1, -1)
scope:[]
=======================
ID:2
Name:confit
lines:(-1, -1)
scope:[]
=======================
ID:3
Name:outsideClass
lines:(218, 220)
scope:[]
=======================
ID:4
Name:Dumper
lines:(222, 259)
scope:[]
=======================
ID:5
Name:insideClass
lines:(227, 229)
scope:[('Class', 'Dumper', (222, 259))]
=======================
Name:['os', 'environ', 'get']
line:36
scope:(0, 999998)
source:('member', -1)
tree: ( CallFunc ( Getattr ( Getattr ( Name ( 'os' )  )   ( 'environ' )  )   ( 'get' )  )   ( Const ( "'APPDATA'" )  )   ( None )   ( None )  ) 
=======================
Name:['Const: ( Const ( \'u\\\'\\\\nYou appear to be upgrading from beets 1.0 (or earlier) to 1.1. Your\\\\nconfiguration file has been migrated automatically to:\\\\n{newconfig}\\\\nEdit this file to configure beets. You might want to remove your\\\\nold-style ".beetsconfig" file now. See the documentation for more\\\\ndetails on the new configuration system:\\\\nhttp://beets.readthedocs.org/page/reference/config.html\\\\n\\\'\' )  ) ', 'strip']
line:53
scope:(0, 999998)
source:('member', -1)
tree: ( CallFunc ( Getattr ( Const ( 'u\'\\nYou appear to be upgrading from beets 1.0 (or earlier) to 1.1. Your\\nconfiguration file has been migrated automatically to:\\n{newconfig}\\nEdit this file to configure beets. You might want to remove your\\nold-style ".beetsconfig" file now. See the documentation for more\\ndetails on the new configuration system:\\nhttp://beets.readthedocs.org/page/reference/config.html\\n\'' )  )   ( 'strip' )  )   ( None )   ( None )  ) 
=======================
Name:['logging', 'getLogger']
line:57
scope:(0, 999998)
source:('import', 4)
tree: ( CallFunc ( Getattr ( Name ( 'logging' )  )   ( 'getLogger' )  )   ( Const ( "'beets'" )  )   ( None )   ( None )  ) 
=======================
Name:['iter']
line:61
scope:(60, 62)
source:-1
tree: ( CallFunc ( Name ( 'iter' )  )   ( Name ( 'iterable' )  )   ( None )   ( None )  ) 
=======================
Name:['itertools', 'izip_longest']
line:62
scope:(60, 62)
source:('import', 6)
tree: ( CallFunc ( Getattr ( Name ( 'itertools' )  )   ( 'izip_longest' )  )   ( Name ( 'args' )  )   ( None )  ) 
=======================
Name:['util', 'move']
line:69
scope:(64, 71)
source:('member', -1)
tree: ( CallFunc ( Getattr ( Name ( 'util' )  )   ( 'move' )  )   ( Name ( 'fn' )  )   ( CallFunc ( Getattr ( Const ( "u'{0}.old.{1}'" )  )   ( 'format' )  )   ( Name ( 'fn' )  )   ( CallFunc ( Name ( 'int' )  )   ( CallFunc ( Getattr ( Name ( 'time' )  )   ( 'time' )  )   ( None )   ( None )  )   ( None )   ( None )  )   ( None )   ( None )  )   ( Name ( 'True' )  )   ( None )   ( None )  ) 
=======================
Name:['Const: ( Const ( "u\'{0}.old.{1}\'" )  ) ', 'format']
line:70
scope:(64, 71)
source:('member', -1)
tree: ( CallFunc ( Getattr ( Const ( "u'{0}.old.{1}'" )  )   ( 'format' )  )   ( Name ( 'fn' )  )   ( CallFunc ( Name ( 'int' )  )   ( CallFunc ( Getattr ( Name ( 'time' )  )   ( 'time' )  )   ( None )   ( None )  )   ( None )   ( None )  )   ( None )   ( None )  ) 
=======================
Name:['int']
line:70
scope:(64, 71)
source:-1
tree: ( CallFunc ( Name ( 'int' )  )   ( CallFunc ( Getattr ( Name ( 'time' )  )   ( 'time' )  )   ( None )   ( None )  )   ( None )   ( None )  ) 
=======================
Name:['time', 'time']
line:70
scope:(64, 71)
source:('import', 5)
tree: ( CallFunc ( Getattr ( Name ( 'time' )  )   ( 'time' )  )   ( None )   ( None )  ) 
=======================
Name:['os', 'environ', 'get']
line:82
scope:(74, 96)
source:('member', -1)
tree: ( CallFunc ( Getattr ( Getattr ( Name ( 'os' )  )   ( 'environ' )  )   ( 'get' )  )   ( Const ( "'APPDATA'" )  )   ( None )   ( None )  ) 
=======================
Name:['os', 'path', 'expanduser']
line:86
scope:(85, 86)
source:('member', -1)
tree: ( CallFunc ( Getattr ( Getattr ( Name ( 'os' )  )   ( 'path' )  )   ( 'expanduser' )  )   ( CallFunc ( Getattr ( Getattr ( Name ( 'os' )  )   ( 'path' )  )   ( 'join' )  )   ( Name ( 'vals' )  )   ( None )  )   ( None )   ( None )  ) 
=======================
Name:['os', 'path', 'join']
line:86
scope:(85, 86)
source:('member', -1)
tree: ( CallFunc ( Getattr ( Getattr ( Name ( 'os' )  )   ( 'path' )  )   ( 'join' )  )   ( Name ( 'vals' )  )   ( None )  ) 
=======================
Name:['exp']
line:88
scope:(74, 96)
source:('function', 3)
tree: ( CallFunc ( Name ( 'exp' )  )   ( Const ( "'~'" )  )   ( Name ( 'DEFAULT_CONFIG_FILENAME_UNIX' )  )   ( None )   ( None )  ) 
=======================
Name:['os', 'path', 'exists']
line:89
scope:(74, 96)
source:('member', -1)
tree: ( CallFunc ( Getattr ( Getattr ( Name ( 'os' )  )   ( 'path' )  )   ( 'exists' )  )   ( Name ( 'config' )  )   ( None )   ( None )  ) 
=======================
Name:['exp']
line:90
scope:(74, 96)
source:('function', 3)
tree: ( CallFunc ( Name ( 'exp' )  )   ( Name ( 'windata' )  )   ( Name ( 'DEFAULT_CONFIG_FILENAME_WINDOWS' )  )   ( None )   ( None )  ) 
=======================
Name:['exp']
line:92
scope:(74, 96)
source:('function', 3)
tree: ( CallFunc ( Name ( 'exp' )  )   ( Const ( "'~'" )  )   ( Name ( 'DEFAULT_LIBRARY_FILENAME_UNIX' )  )   ( None )   ( None )  ) 
=======================
Name:['os', 'path', 'exists']
line:93
scope:(74, 96)
source:('member', -1)
tree: ( CallFunc ( Getattr ( Getattr ( Name ( 'os' )  )   ( 'path' )  )   ( 'exists' )  )   ( Name ( 'libpath' )  )   ( None )   ( None )  ) 
=======================
Name:['exp']
line:94
scope:(74, 96)
source:('function', 3)
tree: ( CallFunc ( Name ( 'exp' )  )   ( Name ( 'windata' )  )   ( Name ( 'DEFAULT_LIBRARY_FILENAME_WINDOWS' )  )   ( None )   ( None )  ) 
=======================
Name:['default_paths']
line:103
scope:(98, 115)
source:('function', 2)
tree: ( CallFunc ( Name ( 'default_paths' )  )   ( None )   ( None )  ) 
=======================
Name:['os', 'path', 'expanduser']
line:105
scope:(98, 115)
source:('member', -1)
tree: ( CallFunc ( Getattr ( Getattr ( Name ( 'os' )  )   ( 'path' )  )   ( 'expanduser' )  )   ( Subscript ( Getattr ( Name ( 'os' )  )   ( 'environ' )  )   ( 'OP_APPLY' )   ( Name ( 'CONFIG_PATH_VAR' )  )  )   ( None )   ( None )  ) 
=======================
Name:['ConfigParser', 'SafeConfigParser']
line:109
scope:(98, 115)
source:('import', 1)
tree: ( CallFunc ( Getattr ( Name ( 'ConfigParser' )  )   ( 'SafeConfigParser' )  )   ( None )   ( None )  ) 
=======================
Name:['os', 'path', 'exists']
line:110
scope:(98, 115)
source:('member', -1)
tree: ( CallFunc ( Getattr ( Getattr ( Name ( 'os' )  )   ( 'path' )  )   ( 'exists' )  )   ( CallFunc ( Getattr ( Name ( 'util' )  )   ( 'syspath' )  )   ( Name ( 'configpath' )  )   ( None )   ( None )  )   ( None )   ( None )  ) 
=======================
Name:['util', 'syspath']
line:110
scope:(98, 115)
source:('member', -1)
tree: ( CallFunc ( Getattr ( Name ( 'util' )  )   ( 'syspath' )  )   ( Name ( 'configpath' )  )   ( None )   ( None )  ) 
=======================
Name:['codecs', 'open']
line:111
scope:(98, 115)
source:('import', 2)
tree: ( CallFunc ( Getattr ( Name ( 'codecs' )  )   ( 'open' )  )   ( Name ( 'configpath' )  )   ( Const ( "'r'" )  )   ( Keyword ( 'encoding' )   ( Const ( "'utf-8'" )  )  )   ( None )   ( None )  ) 
=======================
Name:['config', 'readfp']
line:112
scope:(98, 115)
source:('member', -1)
tree: ( CallFunc ( Getattr ( Name ( 'config' )  )   ( 'readfp' )  )   ( Name ( 'f' )  )   ( None )   ( None )  ) 
=======================
Name:['confit', 'OrderedDict']
line:121
scope:(117, 126)
source:('member', -1)
tree: ( CallFunc ( Getattr ( Name ( 'confit' )  )   ( 'OrderedDict' )  )   ( None )   ( None )  ) 
=======================
Name:['config', 'sections']
line:122
scope:(117, 126)
source:('member', -1)
tree: ( CallFunc ( Getattr ( Name ( 'config' )  )   ( 'sections' )  )   ( None )   ( None )  ) 
=======================
Name:['confit', 'OrderedDict']
line:123
scope:(117, 126)
source:('member', -1)
tree: ( CallFunc ( Getattr ( Name ( 'confit' )  )   ( 'OrderedDict' )  )   ( None )   ( None )  ) 
=======================
Name:['config', 'options']
line:124
scope:(117, 126)
source:('member', -1)
tree: ( CallFunc ( Getattr ( Name ( 'config' )  )   ( 'options' )  )   ( Name ( 'section' )  )   ( None )   ( None )  ) 
=======================
Name:['config', 'get']
line:125
scope:(117, 126)
source:('member', -1)
tree: ( CallFunc ( Getattr ( Name ( 'config' )  )   ( 'get' )  )   ( Name ( 'section' )  )   ( Name ( 'option' )  )   ( Name ( 'True' )  )   ( None )   ( None )  ) 
=======================
Name:['value', 'lower']
line:133
scope:(128, 150)
source:('member', -1)
tree: ( CallFunc ( Getattr ( Name ( 'value' )  )   ( 'lower' )  )   ( None )   ( None )  ) 
=======================
Name:['value', 'lower']
line:135
scope:(128, 150)
source:('member', -1)
tree: ( CallFunc ( Getattr ( Name ( 'value' )  )   ( 'lower' )  )   ( None )   ( None )  ) 
=======================
Name:['int']
line:140
scope:(128, 150)
source:-1
tree: ( CallFunc ( Name ( 'int' )  )   ( Name ( 'value' )  )   ( None )   ( None )  ) 
=======================
Name:['float']
line:146
scope:(128, 150)
source:-1
tree: ( CallFunc ( Name ( 'float' )  )   ( Name ( 'value' )  )   ( None )   ( None )  ) 
=======================
Name:['confit', 'OrderedDict']
line:157
scope:(152, 214)
source:('member', -1)
tree: ( CallFunc ( Getattr ( Name ( 'confit' )  )   ( 'OrderedDict' )  )   ( None )   ( None )  ) 
=======================
Name:['data', 'items']
line:159
scope:(152, 214)
source:('member', -1)
tree: ( CallFunc ( Getattr ( Name ( 'data' )  )   ( 'items' )  )   ( None )   ( None )  ) 
=======================
Name:['pairs', 'items']
line:163
scope:(152, 214)
source:('member', -1)
tree: ( CallFunc ( Getattr ( Name ( 'pairs' )  )   ( 'items' )  )   ( None )   ( None )  ) 
=======================
Name:['transform_value']
line:164
scope:(152, 214)
source:('function', 6)
tree: ( CallFunc ( Name ( 'transform_value' )  )   ( Name ( 'value' )  )   ( None )   ( None )  ) 
=======================
Name:['key', 'startswith']
line:166
scope:(152, 214)
source:('member', -1)
tree: ( CallFunc ( Getattr ( Name ( 'key' )  )   ( 'startswith' )  )   ( Const ( "'import_'" )  )   ( None )   ( None )  ) 
=======================
Name:['confit', 'OrderedDict']
line:169
scope:(152, 214)
source:('member', -1)
tree: ( CallFunc ( Getattr ( Name ( 'confit' )  )   ( 'OrderedDict' )  )   ( None )   ( None )  ) 
=======================
Name:['value', 'split']
line:174
scope:(152, 214)
source:('member', -1)
tree: ( CallFunc ( Getattr ( Name ( 'value' )  )   ( 'split' )  )   ( None )   ( None )  ) 
=======================
Name:['PLUGIN_NAMES', 'get']
line:175
scope:(152, 214)
source:('member', -1)
tree: ( CallFunc ( Getattr ( Name ( 'PLUGIN_NAMES' )  )   ( 'get' )  )   ( Name ( 'p' )  )   ( Name ( 'p' )  )   ( None )   ( None )  ) 
=======================
Name:['Const: ( Const ( "\' \'" )  ) ', 'join']
line:176
scope:(152, 214)
source:('member', -1)
tree: ( CallFunc ( Getattr ( Const ( "' '" )  )   ( 'join' )  )   ( Name ( 'new_plugins' )  )   ( None )   ( None )  ) 
=======================
Name:['confit', 'OrderedDict']
line:180
scope:(152, 214)
source:('member', -1)
tree: ( CallFunc ( Getattr ( Name ( 'confit' )  )   ( 'OrderedDict' )  )   ( None )   ( None )  ) 
=======================
Name:['grouper']
line:181
scope:(152, 214)
source:('function', 0)
tree: ( CallFunc ( Name ( 'grouper' )  )   ( Const ( '2' )  )   ( CallFunc ( Getattr ( Name ( 'value' )  )   ( 'split' )  )   ( None )   ( None )  )   ( None )   ( None )  ) 
=======================
Name:['value', 'split']
line:181
scope:(152, 214)
source:('member', -1)
tree: ( CallFunc ( Getattr ( Name ( 'value' )  )   ( 'split' )  )   ( None )   ( None )  ) 
=======================
Name:['value', 'split']
line:189
scope:(152, 214)
source:('member', -1)
tree: ( CallFunc ( Getattr ( Name ( 'value' )  )   ( 'split' )  )   ( Const ( "':'" )  )   ( None )   ( None )  ) 
=======================
Name:['confit', 'OrderedDict']
line:196
scope:(152, 214)
source:('member', -1)
tree: ( CallFunc ( Getattr ( Name ( 'confit' )  )   ( 'OrderedDict' )  )   ( None )   ( None )  ) 
=======================
Name:['pairs', 'items']
line:197
scope:(152, 214)
source:('member', -1)
tree: ( CallFunc ( Getattr ( Name ( 'pairs' )  )   ( 'items' )  )   ( None )   ( None )  ) 
=======================
Name:['key', 'replace']
line:205
scope:(152, 214)
source:('member', -1)
tree: ( CallFunc ( Getattr ( Name ( 'key' )  )   ( 'replace' )  )   ( Const ( "'_'" )  )   ( Const ( "':'" )  )   ( None )   ( None )  ) 
=======================
Name:['key', 'startswith']
line:209
scope:(152, 214)
source:('member', -1)
tree: ( CallFunc ( Getattr ( Name ( 'key' )  )   ( 'startswith' )  )   ( Name ( 'IMPORTFEEDS_PREFIX' )  )   ( None )   ( None )  ) 
=======================
Name:['len']
line:210
scope:(152, 214)
source:-1
tree: ( CallFunc ( Name ( 'len' )  )   ( Name ( 'IMPORTFEEDS_PREFIX' )  )   ( None )   ( None )  ) 
=======================
Name:['transform_value']
line:212
scope:(152, 214)
source:('function', 6)
tree: ( CallFunc ( Name ( 'transform_value' )  )   ( Name ( 'value' )  )   ( None )   ( None )  ) 
=======================
Name:['yaml', 'MappingNode']
line:234
scope:(230, 259)
source:('import', 3)
tree: ( CallFunc ( Getattr ( Name ( 'yaml' )  )   ( 'MappingNode' )  )   ( Name ( 'tag' )  )   ( Name ( 'value' )  )   ( Keyword ( 'flow_style' )   ( Name ( 'flow_style' )  )  )   ( None )   ( None )  ) 
=======================
Name:['outsideFunc']
line:238
scope:(230, 259)
source:('function', 8)
tree: ( CallFunc ( Name ( 'outsideFunc' )  )   ( None )   ( None )  ) 
=======================
Name:['insideFunc']
line:239
scope:(230, 259)
source:('function', 12)
tree: ( CallFunc ( Name ( 'insideFunc' )  )   ( None )   ( None )  ) 
=======================
Name:['outsideClass']
line:240
scope:(230, 259)
source:('class', 3)
tree: ( CallFunc ( Name ( 'outsideClass' )  )   ( None )   ( None )  ) 
=======================
Name:['Dumper', 'insideClass']
line:241
scope:(230, 259)
source:('class', 5)
tree: ( CallFunc ( Getattr ( Name ( 'Dumper' )  )   ( 'insideClass' )  )   ( None )   ( None )  ) 
=======================
Name:['hasattr']
line:242
scope:(230, 259)
source:-1
tree: ( CallFunc ( Name ( 'hasattr' )  )   ( Name ( 'mapping' )  )   ( Const ( "'items'" )  )   ( None )   ( None )  ) 
=======================
Name:['list']
line:243
scope:(230, 259)
source:-1
tree: ( CallFunc ( Name ( 'list' )  )   ( CallFunc ( Getattr ( Name ( 'mapping' )  )   ( 'items' )  )   ( None )   ( None )  )   ( None )   ( None )  ) 
=======================
Name:['mapping', 'items']
line:243
scope:(230, 259)
source:('member', -1)
tree: ( CallFunc ( Getattr ( Name ( 'mapping' )  )   ( 'items' )  )   ( None )   ( None )  ) 
=======================
Name:['self', 'represent_data']
line:245
scope:(230, 259)
source:('member', -1)
tree: ( CallFunc ( Getattr ( Name ( 'self' )  )   ( 'represent_data' )  )   ( Name ( 'item_key' )  )   ( None )   ( None )  ) 
=======================
Name:['self', 'represent_data']
line:246
scope:(230, 259)
source:('member', -1)
tree: ( CallFunc ( Getattr ( Name ( 'self' )  )   ( 'represent_data' )  )   ( Name ( 'item_value' )  )   ( None )   ( None )  ) 
=======================
Name:['isinstance']
line:247
scope:(230, 259)
source:-1
tree: ( CallFunc ( Name ( 'isinstance' )  )   ( Name ( 'node_key' )  )   ( Getattr ( Name ( 'yaml' )  )   ( 'ScalarNode' )  )   ( None )   ( None )  ) 
=======================
Name:['isinstance']
line:250
scope:(230, 259)
source:-1
tree: ( CallFunc ( Name ( 'isinstance' )  )   ( Name ( 'node_value' )  )   ( Getattr ( Name ( 'yaml' )  )   ( 'ScalarNode' )  )   ( None )   ( None )  ) 
=======================
Name:['value', 'append']
line:253
scope:(230, 259)
source:('member', -1)
tree: ( CallFunc ( Getattr ( Name ( 'value' )  )   ( 'append' )  )   ( Tuple ( Name ( 'node_key' )  )   ( Name ( 'node_value' )  )  )   ( None )   ( None )  ) 
=======================
Name:['Dumper', 'add_representer']
line:260
scope:(0, 999998)
source:('member', -1)
tree: ( CallFunc ( Getattr ( Name ( 'Dumper' )  )   ( 'add_representer' )  )   ( Getattr ( Name ( 'confit' )  )   ( 'OrderedDict' )  )   ( Getattr ( Name ( 'Dumper' )  )   ( 'represent_dict' )  )   ( None )   ( None )  ) 
=======================
Name:['get_config']
line:270
scope:(262, 317)
source:('function', 4)
tree: ( CallFunc ( Name ( 'get_config' )  )   ( None )   ( None )  ) 
=======================
Name:['log', 'debug']
line:272
scope:(262, 317)
source:('member', -1)
tree: ( CallFunc ( Getattr ( Name ( 'log' )  )   ( 'debug' )  )   ( CallFunc ( Getattr ( Const ( "u'no config file found at {0}'" )  )   ( 'format' )  )   ( CallFunc ( Getattr ( Name ( 'util' )  )   ( 'displayable_path' )  )   ( Name ( 'configpath' )  )   ( None )   ( None )  )   ( None )   ( None )  )   ( None )   ( None )  ) 
=======================
Name:['Const: ( Const ( "u\'no config file found at {0}\'" )  ) ', 'format']
line:273
scope:(262, 317)
source:('member', -1)
tree: ( CallFunc ( Getattr ( Const ( "u'no config file found at {0}'" )  )   ( 'format' )  )   ( CallFunc ( Getattr ( Name ( 'util' )  )   ( 'displayable_path' )  )   ( Name ( 'configpath' )  )   ( None )   ( None )  )   ( None )   ( None )  ) 
=======================
Name:['util', 'displayable_path']
line:273
scope:(262, 317)
source:('member', -1)
tree: ( CallFunc ( Getattr ( Name ( 'util' )  )   ( 'displayable_path' )  )   ( Name ( 'configpath' )  )   ( None )   ( None )  ) 
=======================
Name:['os', 'path', 'join']
line:279
scope:(262, 317)
source:('member', -1)
tree: ( CallFunc ( Getattr ( Getattr ( Name ( 'os' )  )   ( 'path' )  )   ( 'join' )  )   ( CallFunc ( Getattr ( Getattr ( Name ( 'beets' )  )   ( 'config' )  )   ( 'config_dir' )  )   ( None )   ( None )  )   ( Getattr ( Name ( 'confit' )  )   ( 'CONFIG_FILENAME' )  )   ( None )   ( None )  ) 
=======================
Name:['beets', 'config', 'config_dir']
line:279
scope:(262, 317)
source:('member', -1)
tree: ( CallFunc ( Getattr ( Getattr ( Name ( 'beets' )  )   ( 'config' )  )   ( 'config_dir' )  )   ( None )   ( None )  ) 
=======================
Name:['os', 'path', 'exists']
line:280
scope:(262, 317)
source:('member', -1)
tree: ( CallFunc ( Getattr ( Getattr ( Name ( 'os' )  )   ( 'path' )  )   ( 'exists' )  )   ( Name ( 'destfn' )  )   ( None )   ( None )  ) 
=======================
Name:['log', 'debug']
line:282
scope:(262, 317)
source:('member', -1)
tree: ( CallFunc ( Getattr ( Name ( 'log' )  )   ( 'debug' )  )   ( CallFunc ( Getattr ( Const ( "u'moving old config aside: {0}'" )  )   ( 'format' )  )   ( CallFunc ( Getattr ( Name ( 'util' )  )   ( 'displayable_path' )  )   ( Name ( 'destfn' )  )   ( None )   ( None )  )   ( None )   ( None )  )   ( None )   ( None )  ) 
=======================
Name:['Const: ( Const ( "u\'moving old config aside: {0}\'" )  ) ', 'format']
line:283
scope:(262, 317)
source:('member', -1)
tree: ( CallFunc ( Getattr ( Const ( "u'moving old config aside: {0}'" )  )   ( 'format' )  )   ( CallFunc ( Getattr ( Name ( 'util' )  )   ( 'displayable_path' )  )   ( Name ( 'destfn' )  )   ( None )   ( None )  )   ( None )   ( None )  ) 
=======================
Name:['util', 'displayable_path']
line:283
scope:(262, 317)
source:('member', -1)
tree: ( CallFunc ( Getattr ( Name ( 'util' )  )   ( 'displayable_path' )  )   ( Name ( 'destfn' )  )   ( None )   ( None )  ) 
=======================
Name:['_displace']
line:285
scope:(262, 317)
source:('function', 1)
tree: ( CallFunc ( Name ( '_displace' )  )   ( Name ( 'destfn' )  )   ( None )   ( None )  ) 
=======================
Name:['log', 'debug']
line:290
scope:(262, 317)
source:('member', -1)
tree: ( CallFunc ( Getattr ( Name ( 'log' )  )   ( 'debug' )  )   ( CallFunc ( Getattr ( Const ( "u'migrating config file {0}'" )  )   ( 'format' )  )   ( CallFunc ( Getattr ( Name ( 'util' )  )   ( 'displayable_path' )  )   ( Name ( 'configpath' )  )   ( None )   ( None )  )   ( None )   ( None )  )   ( None )   ( None )  ) 
=======================
Name:['Const: ( Const ( "u\'migrating config file {0}\'" )  ) ', 'format']
line:291
scope:(262, 317)
source:('member', -1)
tree: ( CallFunc ( Getattr ( Const ( "u'migrating config file {0}'" )  )   ( 'format' )  )   ( CallFunc ( Getattr ( Name ( 'util' )  )   ( 'displayable_path' )  )   ( Name ( 'configpath' )  )   ( None )   ( None )  )   ( None )   ( None )  ) 
=======================
Name:['util', 'displayable_path']
line:291
scope:(262, 317)
source:('member', -1)
tree: ( CallFunc ( Getattr ( Name ( 'util' )  )   ( 'displayable_path' )  )   ( Name ( 'configpath' )  )   ( None )   ( None )  ) 
=======================
Name:['transform_data']
line:296
scope:(262, 317)
source:('function', 7)
tree: ( CallFunc ( Name ( 'transform_data' )  )   ( CallFunc ( Name ( 'flatten_config' )  )   ( Name ( 'config' )  )   ( None )   ( None )  )   ( None )   ( None )  ) 
=======================
Name:['flatten_config']
line:296
scope:(262, 317)
source:('function', 5)
tree: ( CallFunc ( Name ( 'flatten_config' )  )   ( Name ( 'config' )  )   ( None )   ( None )  ) 
=======================
Name:['yaml', 'dump']
line:300
scope:(262, 317)
source:('import', 3)
tree: ( CallFunc ( Getattr ( Name ( 'yaml' )  )   ( 'dump' )  )   ( Name ( 'data' )  )   ( Keyword ( 'Dumper' )   ( Name ( 'Dumper' )  )  )   ( Keyword ( 'default_flow_style' )   ( Name ( 'False' )  )  )   ( Keyword ( 'indent' )   ( Const ( '4' )  )  )   ( Keyword ( 'width' )   ( Const ( '1000' )  )  )   ( None )   ( None )  ) 
=======================
Name:['re', 'sub']
line:308
scope:(262, 317)
source:('import', 7)
tree: ( CallFunc ( Getattr ( Name ( 're' )  )   ( 'sub' )  )   ( Const ( "'(\\\\n\\\\w+:\\\\n    [^-\\\\s])'" )  )   ( Const ( "'\\n\\\\1'" )  )   ( Name ( 'yaml_out' )  )   ( None )   ( None )  ) 
=======================
Name:['log', 'debug']
line:312
scope:(262, 317)
source:('member', -1)
tree: ( CallFunc ( Getattr ( Name ( 'log' )  )   ( 'debug' )  )   ( CallFunc ( Getattr ( Const ( "u'writing migrated config to {0}'" )  )   ( 'format' )  )   ( CallFunc ( Getattr ( Name ( 'util' )  )   ( 'displayable_path' )  )   ( Name ( 'destfn' )  )   ( None )   ( None )  )   ( None )   ( None )  )   ( None )   ( None )  ) 
=======================
Name:['Const: ( Const ( "u\'writing migrated config to {0}\'" )  ) ', 'format']
line:313
scope:(262, 317)
source:('member', -1)
tree: ( CallFunc ( Getattr ( Const ( "u'writing migrated config to {0}'" )  )   ( 'format' )  )   ( CallFunc ( Getattr ( Name ( 'util' )  )   ( 'displayable_path' )  )   ( Name ( 'destfn' )  )   ( None )   ( None )  )   ( None )   ( None )  ) 
=======================
Name:['util', 'displayable_path']
line:313
scope:(262, 317)
source:('member', -1)
tree: ( CallFunc ( Getattr ( Name ( 'util' )  )   ( 'displayable_path' )  )   ( Name ( 'destfn' )  )   ( None )   ( None )  ) 
=======================
Name:['open']
line:315
scope:(262, 317)
source:-1
tree: ( CallFunc ( Name ( 'open' )  )   ( Name ( 'destfn' )  )   ( Const ( "'w'" )  )   ( None )   ( None )  ) 
=======================
Name:['f', 'write']
line:316
scope:(262, 317)
source:('member', -1)
tree: ( CallFunc ( Getattr ( Name ( 'f' )  )   ( 'write' )  )   ( Name ( 'yaml_out' )  )   ( None )   ( None )  ) 
=======================
Name:['default_paths']
line:323
scope:(319, 344)
source:('function', 2)
tree: ( CallFunc ( Name ( 'default_paths' )  )   ( None )   ( None )  ) 
=======================
Name:[' ( Subscript ( Getattr ( Name ( \'beets\' )  )   ( \'config\' )  )   ( \'OP_APPLY\' )   ( Const ( "\'library\'" )  )  ) ', 'as_filename']
line:324
scope:(319, 344)
source:('member', -1)
tree: ( CallFunc ( Getattr ( Subscript ( Getattr ( Name ( 'beets' )  )   ( 'config' )  )   ( 'OP_APPLY' )   ( Const ( "'library'" )  )  )   ( 'as_filename' )  )   ( None )   ( None )  ) 
=======================
Name:['os', 'path', 'exists']
line:326
scope:(319, 344)
source:('member', -1)
tree: ( CallFunc ( Getattr ( Getattr ( Name ( 'os' )  )   ( 'path' )  )   ( 'exists' )  )   ( Name ( 'srcfn' )  )   ( None )   ( None )  ) 
=======================
Name:['os', 'path', 'exists']
line:331
scope:(319, 344)
source:('member', -1)
tree: ( CallFunc ( Getattr ( Getattr ( Name ( 'os' )  )   ( 'path' )  )   ( 'exists' )  )   ( Name ( 'destfn' )  )   ( None )   ( None )  ) 
=======================
Name:['log', 'debug']
line:333
scope:(319, 344)
source:('member', -1)
tree: ( CallFunc ( Getattr ( Name ( 'log' )  )   ( 'debug' )  )   ( CallFunc ( Getattr ( Const ( "u'moving old database aside: {0}'" )  )   ( 'format' )  )   ( CallFunc ( Getattr ( Name ( 'util' )  )   ( 'displayable_path' )  )   ( Name ( 'destfn' )  )   ( None )   ( None )  )   ( None )   ( None )  )   ( None )   ( None )  ) 
=======================
Name:['Const: ( Const ( "u\'moving old database aside: {0}\'" )  ) ', 'format']
line:334
scope:(319, 344)
source:('member', -1)
tree: ( CallFunc ( Getattr ( Const ( "u'moving old database aside: {0}'" )  )   ( 'format' )  )   ( CallFunc ( Getattr ( Name ( 'util' )  )   ( 'displayable_path' )  )   ( Name ( 'destfn' )  )   ( None )   ( None )  )   ( None )   ( None )  ) 
=======================
Name:['util', 'displayable_path']
line:334
scope:(319, 344)
source:('member', -1)
tree: ( CallFunc ( Getattr ( Name ( 'util' )  )   ( 'displayable_path' )  )   ( Name ( 'destfn' )  )   ( None )   ( None )  ) 
=======================
Name:['_displace']
line:336
scope:(319, 344)
source:('function', 1)
tree: ( CallFunc ( Name ( '_displace' )  )   ( Name ( 'destfn' )  )   ( None )   ( None )  ) 
=======================
Name:['log', 'debug']
line:340
scope:(319, 344)
source:('member', -1)
tree: ( CallFunc ( Getattr ( Name ( 'log' )  )   ( 'debug' )  )   ( CallFunc ( Getattr ( Const ( "u'copying database from {0} to {1}'" )  )   ( 'format' )  )   ( CallFunc ( Getattr ( Name ( 'util' )  )   ( 'displayable_path' )  )   ( Name ( 'srcfn' )  )   ( None )   ( None )  )   ( CallFunc ( Getattr ( Name ( 'util' )  )   ( 'displayable_path' )  )   ( Name ( 'destfn' )  )   ( None )   ( None )  )   ( None )   ( None )  )   ( None )   ( None )  ) 
=======================
Name:['Const: ( Const ( "u\'copying database from {0} to {1}\'" )  ) ', 'format']
line:341
scope:(319, 344)
source:('member', -1)
tree: ( CallFunc ( Getattr ( Const ( "u'copying database from {0} to {1}'" )  )   ( 'format' )  )   ( CallFunc ( Getattr ( Name ( 'util' )  )   ( 'displayable_path' )  )   ( Name ( 'srcfn' )  )   ( None )   ( None )  )   ( CallFunc ( Getattr ( Name ( 'util' )  )   ( 'displayable_path' )  )   ( Name ( 'destfn' )  )   ( None )   ( None )  )   ( None )   ( None )  ) 
=======================
Name:['util', 'displayable_path']
line:341
scope:(319, 344)
source:('member', -1)
tree: ( CallFunc ( Getattr ( Name ( 'util' )  )   ( 'displayable_path' )  )   ( Name ( 'srcfn' )  )   ( None )   ( None )  ) 
=======================
Name:['util', 'displayable_path']
line:341
scope:(319, 344)
source:('member', -1)
tree: ( CallFunc ( Getattr ( Name ( 'util' )  )   ( 'displayable_path' )  )   ( Name ( 'destfn' )  )   ( None )   ( None )  ) 
=======================
Name:['util', 'copy']
line:343
scope:(319, 344)
source:('member', -1)
tree: ( CallFunc ( Getattr ( Name ( 'util' )  )   ( 'copy' )  )   ( Name ( 'srcfn' )  )   ( Name ( 'destfn' )  )   ( None )   ( None )  ) 
=======================
Name:['os', 'path', 'expanduser']
line:350
scope:(346, 365)
source:('member', -1)
tree: ( CallFunc ( Getattr ( Getattr ( Name ( 'os' )  )   ( 'path' )  )   ( 'expanduser' )  )   ( CallFunc ( Getattr ( Getattr ( Name ( 'os' )  )   ( 'path' )  )   ( 'join' )  )   ( Const ( "'~'" )  )   ( Const ( "'.beetsstate'" )  )   ( None )   ( None )  )   ( None )   ( None )  ) 
=======================
Name:['os', 'path', 'join']
line:350
scope:(346, 365)
source:('member', -1)
tree: ( CallFunc ( Getattr ( Getattr ( Name ( 'os' )  )   ( 'path' )  )   ( 'join' )  )   ( Const ( "'~'" )  )   ( Const ( "'.beetsstate'" )  )   ( None )   ( None )  ) 
=======================
Name:['os', 'path', 'exists']
line:351
scope:(346, 365)
source:('member', -1)
tree: ( CallFunc ( Getattr ( Getattr ( Name ( 'os' )  )   ( 'path' )  )   ( 'exists' )  )   ( Name ( 'srcfn' )  )   ( None )   ( None )  ) 
=======================
Name:[' ( Subscript ( Getattr ( Name ( \'beets\' )  )   ( \'config\' )  )   ( \'OP_APPLY\' )   ( Const ( "\'statefile\'" )  )  ) ', 'as_filename']
line:354
scope:(346, 365)
source:('member', -1)
tree: ( CallFunc ( Getattr ( Subscript ( Getattr ( Name ( 'beets' )  )   ( 'config' )  )   ( 'OP_APPLY' )   ( Const ( "'statefile'" )  )  )   ( 'as_filename' )  )   ( None )   ( None )  ) 
=======================
Name:['os', 'path', 'exists']
line:355
scope:(346, 365)
source:('member', -1)
tree: ( CallFunc ( Getattr ( Getattr ( Name ( 'os' )  )   ( 'path' )  )   ( 'exists' )  )   ( Name ( 'destfn' )  )   ( None )   ( None )  ) 
=======================
Name:['_displace']
line:357
scope:(346, 365)
source:('function', 1)
tree: ( CallFunc ( Name ( '_displace' )  )   ( Name ( 'destfn' )  )   ( None )   ( None )  ) 
=======================
Name:['log', 'debug']
line:361
scope:(346, 365)
source:('member', -1)
tree: ( CallFunc ( Getattr ( Name ( 'log' )  )   ( 'debug' )  )   ( CallFunc ( Getattr ( Const ( "u'copying state file from {0} to {1}'" )  )   ( 'format' )  )   ( CallFunc ( Getattr ( Name ( 'util' )  )   ( 'displayable_path' )  )   ( Name ( 'srcfn' )  )   ( None )   ( None )  )   ( CallFunc ( Getattr ( Name ( 'util' )  )   ( 'displayable_path' )  )   ( Name ( 'destfn' )  )   ( None )   ( None )  )   ( None )   ( None )  )   ( None )   ( None )  ) 
=======================
Name:['Const: ( Const ( "u\'copying state file from {0} to {1}\'" )  ) ', 'format']
line:362
scope:(346, 365)
source:('member', -1)
tree: ( CallFunc ( Getattr ( Const ( "u'copying state file from {0} to {1}'" )  )   ( 'format' )  )   ( CallFunc ( Getattr ( Name ( 'util' )  )   ( 'displayable_path' )  )   ( Name ( 'srcfn' )  )   ( None )   ( None )  )   ( CallFunc ( Getattr ( Name ( 'util' )  )   ( 'displayable_path' )  )   ( Name ( 'destfn' )  )   ( None )   ( None )  )   ( None )   ( None )  ) 
=======================
Name:['util', 'displayable_path']
line:362
scope:(346, 365)
source:('member', -1)
tree: ( CallFunc ( Getattr ( Name ( 'util' )  )   ( 'displayable_path' )  )   ( Name ( 'srcfn' )  )   ( None )   ( None )  ) 
=======================
Name:['util', 'displayable_path']
line:362
scope:(346, 365)
source:('member', -1)
tree: ( CallFunc ( Getattr ( Name ( 'util' )  )   ( 'displayable_path' )  )   ( Name ( 'destfn' )  )   ( None )   ( None )  ) 
=======================
Name:['util', 'copy']
line:364
scope:(346, 365)
source:('member', -1)
tree: ( CallFunc ( Getattr ( Name ( 'util' )  )   ( 'copy' )  )   ( Name ( 'srcfn' )  )   ( Name ( 'destfn' )  )   ( None )   ( None )  ) 
=======================
Name:['migrate_config']
line:374
scope:(370, 390)
source:('function', 13)
tree: ( CallFunc ( Name ( 'migrate_config' )  )   ( None )   ( None )  ) 
=======================
Name:['migrate_db']
line:375
scope:(370, 390)
source:('function', 14)
tree: ( CallFunc ( Name ( 'migrate_db' )  )   ( None )   ( None )  ) 
=======================
Name:['migrate_state']
line:376
scope:(370, 390)
source:('function', 15)
tree: ( CallFunc ( Name ( 'migrate_state' )  )   ( None )   ( None )  ) 
=======================
Name:['ui', 'print_']
line:379
scope:(370, 390)
source:('member', -1)
tree: ( CallFunc ( Getattr ( Name ( 'ui' )  )   ( 'print_' )  )   ( CallFunc ( Getattr ( Name ( 'ui' )  )   ( 'colorize' )  )   ( Const ( "'fuchsia'" )  )   ( Const ( "u'MIGRATED CONFIGURATION'" )  )   ( None )   ( None )  )   ( None )   ( None )  ) 
=======================
Name:['ui', 'colorize']
line:379
scope:(370, 390)
source:('member', -1)
tree: ( CallFunc ( Getattr ( Name ( 'ui' )  )   ( 'colorize' )  )   ( Const ( "'fuchsia'" )  )   ( Const ( "u'MIGRATED CONFIGURATION'" )  )   ( None )   ( None )  ) 
=======================
Name:['ui', 'print_']
line:381
scope:(370, 390)
source:('member', -1)
tree: ( CallFunc ( Getattr ( Name ( 'ui' )  )   ( 'print_' )  )   ( CallFunc ( Getattr ( Name ( 'CONFIG_MIGRATED_MESSAGE' )  )   ( 'format' )  )   ( Keyword ( 'newconfig' )   ( CallFunc ( Getattr ( Name ( 'util' )  )   ( 'displayable_path' )  )   ( Name ( 'config_fn' )  )   ( None )   ( None )  )  )   ( None )   ( None )  )   ( None )   ( None )  ) 
=======================
Name:['CONFIG_MIGRATED_MESSAGE', 'format']
line:382
scope:(370, 390)
source:('member', -1)
tree: ( CallFunc ( Getattr ( Name ( 'CONFIG_MIGRATED_MESSAGE' )  )   ( 'format' )  )   ( Keyword ( 'newconfig' )   ( CallFunc ( Getattr ( Name ( 'util' )  )   ( 'displayable_path' )  )   ( Name ( 'config_fn' )  )   ( None )   ( None )  )  )   ( None )   ( None )  ) 
=======================
Name:['util', 'displayable_path']
line:382
scope:(370, 390)
source:('member', -1)
tree: ( CallFunc ( Getattr ( Name ( 'util' )  )   ( 'displayable_path' )  )   ( Name ( 'config_fn' )  )   ( None )   ( None )  ) 
=======================
Name:['ui', 'print_']
line:385
scope:(370, 390)
source:('member', -1)
tree: ( CallFunc ( Getattr ( Name ( 'ui' )  )   ( 'print_' )  )   ( CallFunc ( Getattr ( Name ( 'DB_MIGRATED_MESSAGE' )  )   ( 'format' )  )   ( Keyword ( 'newdb' )   ( CallFunc ( Getattr ( Name ( 'util' )  )   ( 'displayable_path' )  )   ( Name ( 'db_fn' )  )   ( None )   ( None )  )  )   ( None )   ( None )  )   ( None )   ( None )  ) 
=======================
Name:['DB_MIGRATED_MESSAGE', 'format']
line:386
scope:(370, 390)
source:('member', -1)
tree: ( CallFunc ( Getattr ( Name ( 'DB_MIGRATED_MESSAGE' )  )   ( 'format' )  )   ( Keyword ( 'newdb' )   ( CallFunc ( Getattr ( Name ( 'util' )  )   ( 'displayable_path' )  )   ( Name ( 'db_fn' )  )   ( None )   ( None )  )  )   ( None )   ( None )  ) 
=======================
Name:['util', 'displayable_path']
line:386
scope:(370, 390)
source:('member', -1)
tree: ( CallFunc ( Getattr ( Name ( 'util' )  )   ( 'displayable_path' )  )   ( Name ( 'db_fn' )  )   ( None )   ( None )  ) 
=======================
Name:['ui', 'input_']
line:389
scope:(370, 390)
source:('member', -1)
tree: ( CallFunc ( Getattr ( Name ( 'ui' )  )   ( 'input_' )  )   ( CallFunc ( Getattr ( Name ( 'ui' )  )   ( 'colorize' )  )   ( Const ( "'fuchsia'" )  )   ( Const ( "u'Press ENTER to continue:'" )  )   ( None )   ( None )  )   ( None )   ( None )  ) 
=======================
Name:['ui', 'colorize']
line:389
scope:(370, 390)
source:('member', -1)
tree: ( CallFunc ( Getattr ( Name ( 'ui' )  )   ( 'colorize' )  )   ( Const ( "'fuchsia'" )  )   ( Const ( "u'Press ENTER to continue:'" )  )   ( None )   ( None )  ) 
=======================
Name:['ui', 'print_']
line:390
scope:(370, 390)
source:('member', -1)
tree: ( CallFunc ( Getattr ( Name ( 'ui' )  )   ( 'print_' )  )   ( None )   ( None )  ) 
=======================
Name:['ui', 'Subcommand']
line:395
scope:(0, 999998)
source:('member', -1)
tree: ( CallFunc ( Getattr ( Name ( 'ui' )  )   ( 'Subcommand' )  )   ( Const ( "'migrate'" )  )   ( Keyword ( 'help' )   ( Const ( "'convert legacy config'" )  )  )   ( None )   ( None )  ) 
=======================
Name:['migrate_config']
line:400
scope:(396, 413)
source:('function', 13)
tree: ( CallFunc ( Name ( 'migrate_config' )  )   ( Keyword ( 'replace' )   ( Name ( 'True' )  )  )   ( None )   ( None )  ) 
=======================
Name:['log', 'info']
line:402
scope:(396, 413)
source:('member', -1)
tree: ( CallFunc ( Getattr ( Name ( 'log' )  )   ( 'info' )  )   ( CallFunc ( Getattr ( Const ( "u'Migrated configuration to: {0}'" )  )   ( 'format' )  )   ( CallFunc ( Getattr ( Name ( 'util' )  )   ( 'displayable_path' )  )   ( Name ( 'config_fn' )  )   ( None )   ( None )  )   ( None )   ( None )  )   ( None )   ( None )  ) 
=======================
Name:['Const: ( Const ( "u\'Migrated configuration to: {0}\'" )  ) ', 'format']
line:403
scope:(396, 413)
source:('member', -1)
tree: ( CallFunc ( Getattr ( Const ( "u'Migrated configuration to: {0}'" )  )   ( 'format' )  )   ( CallFunc ( Getattr ( Name ( 'util' )  )   ( 'displayable_path' )  )   ( Name ( 'config_fn' )  )   ( None )   ( None )  )   ( None )   ( None )  ) 
=======================
Name:['util', 'displayable_path']
line:403
scope:(396, 413)
source:('member', -1)
tree: ( CallFunc ( Getattr ( Name ( 'util' )  )   ( 'displayable_path' )  )   ( Name ( 'config_fn' )  )   ( None )   ( None )  ) 
=======================
Name:['migrate_db']
line:405
scope:(396, 413)
source:('function', 14)
tree: ( CallFunc ( Name ( 'migrate_db' )  )   ( Keyword ( 'replace' )   ( Name ( 'True' )  )  )   ( None )   ( None )  ) 
=======================
Name:['log', 'info']
line:407
scope:(396, 413)
source:('member', -1)
tree: ( CallFunc ( Getattr ( Name ( 'log' )  )   ( 'info' )  )   ( CallFunc ( Getattr ( Const ( "u'Migrated library database to: {0}'" )  )   ( 'format' )  )   ( CallFunc ( Getattr ( Name ( 'util' )  )   ( 'displayable_path' )  )   ( Name ( 'db_fn' )  )   ( None )   ( None )  )   ( None )   ( None )  )   ( None )   ( None )  ) 
=======================
Name:['Const: ( Const ( "u\'Migrated library database to: {0}\'" )  ) ', 'format']
line:408
scope:(396, 413)
source:('member', -1)
tree: ( CallFunc ( Getattr ( Const ( "u'Migrated library database to: {0}'" )  )   ( 'format' )  )   ( CallFunc ( Getattr ( Name ( 'util' )  )   ( 'displayable_path' )  )   ( Name ( 'db_fn' )  )   ( None )   ( None )  )   ( None )   ( None )  ) 
=======================
Name:['util', 'displayable_path']
line:408
scope:(396, 413)
source:('member', -1)
tree: ( CallFunc ( Getattr ( Name ( 'util' )  )   ( 'displayable_path' )  )   ( Name ( 'db_fn' )  )   ( None )   ( None )  ) 
=======================
Name:['migrate_state']
line:410
scope:(396, 413)
source:('function', 15)
tree: ( CallFunc ( Name ( 'migrate_state' )  )   ( Keyword ( 'replace' )   ( Name ( 'True' )  )  )   ( None )   ( None )  ) 
=======================
Name:['log', 'info']
line:412
scope:(396, 413)
source:('member', -1)
tree: ( CallFunc ( Getattr ( Name ( 'log' )  )   ( 'info' )  )   ( CallFunc ( Getattr ( Const ( "u'Migrated state file to: {0}'" )  )   ( 'format' )  )   ( CallFunc ( Getattr ( Name ( 'util' )  )   ( 'displayable_path' )  )   ( Name ( 'state_fn' )  )   ( None )   ( None )  )   ( None )   ( None )  )   ( None )   ( None )  ) 
=======================
Name:['Const: ( Const ( "u\'Migrated state file to: {0}\'" )  ) ', 'format']
line:413
scope:(396, 413)
source:('member', -1)
tree: ( CallFunc ( Getattr ( Const ( "u'Migrated state file to: {0}'" )  )   ( 'format' )  )   ( CallFunc ( Getattr ( Name ( 'util' )  )   ( 'displayable_path' )  )   ( Name ( 'state_fn' )  )   ( None )   ( None )  )   ( None )   ( None )  ) 
=======================
Name:['util', 'displayable_path']
line:413
scope:(396, 413)
source:('member', -1)
tree: ( CallFunc ( Getattr ( Name ( 'util' )  )   ( 'displayable_path' )  )   ( Name ( 'state_fn' )  )   ( None )   ( None )  ) 
=======================

Module
'Conversion from legacy (pre-1.1) configuration to Confit/YAML\nconfiguration.\n'

Stmt
	Import
		[('os', None)]


	Import
		[('ConfigParser', None)]


	Import
		[('codecs', None)]


	Import
		[('yaml', None)]


	Import
		[('logging', None)]


	Import
		[('time', None)]


	Import
		[('itertools', None)]


	Import
		[('re', None)]


	Import
		[('beets', None)]


	From
		'beets'

		[('util', None)]

		0


	From
		'beets'

		[('ui', None)]

		0


	From
		'beets.util'

		[('confit', None)]

		0


	Assign
		AssName
			'CONFIG_PATH_VAR'


		Const
			"'BEETSCONFIG'"



	Assign
		AssName
			'DEFAULT_CONFIG_FILENAME_UNIX'


		Const
			"'.beetsconfig'"



	Assign
		AssName
			'DEFAULT_CONFIG_FILENAME_WINDOWS'


		Const
			"'beetsconfig.ini'"



	Assign
		AssName
			'DEFAULT_LIBRARY_FILENAME_UNIX'


		Const
			"'.beetsmusic.blb'"



	Assign
		AssName
			'DEFAULT_LIBRARY_FILENAME_WINDOWS'


		Const
			"'beetsmusic.blb'"



	Assign
		AssName
			'WINDOWS_BASEDIR'


		Or
			CallFunc
				Getattr
					Getattr
						Name
							'os'


						'environ'


					'get'


				Const
					"'APPDATA'"


				None

				None


			Const
				"'~'"




	Assign
		AssName
			'OLD_CONFIG_SUFFIX'


		Const
			"'.old'"



	Assign
		AssName
			'PLUGIN_NAMES'


		Dict
			Const
				"'rdm'"


			Const
				"'random'"


			Const
				"'fuzzy_search'"


			Const
				"'fuzzy'"




	Assign
		AssName
			'AUTO_KEYS'


		Tuple
			Const
				"'automatic'"


			Const
				"'autofetch'"


			Const
				"'autoembed'"


			Const
				"'autoscrub'"




	Assign
		AssName
			'IMPORTFEEDS_PREFIX'


		Const
			"'feeds_'"



	Assign
		AssName
			'CONFIG_MIGRATED_MESSAGE'


		CallFunc
			Getattr
				Const
					'u\'\\nYou appear to be upgrading from beets 1.0 (or earlier) to 1.1. Your\\nconfiguration file has been migrated automatically to:\\n{newconfig}\\nEdit this file to configure beets. You might want to remove your\\nold-style ".beetsconfig" file now. See the documentation for more\\ndetails on the new configuration system:\\nhttp://beets.readthedocs.org/page/reference/config.html\\n\''


				'strip'


			None

			None



	Assign
		AssName
			'DB_MIGRATED_MESSAGE'


		Const
			"u'Your database file has also been copied to:\\n{newdb}'"



	Assign
		AssName
			'YAML_COMMENT'


		Const
			"'# Automatically migrated from legacy .beetsconfig.\\n\\n'"



	Assign
		AssName
			'log'


		CallFunc
			Getattr
				Name
					'logging'


				'getLogger'


			Const
				"'beets'"


			None

			None



	Function
		'grouper'

		'n'

		'iterable'

		0

		Stmt
			Assign
				AssName
					'args'


				Mul
					List
						CallFunc
							Name
								'iter'


							Name
								'iterable'


							None

							None



					Name
						'n'




			Return
				CallFunc
					Getattr
						Name
							'itertools'


						'izip_longest'


					Name
						'args'


					None





	Function
		'_displace'

		'fn'

		0

		Stmt
			Discard
				CallFunc
					Getattr
						Name
							'util'


						'move'


					Name
						'fn'


					CallFunc
						Getattr
							Const
								"u'{0}.old.{1}'"


							'format'


						Name
							'fn'


						CallFunc
							Name
								'int'


							CallFunc
								Getattr
									Name
										'time'


									'time'


								None

								None


							None

							None


						None

						None


					Name
						'True'


					None

					None





	Function
		'default_paths'

		0

		Stmt
			Assign
				AssName
					'windows'


				Compare
					Getattr
						Getattr
							Name
								'os'


							'path'


						'__name__'


					'=='

					Const
						"'ntpath'"




			If
				Name
					'windows'


				Stmt
					Assign
						AssName
							'windata'


						Or
							CallFunc
								Getattr
									Getattr
										Name
											'os'


										'environ'


									'get'


								Const
									"'APPDATA'"


								None

								None


							Const
								"'~'"





				None


			Function
				'exp'

				'vals'

				4

				Stmt
					Return
						CallFunc
							Getattr
								Getattr
									Name
										'os'


									'path'


								'expanduser'


							CallFunc
								Getattr
									Getattr
										Name
											'os'


										'path'


									'join'


								Name
									'vals'


								None


							None

							None





			Assign
				AssName
					'config'


				CallFunc
					Name
						'exp'


					Const
						"'~'"


					Name
						'DEFAULT_CONFIG_FILENAME_UNIX'


					None

					None



			If
				And
					Name
						'windows'


					Not
						CallFunc
							Getattr
								Getattr
									Name
										'os'


									'path'


								'exists'


							Name
								'config'


							None

							None




				Stmt
					Assign
						AssName
							'config'


						CallFunc
							Name
								'exp'


							Name
								'windata'


							Name
								'DEFAULT_CONFIG_FILENAME_WINDOWS'


							None

							None




				None


			Assign
				AssName
					'libpath'


				CallFunc
					Name
						'exp'


					Const
						"'~'"


					Name
						'DEFAULT_LIBRARY_FILENAME_UNIX'


					None

					None



			If
				And
					Name
						'windows'


					Not
						CallFunc
							Getattr
								Getattr
									Name
										'os'


									'path'


								'exists'


							Name
								'libpath'


							None

							None




				Stmt
					Assign
						AssName
							'libpath'


						CallFunc
							Name
								'exp'


							Name
								'windata'


							Name
								'DEFAULT_LIBRARY_FILENAME_WINDOWS'


							None

							None




				None


			Return
				Tuple
					Name
						'config'


					Name
						'libpath'






	Function
		'get_config'

		0

		Stmt
			Assign
				AssTuple
					AssName
						'default_config'


					AssName
						'default_libpath'



				CallFunc
					Name
						'default_paths'


					None

					None



			If
				Compare
					Name
						'CONFIG_PATH_VAR'


					'in'

					Getattr
						Name
							'os'


						'environ'



				Stmt
					Assign
						AssName
							'configpath'


						CallFunc
							Getattr
								Getattr
									Name
										'os'


									'path'


								'expanduser'


							Subscript
								Getattr
									Name
										'os'


									'environ'


								'OP_APPLY'

								Name
									'CONFIG_PATH_VAR'



							None

							None




				Stmt
					Assign
						AssName
							'configpath'


						Name
							'default_config'





			Assign
				AssName
					'config'


				CallFunc
					Getattr
						Name
							'ConfigParser'


						'SafeConfigParser'


					None

					None



			If
				CallFunc
					Getattr
						Getattr
							Name
								'os'


							'path'


						'exists'


					CallFunc
						Getattr
							Name
								'util'


							'syspath'


						Name
							'configpath'


						None

						None


					None

					None


				Stmt
					With
						CallFunc
							Getattr
								Name
									'codecs'


								'open'


							Name
								'configpath'


							Const
								"'r'"


							Keyword
								'encoding'

								Const
									"'utf-8'"



							None

							None


						AssName
							'f'


						Stmt
							Discard
								CallFunc
									Getattr
										Name
											'config'


										'readfp'


									Name
										'f'


									None

									None





					Return
						Tuple
							Name
								'config'


							Name
								'configpath'





				Stmt
					Return
						Tuple
							Name
								'None'


							Name
								'configpath'








	Function
		'flatten_config'

		'config'

		0

		Stmt
			Assign
				AssName
					'out'


				CallFunc
					Getattr
						Name
							'confit'


						'OrderedDict'


					None

					None



			For
				AssName
					'section'


				CallFunc
					Getattr
						Name
							'config'


						'sections'


					None

					None


				Stmt
					Assign
						AssName
							'sec_dict'


						Subscript
							Name
								'out'


							'OP_ASSIGN'

							Name
								'section'



						CallFunc
							Getattr
								Name
									'confit'


								'OrderedDict'


							None

							None



					For
						AssName
							'option'


						CallFunc
							Getattr
								Name
									'config'


								'options'


							Name
								'section'


							None

							None


						Stmt
							Assign
								Subscript
									Name
										'sec_dict'


									'OP_ASSIGN'

									Name
										'option'



								CallFunc
									Getattr
										Name
											'config'


										'get'


									Name
										'section'


									Name
										'option'


									Name
										'True'


									None

									None




						None



				None


			Return
				Name
					'out'





	Function
		'transform_value'

		'value'

		0

		Stmt
			If
				Compare
					CallFunc
						Getattr
							Name
								'value'


							'lower'


						None

						None


					'in'

					Tuple
						Const
							"'false'"


						Const
							"'no'"


						Const
							"'off'"




				Stmt
					Return
						Name
							'False'




				Compare
					CallFunc
						Getattr
							Name
								'value'


							'lower'


						None

						None


					'in'

					Tuple
						Const
							"'true'"


						Const
							"'yes'"


						Const
							"'on'"




				Stmt
					Return
						Name
							'True'




				None


			TryExcept
				Stmt
					Return
						CallFunc
							Name
								'int'


							Name
								'value'


							None

							None




				Name
					'ValueError'


				None

				Stmt
					Pass


				None


			TryExcept
				Stmt
					Return
						CallFunc
							Name
								'float'


							Name
								'value'


							None

							None




				Name
					'ValueError'


				None

				Stmt
					Pass


				None


			Return
				Name
					'value'





	Function
		'transform_data'

		'data'

		0

		Stmt
			Assign
				AssName
					'out'


				CallFunc
					Getattr
						Name
							'confit'


						'OrderedDict'


					None

					None



			For
				AssTuple
					AssName
						'section'


					AssName
						'pairs'



				CallFunc
					Getattr
						Name
							'data'


						'items'


					None

					None


				Stmt
					If
						Compare
							Name
								'section'


							'=='

							Const
								"'beets'"



						Stmt
							For
								AssTuple
									AssName
										'key'


									AssName
										'value'



								CallFunc
									Getattr
										Name
											'pairs'


										'items'


									None

									None


								Stmt
									Assign
										AssName
											'value'


										CallFunc
											Name
												'transform_value'


											Name
												'value'


											None

											None



									If
										CallFunc
											Getattr
												Name
													'key'


												'startswith'


											Const
												"'import_'"


											None

											None


										Stmt
											If
												Compare
													Const
														"'import'"


													'not in'

													Name
														'out'



												Stmt
													Assign
														Subscript
															Name
																'out'


															'OP_ASSIGN'

															Const
																"'import'"



														CallFunc
															Getattr
																Name
																	'confit'


																'OrderedDict'


															None

															None




												None


											Assign
												Subscript
													Subscript
														Name
															'out'


														'OP_APPLY'

														Const
															"'import'"



													'OP_ASSIGN'

													Slice
														Name
															'key'


														'OP_APPLY'

														Const
															'7'


														None



												Name
													'value'




										Compare
											Name
												'key'


											'=='

											Const
												"'plugins'"



										Stmt
											Assign
												AssName
													'plugins'


												CallFunc
													Getattr
														Name
															'value'


														'split'


													None

													None



											Assign
												AssName
													'new_plugins'


												ListComp
													CallFunc
														Getattr
															Name
																'PLUGIN_NAMES'


															'get'


														Name
															'p'


														Name
															'p'


														None

														None


													ListCompFor
														AssName
															'p'


														Name
															'plugins'





											Assign
												Subscript
													Name
														'out'


													'OP_ASSIGN'

													Const
														"'plugins'"



												CallFunc
													Getattr
														Const
															"' '"


														'join'


													Name
														'new_plugins'


													None

													None




										Compare
											Name
												'key'


											'=='

											Const
												"'replace'"



										Stmt
											Assign
												AssName
													'replacements'


												CallFunc
													Getattr
														Name
															'confit'


														'OrderedDict'


													None

													None



											For
												AssTuple
													AssName
														'pat'


													AssName
														'repl'



												CallFunc
													Name
														'grouper'


													Const
														'2'


													CallFunc
														Getattr
															Name
																'value'


															'split'


														None

														None


													None

													None


												Stmt
													If
														Compare
															Name
																'repl'


															'=='

															Const
																"'<strip>'"



														Stmt
															Assign
																AssName
																	'repl'


																Const
																	"''"




														None


													Assign
														Subscript
															Name
																'replacements'


															'OP_ASSIGN'

															Name
																'pat'



														Name
															'repl'




												None


											Assign
												Subscript
													Name
														'out'


													'OP_ASSIGN'

													Const
														"'replace'"



												Name
													'replacements'




										Compare
											Name
												'key'


											'=='

											Const
												"'pluginpath'"



										Stmt
											Assign
												Subscript
													Name
														'out'


													'OP_ASSIGN'

													Const
														"'pluginpath'"



												CallFunc
													Getattr
														Name
															'value'


														'split'


													Const
														"':'"


													None

													None




										Stmt
											Assign
												Subscript
													Name
														'out'


													'OP_ASSIGN'

													Name
														'key'



												Name
													'value'






								None



						Name
							'pairs'


						Stmt
							Assign
								AssName
									'sec_out'


								Subscript
									Name
										'out'


									'OP_ASSIGN'

									Name
										'section'



								CallFunc
									Getattr
										Name
											'confit'


										'OrderedDict'


									None

									None



							For
								AssTuple
									AssName
										'key'


									AssName
										'value'



								CallFunc
									Getattr
										Name
											'pairs'


										'items'


									None

									None


								Stmt
									If
										Compare
											Name
												'key'


											'in'

											Name
												'AUTO_KEYS'



										Stmt
											Assign
												AssName
													'key'


												Const
													"'auto'"




										None


									If
										Compare
											Name
												'section'


											'=='

											Const
												"'paths'"



										Stmt
											Assign
												AssName
													'key'


												CallFunc
													Getattr
														Name
															'key'


														'replace'


													Const
														"'_'"


													Const
														"':'"


													None

													None




										None


									If
										Compare
											Name
												'section'


											'=='

											Const
												"'importfeeds'"



										Stmt
											If
												CallFunc
													Getattr
														Name
															'key'


														'startswith'


													Name
														'IMPORTFEEDS_PREFIX'


													None

													None


												Stmt
													Assign
														AssName
															'key'


														Slice
															Name
																'key'


															'OP_APPLY'

															CallFunc
																Name
																	'len'


																Name
																	'IMPORTFEEDS_PREFIX'


																None

																None


															None




												None



										None


									Assign
										Subscript
											Name
												'sec_out'


											'OP_ASSIGN'

											Name
												'key'



										CallFunc
											Name
												'transform_value'


											Name
												'value'


											None

											None




								None



						None



				None


			Return
				Name
					'out'





	Function
		'outsideFunc'

		'self'

		0

		Stmt
			Return
				Const
					"'outside'"





	Class
		'outsideClass'

		Stmt
			Function
				'__init__'

				'self'

				0

				Stmt
					Printnl
						Const
							"'outside'"


						None






	Class
		'Dumper'

		Getattr
			Name
				'yaml'


			'SafeDumper'


		Stmt
			Class
				'insideClass'

				Stmt
					Function
						'__init__'

						'self'

						0

						Stmt
							Printnl
								Const
									"'inside'"


								None






			Function
				'represent_mapping'

				'self'

				'tag'

				'mapping'

				'flow_style'

				Const
					"'0,0'"


				Name
					'None'


				0

				Stmt
					Function
						'insideFunc'

						'inside'

						0

						Stmt
							Return
								Const
									"'Inside'"





					Assign
						AssName
							'value'


						List


					Assign
						AssName
							'node'


						CallFunc
							Getattr
								Name
									'yaml'


								'MappingNode'


							Name
								'tag'


							Name
								'value'


							Keyword
								'flow_style'

								Name
									'flow_style'



							None

							None



					If
						Compare
							Getattr
								Name
									'self'


								'alias_key'


							'is not'

							Name
								'None'



						Stmt
							Assign
								Subscript
									Getattr
										Name
											'self'


										'represented_objects'


									'OP_ASSIGN'

									Getattr
										Name
											'self'


										'alias_key'



								Name
									'node'




						None


					Assign
						AssName
							'best_style'


						Name
							'True'



					Assign
						AssName
							'testFunc'


						CallFunc
							Name
								'outsideFunc'


							None

							None



					Assign
						AssName
							'testFunc'


						CallFunc
							Name
								'insideFunc'


							None

							None



					Assign
						AssName
							'testFunc'


						CallFunc
							Name
								'outsideClass'


							None

							None



					Assign
						AssName
							'testFunc'


						CallFunc
							Getattr
								Name
									'Dumper'


								'insideClass'


							None

							None



					If
						CallFunc
							Name
								'hasattr'


							Name
								'mapping'


							Const
								"'items'"


							None

							None


						Stmt
							Assign
								AssName
									'mapping'


								CallFunc
									Name
										'list'


									CallFunc
										Getattr
											Name
												'mapping'


											'items'


										None

										None


									None

									None




						None


					For
						AssTuple
							AssName
								'item_key'


							AssName
								'item_value'



						Name
							'mapping'


						Stmt
							Assign
								AssName
									'node_key'


								CallFunc
									Getattr
										Name
											'self'


										'represent_data'


									Name
										'item_key'


									None

									None



							Assign
								AssName
									'node_value'


								CallFunc
									Getattr
										Name
											'self'


										'represent_data'


									Name
										'item_value'


									None

									None



							If
								Not
									And
										CallFunc
											Name
												'isinstance'


											Name
												'node_key'


											Getattr
												Name
													'yaml'


												'ScalarNode'


											None

											None


										Not
											Getattr
												Name
													'node_key'


												'style'





								Stmt
									Assign
										AssName
											'best_style'


										Name
											'False'




								None


							If
								Not
									And
										CallFunc
											Name
												'isinstance'


											Name
												'node_value'


											Getattr
												Name
													'yaml'


												'ScalarNode'


											None

											None


										Not
											Getattr
												Name
													'node_value'


												'style'





								Stmt
									Assign
										AssName
											'best_style'


										Name
											'False'




								None


							Discard
								CallFunc
									Getattr
										Name
											'value'


										'append'


									Tuple
										Name
											'node_key'


										Name
											'node_value'



									None

									None




						None


					If
						Compare
							Name
								'flow_style'


							'is'

							Name
								'None'



						Stmt
							If
								Compare
									Getattr
										Name
											'self'


										'default_flow_style'


									'is not'

									Name
										'None'



								Stmt
									Assign
										AssAttr
											Name
												'node'


											'flow_style'

											'OP_ASSIGN'


										Getattr
											Name
												'self'


											'default_flow_style'




								Stmt
									Assign
										AssAttr
											Name
												'node'


											'flow_style'

											'OP_ASSIGN'


										Name
											'best_style'






						None


					Return
						Name
							'node'







	Discard
		CallFunc
			Getattr
				Name
					'Dumper'


				'add_representer'


			Getattr
				Name
					'confit'


				'OrderedDict'


			Getattr
				Name
					'Dumper'


				'represent_dict'


			None

			None



	Function
		'migrate_config'

		'replace'

		Name
			'False'


		0

		Stmt
			Assign
				AssTuple
					AssName
						'config'


					AssName
						'configpath'



				CallFunc
					Name
						'get_config'


					None

					None



			If
				Not
					Name
						'config'



				Stmt
					Discard
						CallFunc
							Getattr
								Name
									'log'


								'debug'


							CallFunc
								Getattr
									Const
										"u'no config file found at {0}'"


									'format'


								CallFunc
									Getattr
										Name
											'util'


										'displayable_path'


									Name
										'configpath'


									None

									None


								None

								None


							None

							None



					Return
						Const
							'None'




				None


			Assign
				AssName
					'destfn'


				CallFunc
					Getattr
						Getattr
							Name
								'os'


							'path'


						'join'


					CallFunc
						Getattr
							Getattr
								Name
									'beets'


								'config'


							'config_dir'


						None

						None


					Getattr
						Name
							'confit'


						'CONFIG_FILENAME'


					None

					None



			If
				CallFunc
					Getattr
						Getattr
							Name
								'os'


							'path'


						'exists'


					Name
						'destfn'


					None

					None


				Stmt
					If
						Name
							'replace'


						Stmt
							Discard
								CallFunc
									Getattr
										Name
											'log'


										'debug'


									CallFunc
										Getattr
											Const
												"u'moving old config aside: {0}'"


											'format'


										CallFunc
											Getattr
												Name
													'util'


												'displayable_path'


											Name
												'destfn'


											None

											None


										None

										None


									None

									None



							Discard
								CallFunc
									Name
										'_displace'


									Name
										'destfn'


									None

									None




						Stmt
							Return
								Const
									'None'






				None


			Discard
				CallFunc
					Getattr
						Name
							'log'


						'debug'


					CallFunc
						Getattr
							Const
								"u'migrating config file {0}'"


							'format'


						CallFunc
							Getattr
								Name
									'util'


								'displayable_path'


							Name
								'configpath'


							None

							None


						None

						None


					None

					None



			Assign
				AssName
					'data'


				CallFunc
					Name
						'transform_data'


					CallFunc
						Name
							'flatten_config'


						Name
							'config'


						None

						None


					None

					None



			Assign
				AssName
					'yaml_out'


				CallFunc
					Getattr
						Name
							'yaml'


						'dump'


					Name
						'data'


					Keyword
						'Dumper'

						Name
							'Dumper'



					Keyword
						'default_flow_style'

						Name
							'False'



					Keyword
						'indent'

						Const
							'4'



					Keyword
						'width'

						Const
							'1000'



					None

					None



			Assign
				AssName
					'yaml_out'


				CallFunc
					Getattr
						Name
							're'


						'sub'


					Const
						"'(\\\\n\\\\w+:\\\\n    [^-\\\\s])'"


					Const
						"'\\n\\\\1'"


					Name
						'yaml_out'


					None

					None



			Assign
				AssName
					'yaml_out'


				Add
					Name
						'YAML_COMMENT'


					Name
						'yaml_out'




			Discard
				CallFunc
					Getattr
						Name
							'log'


						'debug'


					CallFunc
						Getattr
							Const
								"u'writing migrated config to {0}'"


							'format'


						CallFunc
							Getattr
								Name
									'util'


								'displayable_path'


							Name
								'destfn'


							None

							None


						None

						None


					None

					None



			With
				CallFunc
					Name
						'open'


					Name
						'destfn'


					Const
						"'w'"


					None

					None


				AssName
					'f'


				Stmt
					Discard
						CallFunc
							Getattr
								Name
									'f'


								'write'


							Name
								'yaml_out'


							None

							None





			Return
				Name
					'destfn'





	Function
		'migrate_db'

		'replace'

		Name
			'False'


		0

		Stmt
			Assign
				AssTuple
					AssName
						'_'


					AssName
						'srcfn'



				CallFunc
					Name
						'default_paths'


					None

					None



			Assign
				AssName
					'destfn'


				CallFunc
					Getattr
						Subscript
							Getattr
								Name
									'beets'


								'config'


							'OP_APPLY'

							Const
								"'library'"



						'as_filename'


					None

					None



			If
				Or
					Not
						CallFunc
							Getattr
								Getattr
									Name
										'os'


									'path'


								'exists'


							Name
								'srcfn'


							None

							None



					Compare
						Name
							'srcfn'


						'=='

						Name
							'destfn'




				Stmt
					Return
						Const
							'None'




				None


			If
				CallFunc
					Getattr
						Getattr
							Name
								'os'


							'path'


						'exists'


					Name
						'destfn'


					None

					None


				Stmt
					If
						Name
							'replace'


						Stmt
							Discard
								CallFunc
									Getattr
										Name
											'log'


										'debug'


									CallFunc
										Getattr
											Const
												"u'moving old database aside: {0}'"


											'format'


										CallFunc
											Getattr
												Name
													'util'


												'displayable_path'


											Name
												'destfn'


											None

											None


										None

										None


									None

									None



							Discard
								CallFunc
									Name
										'_displace'


									Name
										'destfn'


									None

									None




						Stmt
							Return
								Const
									'None'






				None


			Discard
				CallFunc
					Getattr
						Name
							'log'


						'debug'


					CallFunc
						Getattr
							Const
								"u'copying database from {0} to {1}'"


							'format'


						CallFunc
							Getattr
								Name
									'util'


								'displayable_path'


							Name
								'srcfn'


							None

							None


						CallFunc
							Getattr
								Name
									'util'


								'displayable_path'


							Name
								'destfn'


							None

							None


						None

						None


					None

					None



			Discard
				CallFunc
					Getattr
						Name
							'util'


						'copy'


					Name
						'srcfn'


					Name
						'destfn'


					None

					None



			Return
				Name
					'destfn'





	Function
		'migrate_state'

		'replace'

		Name
			'False'


		0

		Stmt
			Assign
				AssName
					'srcfn'


				CallFunc
					Getattr
						Getattr
							Name
								'os'


							'path'


						'expanduser'


					CallFunc
						Getattr
							Getattr
								Name
									'os'


								'path'


							'join'


						Const
							"'~'"


						Const
							"'.beetsstate'"


						None

						None


					None

					None



			If
				Not
					CallFunc
						Getattr
							Getattr
								Name
									'os'


								'path'


							'exists'


						Name
							'srcfn'


						None

						None



				Stmt
					Return
						Const
							'None'




				None


			Assign
				AssName
					'destfn'


				CallFunc
					Getattr
						Subscript
							Getattr
								Name
									'beets'


								'config'


							'OP_APPLY'

							Const
								"'statefile'"



						'as_filename'


					None

					None



			If
				CallFunc
					Getattr
						Getattr
							Name
								'os'


							'path'


						'exists'


					Name
						'destfn'


					None

					None


				Stmt
					If
						Name
							'replace'


						Stmt
							Discard
								CallFunc
									Name
										'_displace'


									Name
										'destfn'


									None

									None




						Stmt
							Return
								Const
									'None'






				None


			Discard
				CallFunc
					Getattr
						Name
							'log'


						'debug'


					CallFunc
						Getattr
							Const
								"u'copying state file from {0} to {1}'"


							'format'


						CallFunc
							Getattr
								Name
									'util'


								'displayable_path'


							Name
								'srcfn'


							None

							None


						CallFunc
							Getattr
								Name
									'util'


								'displayable_path'


							Name
								'destfn'


							None

							None


						None

						None


					None

					None



			Discard
				CallFunc
					Getattr
						Name
							'util'


						'copy'


					Name
						'srcfn'


					Name
						'destfn'


					None

					None



			Return
				Name
					'destfn'





	Function
		'automigrate'

		0

		Stmt
			Assign
				AssName
					'config_fn'


				CallFunc
					Name
						'migrate_config'


					None

					None



			Assign
				AssName
					'db_fn'


				CallFunc
					Name
						'migrate_db'


					None

					None



			Discard
				CallFunc
					Name
						'migrate_state'


					None

					None



			If
				Name
					'config_fn'


				Stmt
					Discard
						CallFunc
							Getattr
								Name
									'ui'


								'print_'


							CallFunc
								Getattr
									Name
										'ui'


									'colorize'


								Const
									"'fuchsia'"


								Const
									"u'MIGRATED CONFIGURATION'"


								None

								None


							None

							None



					Discard
						CallFunc
							Getattr
								Name
									'ui'


								'print_'


							CallFunc
								Getattr
									Name
										'CONFIG_MIGRATED_MESSAGE'


									'format'


								Keyword
									'newconfig'

									CallFunc
										Getattr
											Name
												'util'


											'displayable_path'


										Name
											'config_fn'


										None

										None



								None

								None


							None

							None



					If
						Name
							'db_fn'


						Stmt
							Discard
								CallFunc
									Getattr
										Name
											'ui'


										'print_'


									CallFunc
										Getattr
											Name
												'DB_MIGRATED_MESSAGE'


											'format'


										Keyword
											'newdb'

											CallFunc
												Getattr
													Name
														'util'


													'displayable_path'


												Name
													'db_fn'


												None

												None



										None

										None


									None

									None




						None


					Discard
						CallFunc
							Getattr
								Name
									'ui'


								'input_'


							CallFunc
								Getattr
									Name
										'ui'


									'colorize'


								Const
									"'fuchsia'"


								Const
									"u'Press ENTER to continue:'"


								None

								None


							None

							None



					Discard
						CallFunc
							Getattr
								Name
									'ui'


								'print_'


							None

							None




				None




	Assign
		AssName
			'migrate_cmd'


		CallFunc
			Getattr
				Name
					'ui'


				'Subcommand'


			Const
				"'migrate'"


			Keyword
				'help'

				Const
					"'convert legacy config'"



			None

			None



	Function
		'migrate_func'

		'lib'

		'opts'

		'args'

		0

		Stmt
			Assign
				AssName
					'config_fn'


				CallFunc
					Name
						'migrate_config'


					Keyword
						'replace'

						Name
							'True'



					None

					None



			If
				Name
					'config_fn'


				Stmt
					Discard
						CallFunc
							Getattr
								Name
									'log'


								'info'


							CallFunc
								Getattr
									Const
										"u'Migrated configuration to: {0}'"


									'format'


								CallFunc
									Getattr
										Name
											'util'


										'displayable_path'


									Name
										'config_fn'


									None

									None


								None

								None


							None

							None




				None


			Assign
				AssName
					'db_fn'


				CallFunc
					Name
						'migrate_db'


					Keyword
						'replace'

						Name
							'True'



					None

					None



			If
				Name
					'db_fn'


				Stmt
					Discard
						CallFunc
							Getattr
								Name
									'log'


								'info'


							CallFunc
								Getattr
									Const
										"u'Migrated library database to: {0}'"


									'format'


								CallFunc
									Getattr
										Name
											'util'


										'displayable_path'


									Name
										'db_fn'


									None

									None


								None

								None


							None

							None




				None


			Assign
				AssName
					'state_fn'


				CallFunc
					Name
						'migrate_state'


					Keyword
						'replace'

						Name
							'True'



					None

					None



			If
				Name
					'state_fn'


				Stmt
					Discard
						CallFunc
							Getattr
								Name
									'log'


								'info'


							CallFunc
								Getattr
									Const
										"u'Migrated state file to: {0}'"


									'format'


								CallFunc
									Getattr
										Name
											'util'


										'displayable_path'


									Name
										'state_fn'


									None

									None


								None

								None


							None

							None




				None




	Assign
		AssAttr
			Name
				'migrate_cmd'


			'func'

			'OP_ASSIGN'


		Name
			'migrate_func'




