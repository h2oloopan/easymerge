[0, 'platform']
[1, 'os']
[2, 'pkgutil']
[3, 'sys']
[4, 'yaml']
[5, 'types']
=======================
ID:0
Name:iter_first
lines:(49, 60)
scope:[('Global', '', (0, 999998))]
member:False
=======================
ID:1
Name:__init__
lines:(82, 98)
scope:[('Class', 'ConfigReadError', (80, 98))]
member:True
=======================
ID:2
Name:__init__
lines:(107, 112)
scope:[('Class', 'ConfigSource', (103, 132))]
member:True
=======================
ID:3
Name:__repr__
lines:(114, 118)
scope:[('Class', 'ConfigSource', (103, 132))]
member:True
=======================
ID:4
Name:of
lines:(122, 132)
scope:[('Class', 'ConfigSource', (103, 132))]
member:True
=======================
ID:5
Name:resolve
lines:(148, 154)
scope:[('Class', 'ConfigView', (134, 415))]
member:True
=======================
ID:6
Name:first
lines:(156, 166)
scope:[('Class', 'ConfigView', (134, 415))]
member:True
=======================
ID:7
Name:exists
lines:(168, 175)
scope:[('Class', 'ConfigView', (134, 415))]
member:True
=======================
ID:8
Name:add
lines:(177, 182)
scope:[('Class', 'ConfigView', (134, 415))]
member:True
=======================
ID:9
Name:set
lines:(184, 189)
scope:[('Class', 'ConfigView', (134, 415))]
member:True
=======================
ID:10
Name:root
lines:(191, 194)
scope:[('Class', 'ConfigView', (134, 415))]
member:True
=======================
ID:11
Name:__repr__
lines:(196, 197)
scope:[('Class', 'ConfigView', (134, 415))]
member:True
=======================
ID:12
Name:__getitem__
lines:(199, 201)
scope:[('Class', 'ConfigView', (134, 415))]
member:True
=======================
ID:13
Name:__setitem__
lines:(203, 207)
scope:[('Class', 'ConfigView', (134, 415))]
member:True
=======================
ID:14
Name:set_args
lines:(209, 217)
scope:[('Class', 'ConfigView', (134, 415))]
member:True
=======================
ID:15
Name:__str__
lines:(224, 226)
scope:[('Class', 'ConfigView', (134, 415))]
member:True
=======================
ID:16
Name:__unicode__
lines:(228, 232)
scope:[('Class', 'ConfigView', (134, 415))]
member:True
=======================
ID:17
Name:__nonzero__
lines:(234, 237)
scope:[('Class', 'ConfigView', (134, 415))]
member:True
=======================
ID:18
Name:__bool__
lines:(239, 242)
scope:[('Class', 'ConfigView', (134, 415))]
member:True
=======================
ID:19
Name:keys
lines:(246, 271)
scope:[('Class', 'ConfigView', (134, 415))]
member:True
=======================
ID:20
Name:items
lines:(273, 279)
scope:[('Class', 'ConfigView', (134, 415))]
member:True
=======================
ID:21
Name:values
lines:(281, 287)
scope:[('Class', 'ConfigView', (134, 415))]
member:True
=======================
ID:22
Name:all_contents
lines:(291, 308)
scope:[('Class', 'ConfigView', (134, 415))]
member:True
=======================
ID:23
Name:get
lines:(312, 331)
scope:[('Class', 'ConfigView', (134, 415))]
member:True
=======================
ID:24
Name:as_filename
lines:(333, 352)
scope:[('Class', 'ConfigView', (134, 415))]
member:True
=======================
ID:25
Name:as_choice
lines:(354, 371)
scope:[('Class', 'ConfigView', (134, 415))]
member:True
=======================
ID:26
Name:as_number
lines:(373, 380)
scope:[('Class', 'ConfigView', (134, 415))]
member:True
=======================
ID:27
Name:as_str_seq
lines:(384, 401)
scope:[('Class', 'ConfigView', (134, 415))]
member:True
=======================
ID:28
Name:flatten
lines:(404, 415)
scope:[('Class', 'ConfigView', (134, 415))]
member:True
=======================
ID:29
Name:__init__
lines:(422, 428)
scope:[('Class', 'RootView', (418, 444))]
member:True
=======================
ID:30
Name:add
lines:(430, 431)
scope:[('Class', 'RootView', (418, 444))]
member:True
=======================
ID:31
Name:set
lines:(433, 434)
scope:[('Class', 'RootView', (418, 444))]
member:True
=======================
ID:32
Name:resolve
lines:(436, 437)
scope:[('Class', 'RootView', (418, 444))]
member:True
=======================
ID:33
Name:clear
lines:(439, 441)
scope:[('Class', 'RootView', (418, 444))]
member:True
=======================
ID:34
Name:root
lines:(443, 444)
scope:[('Class', 'RootView', (418, 444))]
member:True
=======================
ID:35
Name:__init__
lines:(449, 467)
scope:[('Class', 'Subview', (447, 495))]
member:True
=======================
ID:36
Name:resolve
lines:(469, 486)
scope:[('Class', 'Subview', (447, 495))]
member:True
=======================
ID:37
Name:set
lines:(488, 489)
scope:[('Class', 'Subview', (447, 495))]
member:True
=======================
ID:38
Name:add
lines:(491, 492)
scope:[('Class', 'Subview', (447, 495))]
member:True
=======================
ID:39
Name:root
lines:(494, 495)
scope:[('Class', 'Subview', (447, 495))]
member:True
=======================
ID:40
Name:_package_path
lines:(502, 518)
scope:[('Global', '', (0, 999998))]
member:False
=======================
ID:41
Name:config_dirs
lines:(520, 553)
scope:[('Global', '', (0, 999998))]
member:False
=======================
ID:42
Name:_construct_unicode
lines:(567, 568)
scope:[('Class', 'Loader', (558, 606))]
member:True
=======================
ID:43
Name:construct_yaml_map
lines:(572, 576)
scope:[('Class', 'Loader', (558, 606))]
member:True
=======================
ID:44
Name:construct_mapping
lines:(578, 601)
scope:[('Class', 'Loader', (558, 606))]
member:True
=======================
ID:45
Name:check_plain
lines:(604, 606)
scope:[('Class', 'Loader', (558, 606))]
member:True
=======================
ID:46
Name:load_yaml
lines:(612, 620)
scope:[('Global', '', (0, 999998))]
member:False
=======================
ID:47
Name:outsideFunc
lines:(624, 625)
scope:[('Global', '', (0, 999998))]
member:False
=======================
ID:48
Name:__init__
lines:(627, 628)
scope:[('Class', 'outsideClass', (626, 628))]
member:True
=======================
ID:49
Name:__init__
lines:(636, 637)
scope:[('Class', 'Dumper', (630, 694)), ('Class', 'insideClass', (635, 637))]
member:True
=======================
ID:50
Name:represent_mapping
lines:(639, 668)
scope:[('Class', 'Dumper', (630, 694))]
member:True
=======================
ID:51
Name:insideFunc
lines:(640, 641)
scope:[('Class', 'Dumper', (630, 694)), ('Function', 'represent_mapping', (639, 668))]
member:False
=======================
ID:52
Name:represent_list
lines:(670, 680)
scope:[('Class', 'Dumper', (630, 694))]
member:True
=======================
ID:53
Name:represent_bool
lines:(682, 689)
scope:[('Class', 'Dumper', (630, 694))]
member:True
=======================
ID:54
Name:represent_none
lines:(691, 694)
scope:[('Class', 'Dumper', (630, 694))]
member:True
=======================
ID:55
Name:restore_yaml_comments
lines:(701, 730)
scope:[('Global', '', (0, 999998))]
member:False
=======================
ID:56
Name:__init__
lines:(736, 754)
scope:[('Class', 'Configuration', (735, 870))]
member:True
=======================
ID:57
Name:user_config_path
lines:(756, 761)
scope:[('Class', 'Configuration', (735, 870))]
member:True
=======================
ID:58
Name:_add_user_source
lines:(763, 770)
scope:[('Class', 'Configuration', (735, 870))]
member:True
=======================
ID:59
Name:_add_default_source
lines:(772, 782)
scope:[('Class', 'Configuration', (735, 870))]
member:True
=======================
ID:60
Name:read
lines:(784, 793)
scope:[('Class', 'Configuration', (735, 870))]
member:True
=======================
ID:61
Name:config_dir
lines:(795, 826)
scope:[('Class', 'Configuration', (735, 870))]
member:True
=======================
ID:62
Name:set_file
lines:(828, 833)
scope:[('Class', 'Configuration', (735, 870))]
member:True
=======================
ID:63
Name:dump
lines:(835, 870)
scope:[('Class', 'Configuration', (735, 870))]
member:True
=======================
ID:64
Name:__init__
lines:(878, 882)
scope:[('Class', 'LazyConfig', (873, 914))]
member:True
=======================
ID:65
Name:read
lines:(884, 886)
scope:[('Class', 'LazyConfig', (873, 914))]
member:True
=======================
ID:66
Name:resolve
lines:(888, 894)
scope:[('Class', 'LazyConfig', (873, 914))]
member:True
=======================
ID:67
Name:add
lines:(896, 901)
scope:[('Class', 'LazyConfig', (873, 914))]
member:True
=======================
ID:68
Name:set
lines:(903, 908)
scope:[('Class', 'LazyConfig', (873, 914))]
member:True
=======================
ID:69
Name:clear
lines:(910, 914)
scope:[('Class', 'LazyConfig', (873, 914))]
member:True
=======================
ID:0
Name:unicode_literals
lines:(-1, -1)
scope:[]
=======================
ID:1
Name:OrderedDict
lines:(-1, -1)
scope:[]
=======================
ID:2
Name:OrderedDict
lines:(-1, -1)
scope:[]
=======================
ID:3
Name:ConfigError
lines:(65, 65)
scope:[]
=======================
ID:4
Name:NotFoundError
lines:(69, 69)
scope:[]
=======================
ID:5
Name:ConfigTypeError
lines:(73, 73)
scope:[]
=======================
ID:6
Name:ConfigValueError
lines:(77, 77)
scope:[]
=======================
ID:7
Name:ConfigReadError
lines:(80, 98)
scope:[]
=======================
ID:8
Name:ConfigSource
lines:(103, 132)
scope:[]
=======================
ID:9
Name:ConfigView
lines:(134, 415)
scope:[]
=======================
ID:10
Name:RootView
lines:(418, 444)
scope:[]
=======================
ID:11
Name:Subview
lines:(447, 495)
scope:[]
=======================
ID:12
Name:Loader
lines:(558, 606)
scope:[]
=======================
ID:13
Name:outsideClass
lines:(626, 628)
scope:[]
=======================
ID:14
Name:Dumper
lines:(630, 694)
scope:[]
=======================
ID:15
Name:insideClass
lines:(635, 637)
scope:[('Class', 'Dumper', (630, 694))]
=======================
ID:16
Name:Configuration
lines:(735, 870)
scope:[]
=======================
ID:17
Name:LazyConfig
lines:(873, 914)
scope:[]
=======================
Name:['iter']
line:53
scope:(49, 60)
source:-1
tree: ( CallFunc ( Name ( 'iter' )  )   ( Name ( 'sequence' )  )   ( None )   ( None )  ) 
=======================
Name:['next']
line:56
scope:(49, 60)
source:-1
tree: ( CallFunc ( Name ( 'next' )  )   ( Name ( 'it' )  )   ( None )   ( None )  ) 
=======================
Name:['it', 'next']
line:58
scope:(49, 60)
source:('member', -1)
tree: ( CallFunc ( Getattr ( Name ( 'it' )  )   ( 'next' )  )   ( None )   ( None )  ) 
=======================
Name:['ValueError']
line:60
scope:(49, 60)
source:-1
tree: ( CallFunc ( Name ( 'ValueError' )  )   ( None )   ( None )  ) 
=======================
Name:['Const: ( Const ( "\'file {0} could not be read\'" )  ) ', 'format']
line:86
scope:(82, 98)
source:('member', -1)
tree: ( CallFunc ( Getattr ( Const ( "'file {0} could not be read'" )  )   ( 'format' )  )   ( Name ( 'filename' )  )   ( None )   ( None )  ) 
=======================
Name:['isinstance']
line:87
scope:(82, 98)
source:-1
tree: ( CallFunc ( Name ( 'isinstance' )  )   ( Name ( 'reason' )  )   ( Getattr ( Getattr ( Name ( 'yaml' )  )   ( 'scanner' )  )   ( 'ScannerError' )  )   ( None )   ( None )  ) 
=======================
Name:['Const: ( Const ( "\': found tab character at line {0}, column {1}\'" )  ) ', 'format']
line:91
scope:(82, 98)
source:('member', -1)
tree: ( CallFunc ( Getattr ( Const ( "': found tab character at line {0}, column {1}'" )  )   ( 'format' )  )   ( Add ( Getattr ( Getattr ( Name ( 'reason' )  )   ( 'problem_mark' )  )   ( 'line' )  )   ( Const ( '1' )  )  )   ( Add ( Getattr ( Getattr ( Name ( 'reason' )  )   ( 'problem_mark' )  )   ( 'column' )  )   ( Const ( '1' )  )  )   ( None )   ( None )  ) 
=======================
Name:['Const: ( Const ( "\': {0}\'" )  ) ', 'format']
line:96
scope:(82, 98)
source:('member', -1)
tree: ( CallFunc ( Getattr ( Const ( "': {0}'" )  )   ( 'format' )  )   ( Name ( 'reason' )  )   ( None )   ( None )  ) 
=======================
Name:['super']
line:98
scope:(82, 98)
source:('member', -1, 'followed')
tree: ( CallFunc ( Getattr ( CallFunc ( Name ( 'super' )  )   ( Name ( 'ConfigReadError' )  )   ( Name ( 'self' )  )   ( None )   ( None )  )   ( '__init__' )  )   ( Name ( 'message' )  )   ( None )   ( None )  ) 
=======================
Name:['super']
line:108
scope:(107, 112)
source:('member', -1, 'followed')
tree: ( CallFunc ( Getattr ( CallFunc ( Name ( 'super' )  )   ( Name ( 'ConfigSource' )  )   ( Name ( 'self' )  )   ( None )   ( None )  )   ( '__init__' )  )   ( Name ( 'value' )  )   ( None )   ( None )  ) 
=======================
Name:['isinstance']
line:109
scope:(107, 112)
source:-1
tree: ( CallFunc ( Name ( 'isinstance' )  )   ( Name ( 'filename' )  )   ( Name ( 'BASESTRING' )  )   ( None )   ( None )  ) 
=======================
Name:['TypeError']
line:110
scope:(107, 112)
source:-1
tree: ( CallFunc ( Name ( 'TypeError' )  )   ( Const ( "'filename must be a string or None'" )  )   ( None )   ( None )  ) 
=======================
Name:['Const: ( Const ( "\'ConfigSource({0}, {1}, {2})\'" )  ) ', 'format']
line:116
scope:(114, 118)
source:('member', -1)
tree: ( CallFunc ( Getattr ( Const ( "'ConfigSource({0}, {1}, {2})'" )  )   ( 'format' )  )   ( CallFunc ( Getattr ( CallFunc ( Name ( 'super' )  )   ( Name ( 'ConfigSource' )  )   ( Name ( 'self' )  )   ( None )   ( None )  )   ( '__repr__' )  )   ( None )   ( None )  )   ( CallFunc ( Name ( 'repr' )  )   ( Getattr ( Name ( 'self' )  )   ( 'filename' )  )   ( None )   ( None )  )   ( CallFunc ( Name ( 'repr' )  )   ( Getattr ( Name ( 'self' )  )   ( 'default' )  )   ( None )   ( None )  )   ( None )   ( None )  ) 
=======================
Name:['isinstance']
line:127
scope:(122, 132)
source:-1
tree: ( CallFunc ( Name ( 'isinstance' )  )   ( Name ( 'value' )  )   ( Name ( 'ConfigSource' )  )   ( None )   ( None )  ) 
=======================
Name:['isinstance']
line:129
scope:(122, 132)
source:-1
tree: ( CallFunc ( Name ( 'isinstance' )  )   ( Name ( 'value' )  )   ( Name ( 'dict' )  )   ( None )   ( None )  ) 
=======================
Name:['ConfigSource']
line:130
scope:(122, 132)
source:('class', 8)
tree: ( CallFunc ( Name ( 'ConfigSource' )  )   ( Name ( 'value' )  )   ( None )   ( None )  ) 
=======================
Name:['TypeError']
line:132
scope:(122, 132)
source:-1
tree: ( CallFunc ( Name ( 'TypeError' )  )   ( Const ( "'source value must be a dict'" )  )   ( None )   ( None )  ) 
=======================
Name:['self', 'resolve']
line:162
scope:(156, 166)
source:('member', -1)
tree: ( CallFunc ( Getattr ( Name ( 'self' )  )   ( 'resolve' )  )   ( None )   ( None )  ) 
=======================
Name:['iter_first']
line:164
scope:(156, 166)
source:('function', 0)
tree: ( CallFunc ( Name ( 'iter_first' )  )   ( Name ( 'pairs' )  )   ( None )   ( None )  ) 
=======================
Name:['NotFoundError']
line:166
scope:(156, 166)
source:('class', 4)
tree: ( CallFunc ( Name ( 'NotFoundError' )  )   ( CallFunc ( Getattr ( Const ( "'{0} not found'" )  )   ( 'format' )  )   ( Getattr ( Name ( 'self' )  )   ( 'name' )  )   ( None )   ( None )  )   ( None )   ( None )  ) 
=======================
Name:['self', 'first']
line:172
scope:(168, 175)
source:('member', -1)
tree: ( CallFunc ( Getattr ( Name ( 'self' )  )   ( 'first' )  )   ( None )   ( None )  ) 
=======================
Name:['Subview']
line:201
scope:(199, 201)
source:('class', 11)
tree: ( CallFunc ( Name ( 'Subview' )  )   ( Name ( 'self' )  )   ( Name ( 'key' )  )   ( None )   ( None )  ) 
=======================
Name:['self', 'set']
line:207
scope:(203, 207)
source:('member', -1)
tree: ( CallFunc ( Getattr ( Name ( 'self' )  )   ( 'set' )  )   ( Dict ( Name ( 'key' )  )   ( Name ( 'value' )  )  )   ( None )   ( None )  ) 
=======================
Name:['namespace', '__dict__', 'items']
line:214
scope:(209, 217)
source:('member', -1)
tree: ( CallFunc ( Getattr ( Getattr ( Name ( 'namespace' )  )   ( '__dict__' )  )   ( 'items' )  )   ( None )   ( None )  ) 
=======================
Name:['self', 'set']
line:217
scope:(209, 217)
source:('member', -1)
tree: ( CallFunc ( Getattr ( Name ( 'self' )  )   ( 'set' )  )   ( Name ( 'args' )  )   ( None )   ( None )  ) 
=======================
Name:['str']
line:226
scope:(224, 226)
source:-1
tree: ( CallFunc ( Name ( 'str' )  )   ( CallFunc ( Getattr ( Name ( 'self' )  )   ( 'get' )  )   ( None )   ( None )  )   ( None )   ( None )  ) 
=======================
Name:['unicode']
line:232
scope:(228, 232)
source:-1
tree: ( CallFunc ( Name ( 'unicode' )  )   ( CallFunc ( Getattr ( Name ( 'self' )  )   ( 'get' )  )   ( None )   ( None )  )   ( None )   ( None )  ) 
=======================
Name:['self', '__bool__']
line:237
scope:(234, 237)
source:('member', -1)
tree: ( CallFunc ( Getattr ( Name ( 'self' )  )   ( '__bool__' )  )   ( None )   ( None )  ) 
=======================
Name:['bool']
line:242
scope:(239, 242)
source:-1
tree: ( CallFunc ( Name ( 'bool' )  )   ( CallFunc ( Getattr ( Name ( 'self' )  )   ( 'get' )  )   ( None )   ( None )  )   ( None )   ( None )  ) 
=======================
Name:['self', 'resolve']
line:257
scope:(246, 271)
source:('member', -1)
tree: ( CallFunc ( Getattr ( Name ( 'self' )  )   ( 'resolve' )  )   ( None )   ( None )  ) 
=======================
Name:['dic', 'keys']
line:259
scope:(246, 271)
source:('member', -1)
tree: ( CallFunc ( Getattr ( Name ( 'dic' )  )   ( 'keys' )  )   ( None )   ( None )  ) 
=======================
Name:['ConfigTypeError']
line:262
scope:(246, 271)
source:('class', 5)
tree: ( CallFunc ( Name ( 'ConfigTypeError' )  )   ( CallFunc ( Getattr ( Const ( "'{0} must be a dict, not {1}'" )  )   ( 'format' )  )   ( Getattr ( Name ( 'self' )  )   ( 'name' )  )   ( Getattr ( CallFunc ( Name ( 'type' )  )   ( Name ( 'dic' )  )   ( None )   ( None )  )   ( '__name__' )  )   ( None )   ( None )  )   ( None )   ( None )  ) 
=======================
Name:['keys', 'append']
line:269
scope:(246, 271)
source:('member', -1)
tree: ( CallFunc ( Getattr ( Name ( 'keys' )  )   ( 'append' )  )   ( Name ( 'key' )  )   ( None )   ( None )  ) 
=======================
Name:['self', 'keys']
line:278
scope:(273, 279)
source:('member', -1)
tree: ( CallFunc ( Getattr ( Name ( 'self' )  )   ( 'keys' )  )   ( None )   ( None )  ) 
=======================
Name:['self', 'keys']
line:286
scope:(281, 287)
source:('member', -1)
tree: ( CallFunc ( Getattr ( Name ( 'self' )  )   ( 'keys' )  )   ( None )   ( None )  ) 
=======================
Name:['self', 'resolve']
line:298
scope:(291, 308)
source:('member', -1)
tree: ( CallFunc ( Getattr ( Name ( 'self' )  )   ( 'resolve' )  )   ( None )   ( None )  ) 
=======================
Name:['iter']
line:300
scope:(291, 308)
source:-1
tree: ( CallFunc ( Name ( 'iter' )  )   ( Name ( 'collection' )  )   ( None )   ( None )  ) 
=======================
Name:['ConfigTypeError']
line:303
scope:(291, 308)
source:('class', 5)
tree: ( CallFunc ( Name ( 'ConfigTypeError' )  )   ( CallFunc ( Getattr ( Const ( "'{0} must be an iterable, not {1}'" )  )   ( 'format' )  )   ( Getattr ( Name ( 'self' )  )   ( 'name' )  )   ( Getattr ( CallFunc ( Name ( 'type' )  )   ( Name ( 'collection' )  )   ( None )   ( None )  )   ( '__name__' )  )   ( None )   ( None )  )   ( None )   ( None )  ) 
=======================
Name:['self', 'first']
line:318
scope:(312, 331)
source:('member', -1)
tree: ( CallFunc ( Getattr ( Name ( 'self' )  )   ( 'first' )  )   ( None )   ( None )  ) 
=======================
Name:['isinstance']
line:321
scope:(312, 331)
source:-1
tree: ( CallFunc ( Name ( 'isinstance' )  )   ( Name ( 'typ' )  )   ( Name ( 'TYPE_TYPES' )  )   ( None )   ( None )  ) 
=======================
Name:['TypeError']
line:322
scope:(312, 331)
source:-1
tree: ( CallFunc ( Name ( 'TypeError' )  )   ( Const ( "'argument to get() must be a type'" )  )   ( None )   ( None )  ) 
=======================
Name:['isinstance']
line:324
scope:(312, 331)
source:-1
tree: ( CallFunc ( Name ( 'isinstance' )  )   ( Name ( 'value' )  )   ( Name ( 'typ' )  )   ( None )   ( None )  ) 
=======================
Name:['ConfigTypeError']
line:326
scope:(312, 331)
source:('class', 5)
tree: ( CallFunc ( Name ( 'ConfigTypeError' )  )   ( CallFunc ( Getattr ( Const ( "'{0} must be of type {1}, not {2}'" )  )   ( 'format' )  )   ( Getattr ( Name ( 'self' )  )   ( 'name' )  )   ( Getattr ( Name ( 'typ' )  )   ( '__name__' )  )   ( Getattr ( CallFunc ( Name ( 'type' )  )   ( Name ( 'value' )  )   ( None )   ( None )  )   ( '__name__' )  )   ( None )   ( None )  )   ( None )   ( None )  ) 
=======================
Name:['self', 'first']
line:341
scope:(333, 352)
source:('member', -1)
tree: ( CallFunc ( Getattr ( Name ( 'self' )  )   ( 'first' )  )   ( None )   ( None )  ) 
=======================
Name:['isinstance']
line:342
scope:(333, 352)
source:-1
tree: ( CallFunc ( Name ( 'isinstance' )  )   ( Name ( 'path' )  )   ( Name ( 'BASESTRING' )  )   ( None )   ( None )  ) 
=======================
Name:['ConfigTypeError']
line:343
scope:(333, 352)
source:('class', 5)
tree: ( CallFunc ( Name ( 'ConfigTypeError' )  )   ( CallFunc ( Getattr ( Const ( "'{0} must be a filename, not {1}'" )  )   ( 'format' )  )   ( Getattr ( Name ( 'self' )  )   ( 'name' )  )   ( Getattr ( CallFunc ( Name ( 'type' )  )   ( Name ( 'path' )  )   ( None )   ( None )  )   ( '__name__' )  )   ( None )   ( None )  )   ( None )   ( None )  ) 
=======================
Name:['os', 'path', 'expanduser']
line:346
scope:(333, 352)
source:('member', -1)
tree: ( CallFunc ( Getattr ( Getattr ( Name ( 'os' )  )   ( 'path' )  )   ( 'expanduser' )  )   ( CallFunc ( Name ( 'STRING' )  )   ( Name ( 'path' )  )   ( None )   ( None )  )   ( None )   ( None )  ) 
=======================
Name:['os', 'path', 'isabs']
line:348
scope:(333, 352)
source:('member', -1)
tree: ( CallFunc ( Getattr ( Getattr ( Name ( 'os' )  )   ( 'path' )  )   ( 'isabs' )  )   ( Name ( 'path' )  )   ( None )   ( None )  ) 
=======================
Name:['os', 'path', 'join']
line:350
scope:(333, 352)
source:('member', -1)
tree: ( CallFunc ( Getattr ( Getattr ( Name ( 'os' )  )   ( 'path' )  )   ( 'join' )  )   ( CallFunc ( Getattr ( CallFunc ( Getattr ( Name ( 'self' )  )   ( 'root' )  )   ( None )   ( None )  )   ( 'config_dir' )  )   ( None )   ( None )  )   ( Name ( 'path' )  )   ( None )   ( None )  ) 
=======================
Name:['os', 'path', 'abspath']
line:352
scope:(333, 352)
source:('member', -1)
tree: ( CallFunc ( Getattr ( Getattr ( Name ( 'os' )  )   ( 'path' )  )   ( 'abspath' )  )   ( Name ( 'path' )  )   ( None )   ( None )  ) 
=======================
Name:['self', 'get']
line:359
scope:(354, 371)
source:('member', -1)
tree: ( CallFunc ( Getattr ( Name ( 'self' )  )   ( 'get' )  )   ( None )   ( None )  ) 
=======================
Name:['ConfigValueError']
line:363
scope:(354, 371)
source:('class', 6)
tree: ( CallFunc ( Name ( 'ConfigValueError' )  )   ( CallFunc ( Getattr ( Const ( "'{0} must be one of {1}, not {2}'" )  )   ( 'format' )  )   ( Getattr ( Name ( 'self' )  )   ( 'name' )  )   ( CallFunc ( Name ( 'repr' )  )   ( CallFunc ( Name ( 'list' )  )   ( Name ( 'choices' )  )   ( None )   ( None )  )   ( None )   ( None )  )   ( CallFunc ( Name ( 'repr' )  )   ( Name ( 'value' )  )   ( None )   ( None )  )   ( None )   ( None )  )   ( None )   ( None )  ) 
=======================
Name:['isinstance']
line:368
scope:(354, 371)
source:-1
tree: ( CallFunc ( Name ( 'isinstance' )  )   ( Name ( 'choices' )  )   ( Name ( 'dict' )  )   ( None )   ( None )  ) 
=======================
Name:['self', 'get']
line:375
scope:(373, 380)
source:('member', -1)
tree: ( CallFunc ( Getattr ( Name ( 'self' )  )   ( 'get' )  )   ( None )   ( None )  ) 
=======================
Name:['isinstance']
line:376
scope:(373, 380)
source:-1
tree: ( CallFunc ( Name ( 'isinstance' )  )   ( Name ( 'value' )  )   ( Name ( 'NUMERIC_TYPES' )  )   ( None )   ( None )  ) 
=======================
Name:['ConfigTypeError']
line:379
scope:(373, 380)
source:('class', 5)
tree: ( CallFunc ( Name ( 'ConfigTypeError' )  )   ( CallFunc ( Getattr ( Const ( "'{0} must be numeric, not {1}'" )  )   ( 'format' )  )   ( Getattr ( Name ( 'self' )  )   ( 'name' )  )   ( Getattr ( CallFunc ( Name ( 'type' )  )   ( Name ( 'value' )  )   ( None )   ( None )  )   ( '__name__' )  )   ( None )   ( None )  )   ( None )   ( None )  ) 
=======================
Name:['self', 'get']
line:389
scope:(384, 401)
source:('member', -1)
tree: ( CallFunc ( Getattr ( Name ( 'self' )  )   ( 'get' )  )   ( None )   ( None )  ) 
=======================
Name:['isinstance']
line:390
scope:(384, 401)
source:-1
tree: ( CallFunc ( Name ( 'isinstance' )  )   ( Name ( 'value' )  )   ( Name ( 'bytes' )  )   ( None )   ( None )  ) 
=======================
Name:['value', 'decode']
line:391
scope:(384, 401)
source:('member', -1)
tree: ( CallFunc ( Getattr ( Name ( 'value' )  )   ( 'decode' )  )   ( Const ( "'utf8'" )  )   ( Const ( "'ignore'" )  )   ( None )   ( None )  ) 
=======================
Name:['isinstance']
line:393
scope:(384, 401)
source:-1
tree: ( CallFunc ( Name ( 'isinstance' )  )   ( Name ( 'value' )  )   ( Name ( 'STRING' )  )   ( None )   ( None )  ) 
=======================
Name:['value', 'split']
line:394
scope:(384, 401)
source:('member', -1)
tree: ( CallFunc ( Getattr ( Name ( 'value' )  )   ( 'split' )  )   ( None )   ( None )  ) 
=======================
Name:['list']
line:397
scope:(384, 401)
source:-1
tree: ( CallFunc ( Name ( 'list' )  )   ( Name ( 'value' )  )   ( None )   ( None )  ) 
=======================
Name:['ConfigTypeError']
line:400
scope:(384, 401)
source:('class', 5)
tree: ( CallFunc ( Name ( 'ConfigTypeError' )  )   ( CallFunc ( Getattr ( Const ( "'{0} must be a whitespace-separated string or a list'" )  )   ( 'format' )  )   ( Getattr ( Name ( 'self' )  )   ( 'name' )  )   ( None )   ( None )  )   ( None )   ( None )  ) 
=======================
Name:['OrderedDict']
line:409
scope:(404, 415)
source:('class', 1)
tree: ( CallFunc ( Name ( 'OrderedDict' )  )   ( None )   ( None )  ) 
=======================
Name:['self', 'items']
line:410
scope:(404, 415)
source:('member', -1)
tree: ( CallFunc ( Getattr ( Name ( 'self' )  )   ( 'items' )  )   ( None )   ( None )  ) 
=======================
Name:['view', 'flatten']
line:412
scope:(404, 415)
source:('member', -1)
tree: ( CallFunc ( Getattr ( Name ( 'view' )  )   ( 'flatten' )  )   ( None )   ( None )  ) 
=======================
Name:['view', 'get']
line:414
scope:(404, 415)
source:('member', -1)
tree: ( CallFunc ( Getattr ( Name ( 'view' )  )   ( 'get' )  )   ( None )   ( None )  ) 
=======================
Name:['list']
line:427
scope:(422, 428)
source:-1
tree: ( CallFunc ( Name ( 'list' )  )   ( Name ( 'sources' )  )   ( None )   ( None )  ) 
=======================
Name:['self', 'sources', 'append']
line:431
scope:(430, 431)
source:('member', -1)
tree: ( CallFunc ( Getattr ( Getattr ( Name ( 'self' )  )   ( 'sources' )  )   ( 'append' )  )   ( CallFunc ( Getattr ( Name ( 'ConfigSource' )  )   ( 'of' )  )   ( Name ( 'obj' )  )   ( None )   ( None )  )   ( None )   ( None )  ) 
=======================
Name:['self', 'sources', 'insert']
line:434
scope:(433, 434)
source:('member', -1)
tree: ( CallFunc ( Getattr ( Getattr ( Name ( 'self' )  )   ( 'sources' )  )   ( 'insert' )  )   ( Const ( '0' )  )   ( CallFunc ( Getattr ( Name ( 'ConfigSource' )  )   ( 'of' )  )   ( Name ( 'value' )  )   ( None )   ( None )  )   ( None )   ( None )  ) 
=======================
Name:['dict']
line:437
scope:(436, 437)
source:-1
tree: ( CallFunc ( Name ( 'dict' )  )   ( Name ( 's' )  )   ( None )   ( None )  ) 
=======================
Name:['isinstance']
line:456
scope:(449, 467)
source:-1
tree: ( CallFunc ( Name ( 'isinstance' )  )   ( Getattr ( Name ( 'self' )  )   ( 'parent' )  )   ( Name ( 'RootView' )  )   ( None )   ( None )  ) 
=======================
Name:['isinstance']
line:460
scope:(449, 467)
source:-1
tree: ( CallFunc ( Name ( 'isinstance' )  )   ( Getattr ( Name ( 'self' )  )   ( 'key' )  )   ( Name ( 'int' )  )   ( None )   ( None )  ) 
=======================
Name:['isinstance']
line:462
scope:(449, 467)
source:-1
tree: ( CallFunc ( Name ( 'isinstance' )  )   ( Getattr ( Name ( 'self' )  )   ( 'key' )  )   ( Name ( 'int' )  )   ( None )   ( None )  ) 
=======================
Name:['Const: ( Const ( "\'#{0}\'" )  ) ', 'format']
line:463
scope:(449, 467)
source:('member', -1)
tree: ( CallFunc ( Getattr ( Const ( "'#{0}'" )  )   ( 'format' )  )   ( Getattr ( Name ( 'self' )  )   ( 'key' )  )   ( None )   ( None )  ) 
=======================
Name:['isinstance']
line:464
scope:(449, 467)
source:-1
tree: ( CallFunc ( Name ( 'isinstance' )  )   ( Getattr ( Name ( 'self' )  )   ( 'key' )  )   ( Name ( 'BASESTRING' )  )   ( None )   ( None )  ) 
=======================
Name:['Const: ( Const ( "\'{0}\'" )  ) ', 'format']
line:465
scope:(449, 467)
source:('member', -1)
tree: ( CallFunc ( Getattr ( Const ( "'{0}'" )  )   ( 'format' )  )   ( Getattr ( Name ( 'self' )  )   ( 'key' )  )   ( None )   ( None )  ) 
=======================
Name:['Const: ( Const ( "\'{0}\'" )  ) ', 'format']
line:467
scope:(449, 467)
source:('member', -1)
tree: ( CallFunc ( Getattr ( Const ( "'{0}'" )  )   ( 'format' )  )   ( CallFunc ( Name ( 'repr' )  )   ( Getattr ( Name ( 'self' )  )   ( 'key' )  )   ( None )   ( None )  )   ( None )   ( None )  ) 
=======================
Name:['self', 'parent', 'resolve']
line:470
scope:(469, 486)
source:('member', -1)
tree: ( CallFunc ( Getattr ( Getattr ( Name ( 'self' )  )   ( 'parent' )  )   ( 'resolve' )  )   ( None )   ( None )  ) 
=======================
Name:['ConfigTypeError']
line:482
scope:(469, 486)
source:('class', 5)
tree: ( CallFunc ( Name ( 'ConfigTypeError' )  )   ( CallFunc ( Getattr ( Const ( "'{0} must be a collection, not {1}'" )  )   ( 'format' )  )   ( Getattr ( Getattr ( Name ( 'self' )  )   ( 'parent' )  )   ( 'name' )  )   ( Getattr ( CallFunc ( Name ( 'type' )  )   ( Name ( 'collection' )  )   ( None )   ( None )  )   ( '__name__' )  )   ( None )   ( None )  )   ( None )   ( None )  ) 
=======================
Name:['self', 'parent', 'set']
line:489
scope:(488, 489)
source:('member', -1)
tree: ( CallFunc ( Getattr ( Getattr ( Name ( 'self' )  )   ( 'parent' )  )   ( 'set' )  )   ( Dict ( Getattr ( Name ( 'self' )  )   ( 'key' )  )   ( Name ( 'value' )  )  )   ( None )   ( None )  ) 
=======================
Name:['self', 'parent', 'add']
line:492
scope:(491, 492)
source:('member', -1)
tree: ( CallFunc ( Getattr ( Getattr ( Name ( 'self' )  )   ( 'parent' )  )   ( 'add' )  )   ( Dict ( Getattr ( Name ( 'self' )  )   ( 'key' )  )   ( Name ( 'value' )  )  )   ( None )   ( None )  ) 
=======================
Name:['self', 'parent', 'root']
line:495
scope:(494, 495)
source:('member', -1)
tree: ( CallFunc ( Getattr ( Getattr ( Name ( 'self' )  )   ( 'parent' )  )   ( 'root' )  )   ( None )   ( None )  ) 
=======================
Name:['pkgutil', 'get_loader']
line:507
scope:(502, 518)
source:('import', 2)
tree: ( CallFunc ( Getattr ( Name ( 'pkgutil' )  )   ( 'get_loader' )  )   ( Name ( 'name' )  )   ( None )   ( None )  ) 
=======================
Name:['hasattr']
line:511
scope:(502, 518)
source:-1
tree: ( CallFunc ( Name ( 'hasattr' )  )   ( Name ( 'loader' )  )   ( Const ( "'get_filename'" )  )   ( None )   ( None )  ) 
=======================
Name:['loader', 'get_filename']
line:512
scope:(502, 518)
source:('member', -1)
tree: ( CallFunc ( Getattr ( Name ( 'loader' )  )   ( 'get_filename' )  )   ( Name ( 'name' )  )   ( None )   ( None )  ) 
=======================
Name:['__import__']
line:515
scope:(502, 518)
source:-1
tree: ( CallFunc ( Name ( '__import__' )  )   ( Name ( 'name' )  )   ( None )   ( None )  ) 
=======================
Name:['os', 'path', 'dirname']
line:518
scope:(502, 518)
source:('member', -1)
tree: ( CallFunc ( Getattr ( Getattr ( Name ( 'os' )  )   ( 'path' )  )   ( 'dirname' )  )   ( CallFunc ( Getattr ( Getattr ( Name ( 'os' )  )   ( 'path' )  )   ( 'abspath' )  )   ( Name ( 'filepath' )  )   ( None )   ( None )  )   ( None )   ( None )  ) 
=======================
Name:['platform', 'system']
line:530
scope:(520, 553)
source:('import', 0)
tree: ( CallFunc ( Getattr ( Name ( 'platform' )  )   ( 'system' )  )   ( None )   ( None )  ) 
=======================
Name:['paths', 'append']
line:531
scope:(520, 553)
source:('member', -1)
tree: ( CallFunc ( Getattr ( Name ( 'paths' )  )   ( 'append' )  )   ( Name ( 'MAC_DIR' )  )   ( None )   ( None )  ) 
=======================
Name:['paths', 'append']
line:532
scope:(520, 553)
source:('member', -1)
tree: ( CallFunc ( Getattr ( Name ( 'paths' )  )   ( 'append' )  )   ( Name ( 'UNIX_DIR_FALLBACK' )  )   ( None )   ( None )  ) 
=======================
Name:['paths', 'append']
line:534
scope:(520, 553)
source:('member', -1)
tree: ( CallFunc ( Getattr ( Name ( 'paths' )  )   ( 'append' )  )   ( Subscript ( Getattr ( Name ( 'os' )  )   ( 'environ' )  )   ( 'OP_APPLY' )   ( Name ( 'UNIX_DIR_VAR' )  )  )   ( None )   ( None )  ) 
=======================
Name:['platform', 'system']
line:536
scope:(520, 553)
source:('import', 0)
tree: ( CallFunc ( Getattr ( Name ( 'platform' )  )   ( 'system' )  )   ( None )   ( None )  ) 
=======================
Name:['paths', 'append']
line:537
scope:(520, 553)
source:('member', -1)
tree: ( CallFunc ( Getattr ( Name ( 'paths' )  )   ( 'append' )  )   ( Name ( 'WINDOWS_DIR_FALLBACK' )  )   ( None )   ( None )  ) 
=======================
Name:['paths', 'append']
line:539
scope:(520, 553)
source:('member', -1)
tree: ( CallFunc ( Getattr ( Name ( 'paths' )  )   ( 'append' )  )   ( Subscript ( Getattr ( Name ( 'os' )  )   ( 'environ' )  )   ( 'OP_APPLY' )   ( Name ( 'WINDOWS_DIR_VAR' )  )  )   ( None )   ( None )  ) 
=======================
Name:['paths', 'append']
line:543
scope:(520, 553)
source:('member', -1)
tree: ( CallFunc ( Getattr ( Name ( 'paths' )  )   ( 'append' )  )   ( Name ( 'UNIX_DIR_FALLBACK' )  )   ( None )   ( None )  ) 
=======================
Name:['paths', 'append']
line:545
scope:(520, 553)
source:('member', -1)
tree: ( CallFunc ( Getattr ( Name ( 'paths' )  )   ( 'append' )  )   ( Subscript ( Getattr ( Name ( 'os' )  )   ( 'environ' )  )   ( 'OP_APPLY' )   ( Name ( 'UNIX_DIR_VAR' )  )  )   ( None )   ( None )  ) 
=======================
Name:['os', 'path', 'abspath']
line:550
scope:(520, 553)
source:('member', -1)
tree: ( CallFunc ( Getattr ( Getattr ( Name ( 'os' )  )   ( 'path' )  )   ( 'abspath' )  )   ( CallFunc ( Getattr ( Getattr ( Name ( 'os' )  )   ( 'path' )  )   ( 'expanduser' )  )   ( Name ( 'path' )  )   ( None )   ( None )  )   ( None )   ( None )  ) 
=======================
Name:['out', 'append']
line:552
scope:(520, 553)
source:('member', -1)
tree: ( CallFunc ( Getattr ( Name ( 'out' )  )   ( 'append' )  )   ( Name ( 'path' )  )   ( None )   ( None )  ) 
=======================
Name:['self', 'construct_scalar']
line:568
scope:(567, 568)
source:('member', -1)
tree: ( CallFunc ( Getattr ( Name ( 'self' )  )   ( 'construct_scalar' )  )   ( Name ( 'node' )  )   ( None )   ( None )  ) 
=======================
Name:['OrderedDict']
line:573
scope:(572, 576)
source:('class', 1)
tree: ( CallFunc ( Name ( 'OrderedDict' )  )   ( None )   ( None )  ) 
=======================
Name:['self', 'construct_mapping']
line:575
scope:(572, 576)
source:('member', -1)
tree: ( CallFunc ( Getattr ( Name ( 'self' )  )   ( 'construct_mapping' )  )   ( Name ( 'node' )  )   ( None )   ( None )  ) 
=======================
Name:['data', 'update']
line:576
scope:(572, 576)
source:('member', -1)
tree: ( CallFunc ( Getattr ( Name ( 'data' )  )   ( 'update' )  )   ( Name ( 'value' )  )   ( None )   ( None )  ) 
=======================
Name:['isinstance']
line:579
scope:(578, 601)
source:-1
tree: ( CallFunc ( Name ( 'isinstance' )  )   ( Name ( 'node' )  )   ( Getattr ( Name ( 'yaml' )  )   ( 'MappingNode' )  )   ( None )   ( None )  ) 
=======================
Name:['self', 'flatten_mapping']
line:580
scope:(578, 601)
source:('member', -1)
tree: ( CallFunc ( Getattr ( Name ( 'self' )  )   ( 'flatten_mapping' )  )   ( Name ( 'node' )  )   ( None )   ( None )  ) 
=======================
Name:['yaml', 'constructor', 'ConstructorError']
line:583
scope:(578, 601)
source:('member', -1)
tree: ( CallFunc ( Getattr ( Getattr ( Name ( 'yaml' )  )   ( 'constructor' )  )   ( 'ConstructorError' )  )   ( Name ( 'None' )  )   ( Name ( 'None' )  )   ( Mod ( Const ( "'expected a mapping node, but found %s'" )  )   ( Getattr ( Name ( 'node' )  )   ( 'id' )  )  )   ( Getattr ( Name ( 'node' )  )   ( 'start_mark' )  )   ( None )   ( None )  ) 
=======================
Name:['OrderedDict']
line:588
scope:(578, 601)
source:('class', 1)
tree: ( CallFunc ( Name ( 'OrderedDict' )  )   ( None )   ( None )  ) 
=======================
Name:['self', 'construct_object']
line:590
scope:(578, 601)
source:('member', -1)
tree: ( CallFunc ( Getattr ( Name ( 'self' )  )   ( 'construct_object' )  )   ( Name ( 'key_node' )  )   ( Keyword ( 'deep' )   ( Name ( 'deep' )  )  )   ( None )   ( None )  ) 
=======================
Name:['hash']
line:592
scope:(578, 601)
source:-1
tree: ( CallFunc ( Name ( 'hash' )  )   ( Name ( 'key' )  )   ( None )   ( None )  ) 
=======================
Name:['yaml', 'constructor', 'ConstructorError']
line:595
scope:(578, 601)
source:('member', -1)
tree: ( CallFunc ( Getattr ( Getattr ( Name ( 'yaml' )  )   ( 'constructor' )  )   ( 'ConstructorError' )  )   ( Const ( "'while constructing a mapping'" )  )   ( Getattr ( Name ( 'node' )  )   ( 'start_mark' )  )   ( Mod ( Const ( "'found unacceptable key (%s)'" )  )   ( Name ( 'exc' )  )  )   ( Getattr ( Name ( 'key_node' )  )   ( 'start_mark' )  )   ( None )   ( None )  ) 
=======================
Name:['self', 'construct_object']
line:599
scope:(578, 601)
source:('member', -1)
tree: ( CallFunc ( Getattr ( Name ( 'self' )  )   ( 'construct_object' )  )   ( Name ( 'value_node' )  )   ( Keyword ( 'deep' )   ( Name ( 'deep' )  )  )   ( None )   ( None )  ) 
=======================
Name:['super']
line:605
scope:(604, 606)
source:('member', -1, 'followed')
tree: ( CallFunc ( Getattr ( CallFunc ( Name ( 'super' )  )   ( Name ( 'Loader' )  )   ( Name ( 'self' )  )   ( None )   ( None )  )   ( 'check_plain' )  )   ( None )   ( None )  ) 
=======================
Name:['self', 'peek']
line:606
scope:(604, 606)
source:('member', -1)
tree: ( CallFunc ( Getattr ( Name ( 'self' )  )   ( 'peek' )  )   ( None )   ( None )  ) 
=======================
Name:['Loader', 'add_constructor']
line:608
scope:(0, 999998)
source:('member', -1)
tree: ( CallFunc ( Getattr ( Name ( 'Loader' )  )   ( 'add_constructor' )  )   ( Const ( "'tag:yaml.org,2002:str'" )  )   ( Getattr ( Name ( 'Loader' )  )   ( '_construct_unicode' )  )   ( None )   ( None )  ) 
=======================
Name:['Loader', 'add_constructor']
line:609
scope:(0, 999998)
source:('member', -1)
tree: ( CallFunc ( Getattr ( Name ( 'Loader' )  )   ( 'add_constructor' )  )   ( Const ( "'tag:yaml.org,2002:map'" )  )   ( Getattr ( Name ( 'Loader' )  )   ( 'construct_yaml_map' )  )   ( None )   ( None )  ) 
=======================
Name:['Loader', 'add_constructor']
line:610
scope:(0, 999998)
source:('member', -1)
tree: ( CallFunc ( Getattr ( Name ( 'Loader' )  )   ( 'add_constructor' )  )   ( Const ( "'tag:yaml.org,2002:omap'" )  )   ( Getattr ( Name ( 'Loader' )  )   ( 'construct_yaml_map' )  )   ( None )   ( None )  ) 
=======================
Name:['open']
line:617
scope:(612, 620)
source:-1
tree: ( CallFunc ( Name ( 'open' )  )   ( Name ( 'filename' )  )   ( Const ( "'r'" )  )   ( None )   ( None )  ) 
=======================
Name:['yaml', 'load']
line:618
scope:(612, 620)
source:('import', 4)
tree: ( CallFunc ( Getattr ( Name ( 'yaml' )  )   ( 'load' )  )   ( Name ( 'f' )  )   ( Keyword ( 'Loader' )   ( Name ( 'Loader' )  )  )   ( None )   ( None )  ) 
=======================
Name:['ConfigReadError']
line:620
scope:(612, 620)
source:('class', 7)
tree: ( CallFunc ( Name ( 'ConfigReadError' )  )   ( Name ( 'filename' )  )   ( Name ( 'exc' )  )   ( None )   ( None )  ) 
=======================
Name:['yaml', 'MappingNode']
line:643
scope:(639, 668)
source:('import', 4)
tree: ( CallFunc ( Getattr ( Name ( 'yaml' )  )   ( 'MappingNode' )  )   ( Name ( 'tag' )  )   ( Name ( 'value' )  )   ( Keyword ( 'flow_style' )   ( Name ( 'flow_style' )  )  )   ( None )   ( None )  ) 
=======================
Name:['outsideFunc']
line:647
scope:(639, 668)
source:('function', 47)
tree: ( CallFunc ( Name ( 'outsideFunc' )  )   ( None )   ( None )  ) 
=======================
Name:['insideFunc']
line:648
scope:(639, 668)
source:('function', 51)
tree: ( CallFunc ( Name ( 'insideFunc' )  )   ( None )   ( None )  ) 
=======================
Name:['outsideClass']
line:649
scope:(639, 668)
source:('class', 13)
tree: ( CallFunc ( Name ( 'outsideClass' )  )   ( None )   ( None )  ) 
=======================
Name:['Dumper', 'insideClass']
line:650
scope:(639, 668)
source:('class', 15)
tree: ( CallFunc ( Getattr ( Name ( 'Dumper' )  )   ( 'insideClass' )  )   ( None )   ( None )  ) 
=======================
Name:['hasattr']
line:651
scope:(639, 668)
source:-1
tree: ( CallFunc ( Name ( 'hasattr' )  )   ( Name ( 'mapping' )  )   ( Const ( "'items'" )  )   ( None )   ( None )  ) 
=======================
Name:['list']
line:652
scope:(639, 668)
source:-1
tree: ( CallFunc ( Name ( 'list' )  )   ( CallFunc ( Getattr ( Name ( 'mapping' )  )   ( 'items' )  )   ( None )   ( None )  )   ( None )   ( None )  ) 
=======================
Name:['self', 'represent_data']
line:654
scope:(639, 668)
source:('member', -1)
tree: ( CallFunc ( Getattr ( Name ( 'self' )  )   ( 'represent_data' )  )   ( Name ( 'item_key' )  )   ( None )   ( None )  ) 
=======================
Name:['self', 'represent_data']
line:655
scope:(639, 668)
source:('member', -1)
tree: ( CallFunc ( Getattr ( Name ( 'self' )  )   ( 'represent_data' )  )   ( Name ( 'item_value' )  )   ( None )   ( None )  ) 
=======================
Name:['isinstance']
line:656
scope:(639, 668)
source:-1
tree: ( CallFunc ( Name ( 'isinstance' )  )   ( Name ( 'node_key' )  )   ( Getattr ( Name ( 'yaml' )  )   ( 'ScalarNode' )  )   ( None )   ( None )  ) 
=======================
Name:['isinstance']
line:659
scope:(639, 668)
source:-1
tree: ( CallFunc ( Name ( 'isinstance' )  )   ( Name ( 'node_value' )  )   ( Getattr ( Name ( 'yaml' )  )   ( 'ScalarNode' )  )   ( None )   ( None )  ) 
=======================
Name:['value', 'append']
line:662
scope:(639, 668)
source:('member', -1)
tree: ( CallFunc ( Getattr ( Name ( 'value' )  )   ( 'append' )  )   ( Tuple ( Name ( 'node_key' )  )   ( Name ( 'node_value' )  )  )   ( None )   ( None )  ) 
=======================
Name:['super']
line:674
scope:(670, 680)
source:('member', -1, 'followed')
tree: ( CallFunc ( Getattr ( CallFunc ( Name ( 'super' )  )   ( Name ( 'Dumper' )  )   ( Name ( 'self' )  )   ( None )   ( None )  )   ( 'represent_list' )  )   ( Name ( 'data' )  )   ( None )   ( None )  ) 
=======================
Name:['len']
line:675
scope:(670, 680)
source:-1
tree: ( CallFunc ( Name ( 'len' )  )   ( Name ( 'data' )  )   ( None )   ( None )  ) 
=======================
Name:['self', 'represent_scalar']
line:689
scope:(682, 689)
source:('member', -1)
tree: ( CallFunc ( Getattr ( Name ( 'self' )  )   ( 'represent_scalar' )  )   ( Const ( "'tag:yaml.org,2002:bool'" )  )   ( Name ( 'value' )  )   ( None )   ( None )  ) 
=======================
Name:['self', 'represent_scalar']
line:694
scope:(691, 694)
source:('member', -1)
tree: ( CallFunc ( Getattr ( Name ( 'self' )  )   ( 'represent_scalar' )  )   ( Const ( "'tag:yaml.org,2002:null'" )  )   ( Const ( "''" )  )   ( None )   ( None )  ) 
=======================
Name:['Dumper', 'add_representer']
line:696
scope:(0, 999998)
source:('member', -1)
tree: ( CallFunc ( Getattr ( Name ( 'Dumper' )  )   ( 'add_representer' )  )   ( Name ( 'OrderedDict' )  )   ( Getattr ( Name ( 'Dumper' )  )   ( 'represent_dict' )  )   ( None )   ( None )  ) 
=======================
Name:['Dumper', 'add_representer']
line:697
scope:(0, 999998)
source:('member', -1)
tree: ( CallFunc ( Getattr ( Name ( 'Dumper' )  )   ( 'add_representer' )  )   ( Name ( 'bool' )  )   ( Getattr ( Name ( 'Dumper' )  )   ( 'represent_bool' )  )   ( None )   ( None )  ) 
=======================
Name:['Dumper', 'add_representer']
line:698
scope:(0, 999998)
source:('member', -1)
tree: ( CallFunc ( Getattr ( Name ( 'Dumper' )  )   ( 'add_representer' )  )   ( CallFunc ( Name ( 'type' )  )   ( Name ( 'None' )  )   ( None )   ( None )  )   ( Getattr ( Name ( 'Dumper' )  )   ( 'represent_none' )  )   ( None )   ( None )  ) 
=======================
Name:['Dumper', 'add_representer']
line:699
scope:(0, 999998)
source:('member', -1)
tree: ( CallFunc ( Getattr ( Name ( 'Dumper' )  )   ( 'add_representer' )  )   ( Name ( 'list' )  )   ( Getattr ( Name ( 'Dumper' )  )   ( 'represent_list' )  )   ( None )   ( None )  ) 
=======================
Name:['dict']
line:707
scope:(701, 730)
source:-1
tree: ( CallFunc ( Name ( 'dict' )  )   ( None )   ( None )  ) 
=======================
Name:['iter']
line:708
scope:(701, 730)
source:-1
tree: ( CallFunc ( Name ( 'iter' )  )   ( CallFunc ( Getattr ( Name ( 'default_data' )  )   ( 'splitlines' )  )   ( None )   ( None )  )   ( None )   ( None )  ) 
=======================
Name:['line', 'startswith']
line:712
scope:(701, 730)
source:('member', -1)
tree: ( CallFunc ( Getattr ( Name ( 'line' )  )   ( 'startswith' )  )   ( Const ( "'#'" )  )   ( None )   ( None )  ) 
=======================
Name:['Const: ( Const ( "\'{0}\\\\n\'" )  ) ', 'format']
line:713
scope:(701, 730)
source:('member', -1)
tree: ( CallFunc ( Getattr ( Const ( "'{0}\\n'" )  )   ( 'format' )  )   ( Name ( 'line' )  )   ( None )   ( None )  ) 
=======================
Name:['next']
line:717
scope:(701, 730)
source:-1
tree: ( CallFunc ( Name ( 'next' )  )   ( Name ( 'default_lines' )  )   ( None )   ( None )  ) 
=======================
Name:['line', 'startswith']
line:718
scope:(701, 730)
source:('member', -1)
tree: ( CallFunc ( Getattr ( Name ( 'line' )  )   ( 'startswith' )  )   ( Const ( "'#'" )  )   ( None )   ( None )  ) 
=======================
Name:['Const: ( Const ( "\'{0}\\\\n\'" )  ) ', 'format']
line:720
scope:(701, 730)
source:('member', -1)
tree: ( CallFunc ( Getattr ( Const ( "'{0}\\n'" )  )   ( 'format' )  )   ( Name ( 'line' )  )   ( None )   ( None )  ) 
=======================
Name:[' ( Subscript ( CallFunc ( Getattr ( Name ( \'line\' )  )   ( \'split\' )  )   ( Const ( "\':\'" )  )   ( None )   ( None )  )   ( \'OP_APPLY\' )   ( Const ( \'0\' )  )  ) ', 'strip']
line:721
scope:(701, 730)
source:('member', -1)
tree: ( CallFunc ( Getattr ( Subscript ( CallFunc ( Getattr ( Name ( 'line' )  )   ( 'split' )  )   ( Const ( "':'" )  )   ( None )   ( None )  )   ( 'OP_APPLY' )   ( Const ( '0' )  )  )   ( 'strip' )  )   ( None )   ( None )  ) 
=======================
Name:['iter']
line:723
scope:(701, 730)
source:-1
tree: ( CallFunc ( Name ( 'iter' )  )   ( CallFunc ( Getattr ( Name ( 'data' )  )   ( 'splitlines' )  )   ( None )   ( None )  )   ( None )   ( None )  ) 
=======================
Name:[' ( Subscript ( CallFunc ( Getattr ( Name ( \'line\' )  )   ( \'split\' )  )   ( Const ( "\':\'" )  )   ( None )   ( None )  )   ( \'OP_APPLY\' )   ( Const ( \'0\' )  )  ) ', 'strip']
line:726
scope:(701, 730)
source:('member', -1)
tree: ( CallFunc ( Getattr ( Subscript ( CallFunc ( Getattr ( Name ( 'line' )  )   ( 'split' )  )   ( Const ( "':'" )  )   ( None )   ( None )  )   ( 'OP_APPLY' )   ( Const ( '0' )  )  )   ( 'strip' )  )   ( None )   ( None )  ) 
=======================
Name:['Const: ( Const ( "\'{0}\\\\n\'" )  ) ', 'format']
line:729
scope:(701, 730)
source:('member', -1)
tree: ( CallFunc ( Getattr ( Const ( "'{0}\\n'" )  )   ( 'format' )  )   ( Name ( 'line' )  )   ( None )   ( None )  ) 
=======================
Name:['super']
line:747
scope:(736, 754)
source:('member', -1, 'followed')
tree: ( CallFunc ( Getattr ( CallFunc ( Name ( 'super' )  )   ( Name ( 'Configuration' )  )   ( Name ( 'self' )  )   ( None )   ( None )  )   ( '__init__' )  )   ( List )   ( None )   ( None )  ) 
=======================
Name:['Const: ( Const ( "\'{0}DIR\'" )  ) ', 'format']
line:751
scope:(736, 754)
source:('member', -1)
tree: ( CallFunc ( Getattr ( Const ( "'{0}DIR'" )  )   ( 'format' )  )   ( CallFunc ( Getattr ( Getattr ( Name ( 'self' )  )   ( 'appname' )  )   ( 'upper' )  )   ( None )   ( None )  )   ( None )   ( None )  ) 
=======================
Name:['self', 'read']
line:754
scope:(736, 754)
source:('member', -1)
tree: ( CallFunc ( Getattr ( Name ( 'self' )  )   ( 'read' )  )   ( None )   ( None )  ) 
=======================
Name:['os', 'path', 'join']
line:761
scope:(756, 761)
source:('member', -1)
tree: ( CallFunc ( Getattr ( Getattr ( Name ( 'os' )  )   ( 'path' )  )   ( 'join' )  )   ( CallFunc ( Getattr ( Name ( 'self' )  )   ( 'config_dir' )  )   ( None )   ( None )  )   ( Name ( 'CONFIG_FILENAME' )  )   ( None )   ( None )  ) 
=======================
Name:['self', 'user_config_path']
line:768
scope:(763, 770)
source:('member', -1)
tree: ( CallFunc ( Getattr ( Name ( 'self' )  )   ( 'user_config_path' )  )   ( None )   ( None )  ) 
=======================
Name:['os', 'path', 'isfile']
line:769
scope:(763, 770)
source:('member', -1)
tree: ( CallFunc ( Getattr ( Getattr ( Name ( 'os' )  )   ( 'path' )  )   ( 'isfile' )  )   ( Name ( 'filename' )  )   ( None )   ( None )  ) 
=======================
Name:['self', 'add']
line:770
scope:(763, 770)
source:('member', -1)
tree: ( CallFunc ( Getattr ( Name ( 'self' )  )   ( 'add' )  )   ( CallFunc ( Name ( 'ConfigSource' )  )   ( Or ( CallFunc ( Name ( 'load_yaml' )  )   ( Name ( 'filename' )  )   ( None )   ( None )  )   ( Dict )  )   ( Name ( 'filename' )  )   ( None )   ( None )  )   ( None )   ( None )  ) 
=======================
Name:['_package_path']
line:778
scope:(772, 782)
source:('function', 40)
tree: ( CallFunc ( Name ( '_package_path' )  )   ( Getattr ( Name ( 'self' )  )   ( 'modname' )  )   ( None )   ( None )  ) 
=======================
Name:['os', 'path', 'join']
line:780
scope:(772, 782)
source:('member', -1)
tree: ( CallFunc ( Getattr ( Getattr ( Name ( 'os' )  )   ( 'path' )  )   ( 'join' )  )   ( Name ( 'pkg_path' )  )   ( Name ( 'DEFAULT_FILENAME' )  )   ( None )   ( None )  ) 
=======================
Name:['os', 'path', 'isfile']
line:781
scope:(772, 782)
source:('member', -1)
tree: ( CallFunc ( Getattr ( Getattr ( Name ( 'os' )  )   ( 'path' )  )   ( 'isfile' )  )   ( Name ( 'filename' )  )   ( None )   ( None )  ) 
=======================
Name:['self', 'add']
line:782
scope:(772, 782)
source:('member', -1)
tree: ( CallFunc ( Getattr ( Name ( 'self' )  )   ( 'add' )  )   ( CallFunc ( Name ( 'ConfigSource' )  )   ( CallFunc ( Name ( 'load_yaml' )  )   ( Name ( 'filename' )  )   ( None )   ( None )  )   ( Name ( 'filename' )  )   ( Name ( 'True' )  )   ( None )   ( None )  )   ( None )   ( None )  ) 
=======================
Name:['self', '_add_user_source']
line:791
scope:(784, 793)
source:('member', -1)
tree: ( CallFunc ( Getattr ( Name ( 'self' )  )   ( '_add_user_source' )  )   ( None )   ( None )  ) 
=======================
Name:['self', '_add_default_source']
line:793
scope:(784, 793)
source:('member', -1)
tree: ( CallFunc ( Getattr ( Name ( 'self' )  )   ( '_add_default_source' )  )   ( None )   ( None )  ) 
=======================
Name:['os', 'path', 'abspath']
line:809
scope:(795, 826)
source:('member', -1)
tree: ( CallFunc ( Getattr ( Getattr ( Name ( 'os' )  )   ( 'path' )  )   ( 'abspath' )  )   ( CallFunc ( Getattr ( Getattr ( Name ( 'os' )  )   ( 'path' )  )   ( 'expanduser' )  )   ( Name ( 'appdir' )  )   ( None )   ( None )  )   ( None )   ( None )  ) 
=======================
Name:['os', 'path', 'isfile']
line:810
scope:(795, 826)
source:('member', -1)
tree: ( CallFunc ( Getattr ( Getattr ( Name ( 'os' )  )   ( 'path' )  )   ( 'isfile' )  )   ( Name ( 'appdir' )  )   ( None )   ( None )  ) 
=======================
Name:['ConfigError']
line:811
scope:(795, 826)
source:('class', 3)
tree: ( CallFunc ( Name ( 'ConfigError' )  )   ( CallFunc ( Getattr ( Const ( "'{0} must be a directory'" )  )   ( 'format' )  )   ( Getattr ( Name ( 'self' )  )   ( '_env_var' )  )   ( None )   ( None )  )   ( None )   ( None )  ) 
=======================
Name:['config_dirs']
line:818
scope:(795, 826)
source:('function', 41)
tree: ( CallFunc ( Name ( 'config_dirs' )  )   ( None )   ( None )  ) 
=======================
Name:['os', 'path', 'join']
line:819
scope:(795, 826)
source:('member', -1)
tree: ( CallFunc ( Getattr ( Getattr ( Name ( 'os' )  )   ( 'path' )  )   ( 'join' )  )   ( Name ( 'confdir' )  )   ( Getattr ( Name ( 'self' )  )   ( 'appname' )  )   ( None )   ( None )  ) 
=======================
Name:['os', 'path', 'isfile']
line:820
scope:(795, 826)
source:('member', -1)
tree: ( CallFunc ( Getattr ( Getattr ( Name ( 'os' )  )   ( 'path' )  )   ( 'isfile' )  )   ( CallFunc ( Getattr ( Getattr ( Name ( 'os' )  )   ( 'path' )  )   ( 'join' )  )   ( Name ( 'appdir' )  )   ( Name ( 'CONFIG_FILENAME' )  )   ( None )   ( None )  )   ( None )   ( None )  ) 
=======================
Name:['os', 'path', 'isdir']
line:824
scope:(795, 826)
source:('member', -1)
tree: ( CallFunc ( Getattr ( Getattr ( Name ( 'os' )  )   ( 'path' )  )   ( 'isdir' )  )   ( Name ( 'appdir' )  )   ( None )   ( None )  ) 
=======================
Name:['os', 'makedirs']
line:825
scope:(795, 826)
source:('import', 1)
tree: ( CallFunc ( Getattr ( Name ( 'os' )  )   ( 'makedirs' )  )   ( Name ( 'appdir' )  )   ( None )   ( None )  ) 
=======================
Name:['os', 'path', 'abspath']
line:832
scope:(828, 833)
source:('member', -1)
tree: ( CallFunc ( Getattr ( Getattr ( Name ( 'os' )  )   ( 'path' )  )   ( 'abspath' )  )   ( Name ( 'filename' )  )   ( None )   ( None )  ) 
=======================
Name:['self', 'set']
line:833
scope:(828, 833)
source:('member', -1)
tree: ( CallFunc ( Getattr ( Name ( 'self' )  )   ( 'set' )  )   ( CallFunc ( Name ( 'ConfigSource' )  )   ( CallFunc ( Name ( 'load_yaml' )  )   ( Name ( 'filename' )  )   ( None )   ( None )  )   ( Name ( 'filename' )  )   ( None )   ( None )  )   ( None )   ( None )  ) 
=======================
Name:['self', 'flatten']
line:849
scope:(835, 870)
source:('member', -1)
tree: ( CallFunc ( Getattr ( Name ( 'self' )  )   ( 'flatten' )  )   ( None )   ( None )  ) 
=======================
Name:['RootView']
line:853
scope:(835, 870)
source:('class', 10, 'followed')
tree: ( CallFunc ( Getattr ( CallFunc ( Name ( 'RootView' )  )   ( Name ( 'sources' )  )   ( None )   ( None )  )   ( 'flatten' )  )   ( None )   ( None )  ) 
=======================
Name:['yaml', 'dump']
line:855
scope:(835, 870)
source:('import', 4)
tree: ( CallFunc ( Getattr ( Name ( 'yaml' )  )   ( 'dump' )  )   ( Name ( 'out_dict' )  )   ( Keyword ( 'Dumper' )   ( Name ( 'Dumper' )  )  )   ( Keyword ( 'default_flow_style' )   ( Name ( 'None' )  )  )   ( Keyword ( 'indent' )   ( Const ( '4' )  )  )   ( Keyword ( 'width' )   ( Const ( '1000' )  )  )   ( None )   ( None )  ) 
=======================
Name:['open']
line:866
scope:(835, 870)
source:-1
tree: ( CallFunc ( Name ( 'open' )  )   ( Getattr ( Name ( 'default_source' )  )   ( 'filename' )  )   ( Const ( "'r'" )  )   ( None )   ( None )  ) 
=======================
Name:['fp', 'read']
line:867
scope:(835, 870)
source:('member', -1)
tree: ( CallFunc ( Getattr ( Name ( 'fp' )  )   ( 'read' )  )   ( None )   ( None )  ) 
=======================
Name:['restore_yaml_comments']
line:868
scope:(835, 870)
source:('function', 55)
tree: ( CallFunc ( Name ( 'restore_yaml_comments' )  )   ( Name ( 'yaml_out' )  )   ( Name ( 'default_data' )  )   ( None )   ( None )  ) 
=======================
Name:['super']
line:879
scope:(878, 882)
source:('member', -1, 'followed')
tree: ( CallFunc ( Getattr ( CallFunc ( Name ( 'super' )  )   ( Name ( 'LazyConfig' )  )   ( Name ( 'self' )  )   ( None )   ( None )  )   ( '__init__' )  )   ( Name ( 'appname' )  )   ( Name ( 'modname' )  )   ( Name ( 'False' )  )   ( None )   ( None )  ) 
=======================
Name:['super']
line:886
scope:(884, 886)
source:('member', -1, 'followed')
tree: ( CallFunc ( Getattr ( CallFunc ( Name ( 'super' )  )   ( Name ( 'LazyConfig' )  )   ( Name ( 'self' )  )   ( None )   ( None )  )   ( 'read' )  )   ( Name ( 'user' )  )   ( Name ( 'defaults' )  )   ( None )   ( None )  ) 
=======================
Name:['self', 'read']
line:891
scope:(888, 894)
source:('member', -1)
tree: ( CallFunc ( Getattr ( Name ( 'self' )  )   ( 'read' )  )   ( None )   ( None )  ) 
=======================
Name:['super']
line:894
scope:(888, 894)
source:('member', -1, 'followed')
tree: ( CallFunc ( Getattr ( CallFunc ( Name ( 'super' )  )   ( Name ( 'LazyConfig' )  )   ( Name ( 'self' )  )   ( None )   ( None )  )   ( 'resolve' )  )   ( None )   ( None )  ) 
=======================
Name:['super']
line:897
scope:(896, 901)
source:('member', -1, 'followed')
tree: ( CallFunc ( Getattr ( CallFunc ( Name ( 'super' )  )   ( Name ( 'LazyConfig' )  )   ( Name ( 'self' )  )   ( None )   ( None )  )   ( 'add' )  )   ( Name ( 'value' )  )   ( None )   ( None )  ) 
=======================
Name:['super']
line:904
scope:(903, 908)
source:('member', -1, 'followed')
tree: ( CallFunc ( Getattr ( CallFunc ( Name ( 'super' )  )   ( Name ( 'LazyConfig' )  )   ( Name ( 'self' )  )   ( None )   ( None )  )   ( 'set' )  )   ( Name ( 'value' )  )   ( None )   ( None )  ) 
=======================

Module
'Worry-free YAML configuration files.\n'

Stmt
	From
		'__future__'

		[('unicode_literals', None)]

		0


	Import
		[('platform', None)]


	Import
		[('os', None)]


	Import
		[('pkgutil', None)]


	Import
		[('sys', None)]


	Import
		[('yaml', None)]


	Import
		[('types', None)]


	TryExcept
		Stmt
			From
				'collections'

				[('OrderedDict', None)]

				0



		Name
			'ImportError'


		None

		Stmt
			From
				'ordereddict'

				[('OrderedDict', None)]

				0



		None


	Assign
		AssName
			'UNIX_DIR_VAR'


		Const
			"'XDG_CONFIG_HOME'"



	Assign
		AssName
			'UNIX_DIR_FALLBACK'


		Const
			"'~/.config'"



	Assign
		AssName
			'WINDOWS_DIR_VAR'


		Const
			"'APPDATA'"



	Assign
		AssName
			'WINDOWS_DIR_FALLBACK'


		Const
			"'~\\\\AppData\\\\Roaming'"



	Assign
		AssName
			'MAC_DIR'


		Const
			"'~/Library/Application Support'"



	Assign
		AssName
			'CONFIG_FILENAME'


		Const
			"'config.yaml'"



	Assign
		AssName
			'DEFAULT_FILENAME'


		Const
			"'config_default.yaml'"



	Assign
		AssName
			'ROOT_NAME'


		Const
			"'root'"



	Assign
		AssName
			'YAML_TAB_PROBLEM'


		Const
			'"found character \'\\\\t\' that cannot start any token"'



	Assign
		AssName
			'PY3'


		Compare
			Subscript
				Getattr
					Name
						'sys'


					'version_info'


				'OP_APPLY'

				Const
					'0'



			'=='

			Const
				'3'




	Assign
		AssName
			'STRING'


		IfExp
			Name
				'PY3'


			Name
				'str'


			Name
				'unicode'




	Assign
		AssName
			'BASESTRING'


		IfExp
			Name
				'PY3'


			Name
				'str'


			Name
				'basestring'




	Assign
		AssName
			'NUMERIC_TYPES'


		IfExp
			Name
				'PY3'


			Tuple
				Name
					'int'


				Name
					'float'



			Tuple
				Name
					'int'


				Name
					'float'


				Name
					'long'





	Assign
		AssName
			'TYPE_TYPES'


		IfExp
			Name
				'PY3'


			Tuple
				Name
					'type'



			Tuple
				Name
					'type'


				Getattr
					Name
						'types'


					'ClassType'





	Function
		'iter_first'

		'sequence'

		0

		Stmt
			Assign
				AssName
					'it'


				CallFunc
					Name
						'iter'


					Name
						'sequence'


					None

					None



			TryExcept
				Stmt
					If
						Name
							'PY3'


						Stmt
							Return
								CallFunc
									Name
										'next'


									Name
										'it'


									None

									None




						Stmt
							Return
								CallFunc
									Getattr
										Name
											'it'


										'next'


									None

									None






				Name
					'StopIteration'


				None

				Stmt
					Raise
						CallFunc
							Name
								'ValueError'


							None

							None


						None

						None



				None




	Class
		'ConfigError'

		Name
			'Exception'


		Stmt


	Class
		'NotFoundError'

		Name
			'ConfigError'


		Stmt


	Class
		'ConfigTypeError'

		Name
			'ConfigError'


		Name
			'TypeError'


		Stmt


	Class
		'ConfigValueError'

		Name
			'ConfigError'


		Name
			'ValueError'


		Stmt


	Class
		'ConfigReadError'

		Name
			'ConfigError'


		Stmt
			Function
				'__init__'

				'self'

				'filename'

				'reason'

				Name
					'None'


				0

				Stmt
					Assign
						AssAttr
							Name
								'self'


							'filename'

							'OP_ASSIGN'


						Name
							'filename'



					Assign
						AssAttr
							Name
								'self'


							'reason'

							'OP_ASSIGN'


						Name
							'reason'



					Assign
						AssName
							'message'


						CallFunc
							Getattr
								Const
									"'file {0} could not be read'"


								'format'


							Name
								'filename'


							None

							None



					If
						And
							CallFunc
								Name
									'isinstance'


								Name
									'reason'


								Getattr
									Getattr
										Name
											'yaml'


										'scanner'


									'ScannerError'


								None

								None


							Compare
								Getattr
									Name
										'reason'


									'problem'


								'=='

								Name
									'YAML_TAB_PROBLEM'




						Stmt
							AugAssign
								Name
									'message'


								'+='

								CallFunc
									Getattr
										Const
											"': found tab character at line {0}, column {1}'"


										'format'


									Add
										Getattr
											Getattr
												Name
													'reason'


												'problem_mark'


											'line'


										Const
											'1'



									Add
										Getattr
											Getattr
												Name
													'reason'


												'problem_mark'


											'column'


										Const
											'1'



									None

									None




						Name
							'reason'


						Stmt
							AugAssign
								Name
									'message'


								'+='

								CallFunc
									Getattr
										Const
											"': {0}'"


										'format'


									Name
										'reason'


									None

									None




						None


					Discard
						CallFunc
							Getattr
								CallFunc
									Name
										'super'


									Name
										'ConfigReadError'


									Name
										'self'


									None

									None


								'__init__'


							Name
								'message'


							None

							None







	Class
		'ConfigSource'

		Name
			'dict'


		Stmt
			Function
				'__init__'

				'self'

				'value'

				'filename'

				'default'

				Name
					'None'


				Name
					'False'


				0

				Stmt
					Discard
						CallFunc
							Getattr
								CallFunc
									Name
										'super'


									Name
										'ConfigSource'


									Name
										'self'


									None

									None


								'__init__'


							Name
								'value'


							None

							None



					If
						And
							Compare
								Name
									'filename'


								'is not'

								Name
									'None'



							Not
								CallFunc
									Name
										'isinstance'


									Name
										'filename'


									Name
										'BASESTRING'


									None

									None




						Stmt
							Raise
								CallFunc
									Name
										'TypeError'


									Const
										"'filename must be a string or None'"


									None

									None


								None

								None



						None


					Assign
						AssAttr
							Name
								'self'


							'filename'

							'OP_ASSIGN'


						Name
							'filename'



					Assign
						AssAttr
							Name
								'self'


							'default'

							'OP_ASSIGN'


						Name
							'default'





			Function
				'__repr__'

				'self'

				0

				Stmt
					Return
						CallFunc
							Getattr
								Const
									"'ConfigSource({0}, {1}, {2})'"


								'format'


							CallFunc
								Getattr
									CallFunc
										Name
											'super'


										Name
											'ConfigSource'


										Name
											'self'


										None

										None


									'__repr__'


								None

								None


							CallFunc
								Name
									'repr'


								Getattr
									Name
										'self'


									'filename'


								None

								None


							CallFunc
								Name
									'repr'


								Getattr
									Name
										'self'


									'default'


								None

								None


							None

							None





			Function
				'of'

				'self'

				'value'

				0

				Stmt
					If
						CallFunc
							Name
								'isinstance'


							Name
								'value'


							Name
								'ConfigSource'


							None

							None


						Stmt
							Return
								Name
									'value'




						CallFunc
							Name
								'isinstance'


							Name
								'value'


							Name
								'dict'


							None

							None


						Stmt
							Return
								CallFunc
									Name
										'ConfigSource'


									Name
										'value'


									None

									None




						Stmt
							Raise
								CallFunc
									Name
										'TypeError'


									Const
										"'source value must be a dict'"


									None

									None


								None

								None








	Class
		'ConfigView'

		Name
			'object'


		Stmt
			Assign
				AssName
					'name'


				Name
					'None'



			Discard
				Const
					'"The name of the view, depicting the path taken through the\\n    configuration in Python-like syntax (e.g., ``foo[\'bar\'][42]``).\\n    "'



			Function
				'resolve'

				'self'

				0

				Stmt
					Raise
						Name
							'NotImplementedError'


						None

						None




			Function
				'first'

				'self'

				0

				Stmt
					Assign
						AssName
							'pairs'


						CallFunc
							Getattr
								Name
									'self'


								'resolve'


							None

							None



					TryExcept
						Stmt
							Return
								CallFunc
									Name
										'iter_first'


									Name
										'pairs'


									None

									None




						Name
							'ValueError'


						None

						Stmt
							Raise
								CallFunc
									Name
										'NotFoundError'


									CallFunc
										Getattr
											Const
												"'{0} not found'"


											'format'


										Getattr
											Name
												'self'


											'name'


										None

										None


									None

									None


								None

								None



						None




			Function
				'exists'

				'self'

				0

				Stmt
					TryExcept
						Stmt
							Discard
								CallFunc
									Getattr
										Name
											'self'


										'first'


									None

									None




						Name
							'NotFoundError'


						None

						Stmt
							Return
								Name
									'False'




						None


					Return
						Name
							'True'





			Function
				'add'

				'self'

				'value'

				0

				Stmt
					Raise
						Name
							'NotImplementedError'


						None

						None




			Function
				'set'

				'self'

				'value'

				0

				Stmt
					Raise
						Name
							'NotImplementedError'


						None

						None




			Function
				'root'

				'self'

				0

				Stmt
					Raise
						Name
							'NotImplementedError'


						None

						None




			Function
				'__repr__'

				'self'

				0

				Stmt
					Return
						Mod
							Const
								"'<ConfigView: %s>'"


							Getattr
								Name
									'self'


								'name'






			Function
				'__getitem__'

				'self'

				'key'

				0

				Stmt
					Return
						CallFunc
							Name
								'Subview'


							Name
								'self'


							Name
								'key'


							None

							None





			Function
				'__setitem__'

				'self'

				'key'

				'value'

				0

				Stmt
					Discard
						CallFunc
							Getattr
								Name
									'self'


								'set'


							Dict
								Name
									'key'


								Name
									'value'



							None

							None





			Function
				'set_args'

				'self'

				'namespace'

				0

				Stmt
					Assign
						AssName
							'args'


						Dict


					For
						AssTuple
							AssName
								'key'


							AssName
								'value'



						CallFunc
							Getattr
								Getattr
									Name
										'namespace'


									'__dict__'


								'items'


							None

							None


						Stmt
							If
								Compare
									Name
										'value'


									'is not'

									Name
										'None'



								Stmt
									Assign
										Subscript
											Name
												'args'


											'OP_ASSIGN'

											Name
												'key'



										Name
											'value'




								None



						None


					Discard
						CallFunc
							Getattr
								Name
									'self'


								'set'


							Name
								'args'


							None

							None





			Function
				'__str__'

				'self'

				0

				Stmt
					Return
						CallFunc
							Name
								'str'


							CallFunc
								Getattr
									Name
										'self'


									'get'


								None

								None


							None

							None





			Function
				'__unicode__'

				'self'

				0

				Stmt
					Return
						CallFunc
							Name
								'unicode'


							CallFunc
								Getattr
									Name
										'self'


									'get'


								None

								None


							None

							None





			Function
				'__nonzero__'

				'self'

				0

				Stmt
					Return
						CallFunc
							Getattr
								Name
									'self'


								'__bool__'


							None

							None





			Function
				'__bool__'

				'self'

				0

				Stmt
					Return
						CallFunc
							Name
								'bool'


							CallFunc
								Getattr
									Name
										'self'


									'get'


								None

								None


							None

							None





			Function
				'keys'

				'self'

				0

				Stmt
					Assign
						AssName
							'keys'


						List


					For
						AssTuple
							AssName
								'dic'


							AssName
								'_'



						CallFunc
							Getattr
								Name
									'self'


								'resolve'


							None

							None


						Stmt
							TryExcept
								Stmt
									Assign
										AssName
											'cur_keys'


										CallFunc
											Getattr
												Name
													'dic'


												'keys'


											None

											None




								Name
									'AttributeError'


								None

								Stmt
									Raise
										CallFunc
											Name
												'ConfigTypeError'


											CallFunc
												Getattr
													Const
														"'{0} must be a dict, not {1}'"


													'format'


												Getattr
													Name
														'self'


													'name'


												Getattr
													CallFunc
														Name
															'type'


														Name
															'dic'


														None

														None


													'__name__'


												None

												None


											None

											None


										None

										None



								None


							For
								AssName
									'key'


								Name
									'cur_keys'


								Stmt
									If
										Compare
											Name
												'key'


											'not in'

											Name
												'keys'



										Stmt
											Discard
												CallFunc
													Getattr
														Name
															'keys'


														'append'


													Name
														'key'


													None

													None




										None



								None



						None


					Return
						Name
							'keys'





			Function
				'items'

				'self'

				0

				Stmt
					For
						AssName
							'key'


						CallFunc
							Getattr
								Name
									'self'


								'keys'


							None

							None


						Stmt
							Discard
								Yield
									Tuple
										Name
											'key'


										Subscript
											Name
												'self'


											'OP_APPLY'

											Name
												'key'







						None




			Function
				'values'

				'self'

				0

				Stmt
					For
						AssName
							'key'


						CallFunc
							Getattr
								Name
									'self'


								'keys'


							None

							None


						Stmt
							Discard
								Yield
									Subscript
										Name
											'self'


										'OP_APPLY'

										Name
											'key'






						None




			Function
				'all_contents'

				'self'

				0

				Stmt
					For
						AssTuple
							AssName
								'collection'


							AssName
								'_'



						CallFunc
							Getattr
								Name
									'self'


								'resolve'


							None

							None


						Stmt
							TryExcept
								Stmt
									Assign
										AssName
											'it'


										CallFunc
											Name
												'iter'


											Name
												'collection'


											None

											None




								Name
									'TypeError'


								None

								Stmt
									Raise
										CallFunc
											Name
												'ConfigTypeError'


											CallFunc
												Getattr
													Const
														"'{0} must be an iterable, not {1}'"


													'format'


												Getattr
													Name
														'self'


													'name'


												Getattr
													CallFunc
														Name
															'type'


														Name
															'collection'


														None

														None


													'__name__'


												None

												None


											None

											None


										None

										None



								None


							For
								AssName
									'value'


								Name
									'it'


								Stmt
									Discard
										Yield
											Name
												'value'





								None



						None




			Function
				'get'

				'self'

				'typ'

				Name
					'None'


				0

				Stmt
					Assign
						AssTuple
							AssName
								'value'


							AssName
								'_'



						CallFunc
							Getattr
								Name
									'self'


								'first'


							None

							None



					If
						Compare
							Name
								'typ'


							'is not'

							Name
								'None'



						Stmt
							If
								Not
									CallFunc
										Name
											'isinstance'


										Name
											'typ'


										Name
											'TYPE_TYPES'


										None

										None



								Stmt
									Raise
										CallFunc
											Name
												'TypeError'


											Const
												"'argument to get() must be a type'"


											None

											None


										None

										None



								None


							If
								Not
									CallFunc
										Name
											'isinstance'


										Name
											'value'


										Name
											'typ'


										None

										None



								Stmt
									Raise
										CallFunc
											Name
												'ConfigTypeError'


											CallFunc
												Getattr
													Const
														"'{0} must be of type {1}, not {2}'"


													'format'


												Getattr
													Name
														'self'


													'name'


												Getattr
													Name
														'typ'


													'__name__'


												Getattr
													CallFunc
														Name
															'type'


														Name
															'value'


														None

														None


													'__name__'


												None

												None


											None

											None


										None

										None



								None



						None


					Return
						Name
							'value'





			Function
				'as_filename'

				'self'

				0

				Stmt
					Assign
						AssTuple
							AssName
								'path'


							AssName
								'source'



						CallFunc
							Getattr
								Name
									'self'


								'first'


							None

							None



					If
						Not
							CallFunc
								Name
									'isinstance'


								Name
									'path'


								Name
									'BASESTRING'


								None

								None



						Stmt
							Raise
								CallFunc
									Name
										'ConfigTypeError'


									CallFunc
										Getattr
											Const
												"'{0} must be a filename, not {1}'"


											'format'


										Getattr
											Name
												'self'


											'name'


										Getattr
											CallFunc
												Name
													'type'


												Name
													'path'


												None

												None


											'__name__'


										None

										None


									None

									None


								None

								None



						None


					Assign
						AssName
							'path'


						CallFunc
							Getattr
								Getattr
									Name
										'os'


									'path'


								'expanduser'


							CallFunc
								Name
									'STRING'


								Name
									'path'


								None

								None


							None

							None



					If
						And
							Not
								CallFunc
									Getattr
										Getattr
											Name
												'os'


											'path'


										'isabs'


									Name
										'path'


									None

									None



							Getattr
								Name
									'source'


								'filename'



						Stmt
							Assign
								AssName
									'path'


								CallFunc
									Getattr
										Getattr
											Name
												'os'


											'path'


										'join'


									CallFunc
										Getattr
											CallFunc
												Getattr
													Name
														'self'


													'root'


												None

												None


											'config_dir'


										None

										None


									Name
										'path'


									None

									None




						None


					Return
						CallFunc
							Getattr
								Getattr
									Name
										'os'


									'path'


								'abspath'


							Name
								'path'


							None

							None





			Function
				'as_choice'

				'self'

				'choices'

				0

				Stmt
					Assign
						AssName
							'value'


						CallFunc
							Getattr
								Name
									'self'


								'get'


							None

							None



					If
						Compare
							Name
								'value'


							'not in'

							Name
								'choices'



						Stmt
							Raise
								CallFunc
									Name
										'ConfigValueError'


									CallFunc
										Getattr
											Const
												"'{0} must be one of {1}, not {2}'"


											'format'


										Getattr
											Name
												'self'


											'name'


										CallFunc
											Name
												'repr'


											CallFunc
												Name
													'list'


												Name
													'choices'


												None

												None


											None

											None


										CallFunc
											Name
												'repr'


											Name
												'value'


											None

											None


										None

										None


									None

									None


								None

								None



						None


					If
						CallFunc
							Name
								'isinstance'


							Name
								'choices'


							Name
								'dict'


							None

							None


						Stmt
							Return
								Subscript
									Name
										'choices'


									'OP_APPLY'

									Name
										'value'





						Stmt
							Return
								Name
									'value'







			Function
				'as_number'

				'self'

				0

				Stmt
					Assign
						AssName
							'value'


						CallFunc
							Getattr
								Name
									'self'


								'get'


							None

							None



					If
						CallFunc
							Name
								'isinstance'


							Name
								'value'


							Name
								'NUMERIC_TYPES'


							None

							None


						Stmt
							Return
								Name
									'value'




						None


					Raise
						CallFunc
							Name
								'ConfigTypeError'


							CallFunc
								Getattr
									Const
										"'{0} must be numeric, not {1}'"


									'format'


								Getattr
									Name
										'self'


									'name'


								Getattr
									CallFunc
										Name
											'type'


										Name
											'value'


										None

										None


									'__name__'


								None

								None


							None

							None


						None

						None




			Function
				'as_str_seq'

				'self'

				0

				Stmt
					Assign
						AssName
							'value'


						CallFunc
							Getattr
								Name
									'self'


								'get'


							None

							None



					If
						CallFunc
							Name
								'isinstance'


							Name
								'value'


							Name
								'bytes'


							None

							None


						Stmt
							Assign
								AssName
									'value'


								CallFunc
									Getattr
										Name
											'value'


										'decode'


									Const
										"'utf8'"


									Const
										"'ignore'"


									None

									None




						None


					If
						CallFunc
							Name
								'isinstance'


							Name
								'value'


							Name
								'STRING'


							None

							None


						Stmt
							Return
								CallFunc
									Getattr
										Name
											'value'


										'split'


									None

									None




						Stmt
							TryExcept
								Stmt
									Return
										CallFunc
											Name
												'list'


											Name
												'value'


											None

											None




								Name
									'TypeError'


								None

								Stmt
									Raise
										CallFunc
											Name
												'ConfigTypeError'


											CallFunc
												Getattr
													Const
														"'{0} must be a whitespace-separated string or a list'"


													'format'


												Getattr
													Name
														'self'


													'name'


												None

												None


											None

											None


										None

										None



								None






			Function
				'flatten'

				'self'

				0

				Stmt
					Assign
						AssName
							'od'


						CallFunc
							Name
								'OrderedDict'


							None

							None



					For
						AssTuple
							AssName
								'key'


							AssName
								'view'



						CallFunc
							Getattr
								Name
									'self'


								'items'


							None

							None


						Stmt
							TryExcept
								Stmt
									Assign
										Subscript
											Name
												'od'


											'OP_ASSIGN'

											Name
												'key'



										CallFunc
											Getattr
												Name
													'view'


												'flatten'


											None

											None




								Name
									'ConfigTypeError'


								None

								Stmt
									Assign
										Subscript
											Name
												'od'


											'OP_ASSIGN'

											Name
												'key'



										CallFunc
											Getattr
												Name
													'view'


												'get'


											None

											None




								None



						None


					Return
						Name
							'od'







	Class
		'RootView'

		Name
			'ConfigView'


		Stmt
			Function
				'__init__'

				'self'

				'sources'

				0

				Stmt
					Assign
						AssAttr
							Name
								'self'


							'sources'

							'OP_ASSIGN'


						CallFunc
							Name
								'list'


							Name
								'sources'


							None

							None



					Assign
						AssAttr
							Name
								'self'


							'name'

							'OP_ASSIGN'


						Name
							'ROOT_NAME'





			Function
				'add'

				'self'

				'obj'

				0

				Stmt
					Discard
						CallFunc
							Getattr
								Getattr
									Name
										'self'


									'sources'


								'append'


							CallFunc
								Getattr
									Name
										'ConfigSource'


									'of'


								Name
									'obj'


								None

								None


							None

							None





			Function
				'set'

				'self'

				'value'

				0

				Stmt
					Discard
						CallFunc
							Getattr
								Getattr
									Name
										'self'


									'sources'


								'insert'


							Const
								'0'


							CallFunc
								Getattr
									Name
										'ConfigSource'


									'of'


								Name
									'value'


								None

								None


							None

							None





			Function
				'resolve'

				'self'

				0

				Stmt
					Return
						GenExpr
							GenExprInner
								Tuple
									CallFunc
										Name
											'dict'


										Name
											's'


										None

										None


									Name
										's'



								GenExprFor
									AssName
										's'


									Getattr
										Name
											'self'


										'sources'








			Function
				'clear'

				'self'

				0

				Stmt
					Slice
						Getattr
							Name
								'self'


							'sources'


						'OP_DELETE'

						None

						None




			Function
				'root'

				'self'

				0

				Stmt
					Return
						Name
							'self'







	Class
		'Subview'

		Name
			'ConfigView'


		Stmt
			Function
				'__init__'

				'self'

				'parent'

				'key'

				0

				Stmt
					Assign
						AssAttr
							Name
								'self'


							'parent'

							'OP_ASSIGN'


						Name
							'parent'



					Assign
						AssAttr
							Name
								'self'


							'key'

							'OP_ASSIGN'


						Name
							'key'



					If
						CallFunc
							Name
								'isinstance'


							Getattr
								Name
									'self'


								'parent'


							Name
								'RootView'


							None

							None


						Stmt
							Assign
								AssAttr
									Name
										'self'


									'name'

									'OP_ASSIGN'


								Const
									"''"




						Stmt
							Assign
								AssAttr
									Name
										'self'


									'name'

									'OP_ASSIGN'


								Getattr
									Getattr
										Name
											'self'


										'parent'


									'name'



							If
								Not
									CallFunc
										Name
											'isinstance'


										Getattr
											Name
												'self'


											'key'


										Name
											'int'


										None

										None



								Stmt
									AugAssign
										Getattr
											Name
												'self'


											'name'


										'+='

										Const
											"'.'"




								None




					If
						CallFunc
							Name
								'isinstance'


							Getattr
								Name
									'self'


								'key'


							Name
								'int'


							None

							None


						Stmt
							AugAssign
								Getattr
									Name
										'self'


									'name'


								'+='

								CallFunc
									Getattr
										Const
											"'#{0}'"


										'format'


									Getattr
										Name
											'self'


										'key'


									None

									None




						CallFunc
							Name
								'isinstance'


							Getattr
								Name
									'self'


								'key'


							Name
								'BASESTRING'


							None

							None


						Stmt
							AugAssign
								Getattr
									Name
										'self'


									'name'


								'+='

								CallFunc
									Getattr
										Const
											"'{0}'"


										'format'


									Getattr
										Name
											'self'


										'key'


									None

									None




						Stmt
							AugAssign
								Getattr
									Name
										'self'


									'name'


								'+='

								CallFunc
									Getattr
										Const
											"'{0}'"


										'format'


									CallFunc
										Name
											'repr'


										Getattr
											Name
												'self'


											'key'


										None

										None


									None

									None







			Function
				'resolve'

				'self'

				0

				Stmt
					For
						AssTuple
							AssName
								'collection'


							AssName
								'source'



						CallFunc
							Getattr
								Getattr
									Name
										'self'


									'parent'


								'resolve'


							None

							None


						Stmt
							TryExcept
								Stmt
									Assign
										AssName
											'value'


										Subscript
											Name
												'collection'


											'OP_APPLY'

											Getattr
												Name
													'self'


												'key'





								Name
									'IndexError'


								None

								Stmt
									Continue


								Name
									'KeyError'


								None

								Stmt
									Continue


								Name
									'TypeError'


								None

								Stmt
									Raise
										CallFunc
											Name
												'ConfigTypeError'


											CallFunc
												Getattr
													Const
														"'{0} must be a collection, not {1}'"


													'format'


												Getattr
													Getattr
														Name
															'self'


														'parent'


													'name'


												Getattr
													CallFunc
														Name
															'type'


														Name
															'collection'


														None

														None


													'__name__'


												None

												None


											None

											None


										None

										None



								None


							Discard
								Yield
									Tuple
										Name
											'value'


										Name
											'source'






						None




			Function
				'set'

				'self'

				'value'

				0

				Stmt
					Discard
						CallFunc
							Getattr
								Getattr
									Name
										'self'


									'parent'


								'set'


							Dict
								Getattr
									Name
										'self'


									'key'


								Name
									'value'



							None

							None





			Function
				'add'

				'self'

				'value'

				0

				Stmt
					Discard
						CallFunc
							Getattr
								Getattr
									Name
										'self'


									'parent'


								'add'


							Dict
								Getattr
									Name
										'self'


									'key'


								Name
									'value'



							None

							None





			Function
				'root'

				'self'

				0

				Stmt
					Return
						CallFunc
							Getattr
								Getattr
									Name
										'self'


									'parent'


								'root'


							None

							None







	Function
		'_package_path'

		'name'

		0

		Stmt
			Assign
				AssName
					'loader'


				CallFunc
					Getattr
						Name
							'pkgutil'


						'get_loader'


					Name
						'name'


					None

					None



			If
				Or
					Compare
						Name
							'loader'


						'is'

						Name
							'None'



					Compare
						Name
							'name'


						'=='

						Const
							"'__main__'"




				Stmt
					Return
						Name
							'None'




				None


			If
				CallFunc
					Name
						'hasattr'


					Name
						'loader'


					Const
						"'get_filename'"


					None

					None


				Stmt
					Assign
						AssName
							'filepath'


						CallFunc
							Getattr
								Name
									'loader'


								'get_filename'


							Name
								'name'


							None

							None




				Stmt
					Discard
						CallFunc
							Name
								'__import__'


							Name
								'name'


							None

							None



					Assign
						AssName
							'filepath'


						Getattr
							Subscript
								Getattr
									Name
										'sys'


									'modules'


								'OP_APPLY'

								Name
									'name'



							'__file__'





			Return
				CallFunc
					Getattr
						Getattr
							Name
								'os'


							'path'


						'dirname'


					CallFunc
						Getattr
							Getattr
								Name
									'os'


								'path'


							'abspath'


						Name
							'filepath'


						None

						None


					None

					None





	Function
		'config_dirs'

		0

		Stmt
			Assign
				AssName
					'paths'


				List


			If
				Compare
					CallFunc
						Getattr
							Name
								'platform'


							'system'


						None

						None


					'=='

					Const
						"'Darwin'"



				Stmt
					Discard
						CallFunc
							Getattr
								Name
									'paths'


								'append'


							Name
								'MAC_DIR'


							None

							None



					Discard
						CallFunc
							Getattr
								Name
									'paths'


								'append'


							Name
								'UNIX_DIR_FALLBACK'


							None

							None



					If
						Compare
							Name
								'UNIX_DIR_VAR'


							'in'

							Getattr
								Name
									'os'


								'environ'



						Stmt
							Discard
								CallFunc
									Getattr
										Name
											'paths'


										'append'


									Subscript
										Getattr
											Name
												'os'


											'environ'


										'OP_APPLY'

										Name
											'UNIX_DIR_VAR'



									None

									None




						None



				Compare
					CallFunc
						Getattr
							Name
								'platform'


							'system'


						None

						None


					'=='

					Const
						"'Windows'"



				Stmt
					Discard
						CallFunc
							Getattr
								Name
									'paths'


								'append'


							Name
								'WINDOWS_DIR_FALLBACK'


							None

							None



					If
						Compare
							Name
								'WINDOWS_DIR_VAR'


							'in'

							Getattr
								Name
									'os'


								'environ'



						Stmt
							Discard
								CallFunc
									Getattr
										Name
											'paths'


										'append'


									Subscript
										Getattr
											Name
												'os'


											'environ'


										'OP_APPLY'

										Name
											'WINDOWS_DIR_VAR'



									None

									None




						None



				Stmt
					Discard
						CallFunc
							Getattr
								Name
									'paths'


								'append'


							Name
								'UNIX_DIR_FALLBACK'


							None

							None



					If
						Compare
							Name
								'UNIX_DIR_VAR'


							'in'

							Getattr
								Name
									'os'


								'environ'



						Stmt
							Discard
								CallFunc
									Getattr
										Name
											'paths'


										'append'


									Subscript
										Getattr
											Name
												'os'


											'environ'


										'OP_APPLY'

										Name
											'UNIX_DIR_VAR'



									None

									None




						None




			Assign
				AssName
					'out'


				List


			For
				AssName
					'path'


				Name
					'paths'


				Stmt
					Assign
						AssName
							'path'


						CallFunc
							Getattr
								Getattr
									Name
										'os'


									'path'


								'abspath'


							CallFunc
								Getattr
									Getattr
										Name
											'os'


										'path'


									'expanduser'


								Name
									'path'


								None

								None


							None

							None



					If
						Compare
							Name
								'path'


							'not in'

							Name
								'out'



						Stmt
							Discard
								CallFunc
									Getattr
										Name
											'out'


										'append'


									Name
										'path'


									None

									None




						None



				None


			Return
				Name
					'out'





	Class
		'Loader'

		Getattr
			Name
				'yaml'


			'SafeLoader'


		Stmt
			Function
				'_construct_unicode'

				'self'

				'node'

				0

				Stmt
					Return
						CallFunc
							Getattr
								Name
									'self'


								'construct_scalar'


							Name
								'node'


							None

							None





			Function
				'construct_yaml_map'

				'self'

				'node'

				0

				Stmt
					Assign
						AssName
							'data'


						CallFunc
							Name
								'OrderedDict'


							None

							None



					Discard
						Yield
							Name
								'data'




					Assign
						AssName
							'value'


						CallFunc
							Getattr
								Name
									'self'


								'construct_mapping'


							Name
								'node'


							None

							None



					Discard
						CallFunc
							Getattr
								Name
									'data'


								'update'


							Name
								'value'


							None

							None





			Function
				'construct_mapping'

				'self'

				'node'

				'deep'

				Name
					'False'


				0

				Stmt
					If
						CallFunc
							Name
								'isinstance'


							Name
								'node'


							Getattr
								Name
									'yaml'


								'MappingNode'


							None

							None


						Stmt
							Discard
								CallFunc
									Getattr
										Name
											'self'


										'flatten_mapping'


									Name
										'node'


									None

									None




						Stmt
							Raise
								CallFunc
									Getattr
										Getattr
											Name
												'yaml'


											'constructor'


										'ConstructorError'


									Name
										'None'


									Name
										'None'


									Mod
										Const
											"'expected a mapping node, but found %s'"


										Getattr
											Name
												'node'


											'id'



									Getattr
										Name
											'node'


										'start_mark'


									None

									None


								None

								None




					Assign
						AssName
							'mapping'


						CallFunc
							Name
								'OrderedDict'


							None

							None



					For
						AssTuple
							AssName
								'key_node'


							AssName
								'value_node'



						Getattr
							Name
								'node'


							'value'


						Stmt
							Assign
								AssName
									'key'


								CallFunc
									Getattr
										Name
											'self'


										'construct_object'


									Name
										'key_node'


									Keyword
										'deep'

										Name
											'deep'



									None

									None



							TryExcept
								Stmt
									Discard
										CallFunc
											Name
												'hash'


											Name
												'key'


											None

											None




								Name
									'TypeError'


								AssName
									'exc'


								Stmt
									Raise
										CallFunc
											Getattr
												Getattr
													Name
														'yaml'


													'constructor'


												'ConstructorError'


											Const
												"'while constructing a mapping'"


											Getattr
												Name
													'node'


												'start_mark'


											Mod
												Const
													"'found unacceptable key (%s)'"


												Name
													'exc'



											Getattr
												Name
													'key_node'


												'start_mark'


											None

											None


										None

										None



								None


							Assign
								AssName
									'value'


								CallFunc
									Getattr
										Name
											'self'


										'construct_object'


									Name
										'value_node'


									Keyword
										'deep'

										Name
											'deep'



									None

									None



							Assign
								Subscript
									Name
										'mapping'


									'OP_ASSIGN'

									Name
										'key'



								Name
									'value'




						None


					Return
						Name
							'mapping'





			Function
				'check_plain'

				'self'

				0

				Stmt
					Assign
						AssName
							'plain'


						CallFunc
							Getattr
								CallFunc
									Name
										'super'


									Name
										'Loader'


									Name
										'self'


									None

									None


								'check_plain'


							None

							None



					Return
						Or
							Name
								'plain'


							Compare
								CallFunc
									Getattr
										Name
											'self'


										'peek'


									None

									None


								'=='

								Const
									"'%'"









	Discard
		CallFunc
			Getattr
				Name
					'Loader'


				'add_constructor'


			Const
				"'tag:yaml.org,2002:str'"


			Getattr
				Name
					'Loader'


				'_construct_unicode'


			None

			None



	Discard
		CallFunc
			Getattr
				Name
					'Loader'


				'add_constructor'


			Const
				"'tag:yaml.org,2002:map'"


			Getattr
				Name
					'Loader'


				'construct_yaml_map'


			None

			None



	Discard
		CallFunc
			Getattr
				Name
					'Loader'


				'add_constructor'


			Const
				"'tag:yaml.org,2002:omap'"


			Getattr
				Name
					'Loader'


				'construct_yaml_map'


			None

			None



	Function
		'load_yaml'

		'filename'

		0

		Stmt
			TryExcept
				Stmt
					With
						CallFunc
							Name
								'open'


							Name
								'filename'


							Const
								"'r'"


							None

							None


						AssName
							'f'


						Stmt
							Return
								CallFunc
									Getattr
										Name
											'yaml'


										'load'


									Name
										'f'


									Keyword
										'Loader'

										Name
											'Loader'



									None

									None






				Tuple
					Name
						'IOError'


					Getattr
						Getattr
							Name
								'yaml'


							'error'


						'YAMLError'



				AssName
					'exc'


				Stmt
					Raise
						CallFunc
							Name
								'ConfigReadError'


							Name
								'filename'


							Name
								'exc'


							None

							None


						None

						None



				None




	Function
		'outsideFunc'

		'self'

		0

		Stmt
			Return
				Const
					"'outside'"





	Class
		'outsideClass'

		Stmt
			Function
				'__init__'

				'self'

				0

				Stmt
					Printnl
						Const
							"'outside'"


						None






	Class
		'Dumper'

		Getattr
			Name
				'yaml'


			'SafeDumper'


		Stmt
			Class
				'insideClass'

				Stmt
					Function
						'__init__'

						'self'

						0

						Stmt
							Printnl
								Const
									"'inside'"


								None






			Function
				'represent_mapping'

				'self'

				'tag'

				'mapping'

				'flow_style'

				Const
					"'0,0'"


				Name
					'None'


				0

				Stmt
					Function
						'insideFunc'

						'inside'

						0

						Stmt
							Return
								Const
									"'Inside'"





					Assign
						AssName
							'value'


						List


					Assign
						AssName
							'node'


						CallFunc
							Getattr
								Name
									'yaml'


								'MappingNode'


							Name
								'tag'


							Name
								'value'


							Keyword
								'flow_style'

								Name
									'flow_style'



							None

							None



					If
						Compare
							Getattr
								Name
									'self'


								'alias_key'


							'is not'

							Name
								'None'



						Stmt
							Assign
								Subscript
									Getattr
										Name
											'self'


										'represented_objects'


									'OP_ASSIGN'

									Getattr
										Name
											'self'


										'alias_key'



								Name
									'node'




						None


					Assign
						AssName
							'best_style'


						Name
							'True'



					Assign
						AssName
							'testFunc'


						CallFunc
							Name
								'outsideFunc'


							None

							None



					Assign
						AssName
							'testFunc'


						CallFunc
							Name
								'insideFunc'


							None

							None



					Assign
						AssName
							'testFunc'


						CallFunc
							Name
								'outsideClass'


							None

							None



					Assign
						AssName
							'testFunc'


						CallFunc
							Getattr
								Name
									'Dumper'


								'insideClass'


							None

							None



					If
						CallFunc
							Name
								'hasattr'


							Name
								'mapping'


							Const
								"'items'"


							None

							None


						Stmt
							Assign
								AssName
									'mapping'


								CallFunc
									Name
										'list'


									CallFunc
										Getattr
											Name
												'mapping'


											'items'


										None

										None


									None

									None




						None


					For
						AssTuple
							AssName
								'item_key'


							AssName
								'item_value'



						Name
							'mapping'


						Stmt
							Assign
								AssName
									'node_key'


								CallFunc
									Getattr
										Name
											'self'


										'represent_data'


									Name
										'item_key'


									None

									None



							Assign
								AssName
									'node_value'


								CallFunc
									Getattr
										Name
											'self'


										'represent_data'


									Name
										'item_value'


									None

									None



							If
								Not
									And
										CallFunc
											Name
												'isinstance'


											Name
												'node_key'


											Getattr
												Name
													'yaml'


												'ScalarNode'


											None

											None


										Not
											Getattr
												Name
													'node_key'


												'style'





								Stmt
									Assign
										AssName
											'best_style'


										Name
											'False'




								None


							If
								Not
									And
										CallFunc
											Name
												'isinstance'


											Name
												'node_value'


											Getattr
												Name
													'yaml'


												'ScalarNode'


											None

											None


										Not
											Getattr
												Name
													'node_value'


												'style'





								Stmt
									Assign
										AssName
											'best_style'


										Name
											'False'




								None


							Discard
								CallFunc
									Getattr
										Name
											'value'


										'append'


									Tuple
										Name
											'node_key'


										Name
											'node_value'



									None

									None




						None


					If
						Compare
							Name
								'flow_style'


							'is'

							Name
								'None'



						Stmt
							If
								Compare
									Getattr
										Name
											'self'


										'default_flow_style'


									'is not'

									Name
										'None'



								Stmt
									Assign
										AssAttr
											Name
												'node'


											'flow_style'

											'OP_ASSIGN'


										Getattr
											Name
												'self'


											'default_flow_style'




								Stmt
									Assign
										AssAttr
											Name
												'node'


											'flow_style'

											'OP_ASSIGN'


										Name
											'best_style'






						None


					Return
						Name
							'node'





			Function
				'represent_list'

				'self'

				'data'

				0

				Stmt
					Assign
						AssName
							'node'


						CallFunc
							Getattr
								CallFunc
									Name
										'super'


									Name
										'Dumper'


									Name
										'self'


									None

									None


								'represent_list'


							Name
								'data'


							None

							None



					Assign
						AssName
							'length'


						CallFunc
							Name
								'len'


							Name
								'data'


							None

							None



					If
						And
							Compare
								Getattr
									Name
										'self'


									'default_flow_style'


								'is'

								Name
									'None'



							Compare
								Name
									'length'


								'<'

								Const
									'4'




						Stmt
							Assign
								AssAttr
									Name
										'node'


									'flow_style'

									'OP_ASSIGN'


								Name
									'True'




						Compare
							Getattr
								Name
									'self'


								'default_flow_style'


							'is'

							Name
								'None'



						Stmt
							Assign
								AssAttr
									Name
										'node'


									'flow_style'

									'OP_ASSIGN'


								Name
									'False'




						None


					Return
						Name
							'node'





			Function
				'represent_bool'

				'self'

				'data'

				0

				Stmt
					If
						Name
							'data'


						Stmt
							Assign
								AssName
									'value'


								Const
									"'yes'"




						Stmt
							Assign
								AssName
									'value'


								Const
									"'no'"





					Return
						CallFunc
							Getattr
								Name
									'self'


								'represent_scalar'


							Const
								"'tag:yaml.org,2002:bool'"


							Name
								'value'


							None

							None





			Function
				'represent_none'

				'self'

				'data'

				0

				Stmt
					Return
						CallFunc
							Getattr
								Name
									'self'


								'represent_scalar'


							Const
								"'tag:yaml.org,2002:null'"


							Const
								"''"


							None

							None







	Discard
		CallFunc
			Getattr
				Name
					'Dumper'


				'add_representer'


			Name
				'OrderedDict'


			Getattr
				Name
					'Dumper'


				'represent_dict'


			None

			None



	Discard
		CallFunc
			Getattr
				Name
					'Dumper'


				'add_representer'


			Name
				'bool'


			Getattr
				Name
					'Dumper'


				'represent_bool'


			None

			None



	Discard
		CallFunc
			Getattr
				Name
					'Dumper'


				'add_representer'


			CallFunc
				Name
					'type'


				Name
					'None'


				None

				None


			Getattr
				Name
					'Dumper'


				'represent_none'


			None

			None



	Discard
		CallFunc
			Getattr
				Name
					'Dumper'


				'add_representer'


			Name
				'list'


			Getattr
				Name
					'Dumper'


				'represent_list'


			None

			None



	Function
		'restore_yaml_comments'

		'data'

		'default_data'

		0

		Stmt
			Assign
				AssName
					'comment_map'


				CallFunc
					Name
						'dict'


					None

					None



			Assign
				AssName
					'default_lines'


				CallFunc
					Name
						'iter'


					CallFunc
						Getattr
							Name
								'default_data'


							'splitlines'


						None

						None


					None

					None



			For
				AssName
					'line'


				Name
					'default_lines'


				Stmt
					If
						Not
							Name
								'line'



						Stmt
							Assign
								AssName
									'comment'


								Const
									"'\\n'"




						CallFunc
							Getattr
								Name
									'line'


								'startswith'


							Const
								"'#'"


							None

							None


						Stmt
							Assign
								AssName
									'comment'


								CallFunc
									Getattr
										Const
											"'{0}\\n'"


										'format'


									Name
										'line'


									None

									None




						Stmt
							Continue



					While
						Name
							'True'


						Stmt
							Assign
								AssName
									'line'


								CallFunc
									Name
										'next'


									Name
										'default_lines'


									None

									None



							If
								And
									Name
										'line'


									Not
										CallFunc
											Getattr
												Name
													'line'


												'startswith'


											Const
												"'#'"


											None

											None




								Stmt
									Break


								None


							AugAssign
								Name
									'comment'


								'+='

								CallFunc
									Getattr
										Const
											"'{0}\\n'"


										'format'


									Name
										'line'


									None

									None




						None


					Assign
						AssName
							'key'


						CallFunc
							Getattr
								Subscript
									CallFunc
										Getattr
											Name
												'line'


											'split'


										Const
											"':'"


										None

										None


									'OP_APPLY'

									Const
										'0'



								'strip'


							None

							None



					Assign
						Subscript
							Name
								'comment_map'


							'OP_ASSIGN'

							Name
								'key'



						Name
							'comment'




				None


			Assign
				AssName
					'out_lines'


				CallFunc
					Name
						'iter'


					CallFunc
						Getattr
							Name
								'data'


							'splitlines'


						None

						None


					None

					None



			Assign
				AssName
					'out_data'


				Const
					"''"



			For
				AssName
					'line'


				Name
					'out_lines'


				Stmt
					Assign
						AssName
							'key'


						CallFunc
							Getattr
								Subscript
									CallFunc
										Getattr
											Name
												'line'


											'split'


										Const
											"':'"


										None

										None


									'OP_APPLY'

									Const
										'0'



								'strip'


							None

							None



					If
						Compare
							Name
								'key'


							'in'

							Name
								'comment_map'



						Stmt
							AugAssign
								Name
									'out_data'


								'+='

								Subscript
									Name
										'comment_map'


									'OP_APPLY'

									Name
										'key'





						None


					AugAssign
						Name
							'out_data'


						'+='

						CallFunc
							Getattr
								Const
									"'{0}\\n'"


								'format'


							Name
								'line'


							None

							None




				None


			Return
				Name
					'out_data'





	Class
		'Configuration'

		Name
			'RootView'


		Stmt
			Function
				'__init__'

				'self'

				'appname'

				'modname'

				'read'

				Name
					'None'


				Name
					'True'


				0

				Stmt
					Discard
						CallFunc
							Getattr
								CallFunc
									Name
										'super'


									Name
										'Configuration'


									Name
										'self'


									None

									None


								'__init__'


							List

							None

							None



					Assign
						AssAttr
							Name
								'self'


							'appname'

							'OP_ASSIGN'


						Name
							'appname'



					Assign
						AssAttr
							Name
								'self'


							'modname'

							'OP_ASSIGN'


						Name
							'modname'



					Assign
						AssAttr
							Name
								'self'


							'_env_var'

							'OP_ASSIGN'


						CallFunc
							Getattr
								Const
									"'{0}DIR'"


								'format'


							CallFunc
								Getattr
									Getattr
										Name
											'self'


										'appname'


									'upper'


								None

								None


							None

							None



					If
						Name
							'read'


						Stmt
							Discard
								CallFunc
									Getattr
										Name
											'self'


										'read'


									None

									None




						None




			Function
				'user_config_path'

				'self'

				0

				Stmt
					Return
						CallFunc
							Getattr
								Getattr
									Name
										'os'


									'path'


								'join'


							CallFunc
								Getattr
									Name
										'self'


									'config_dir'


								None

								None


							Name
								'CONFIG_FILENAME'


							None

							None





			Function
				'_add_user_source'

				'self'

				0

				Stmt
					Assign
						AssName
							'filename'


						CallFunc
							Getattr
								Name
									'self'


								'user_config_path'


							None

							None



					If
						CallFunc
							Getattr
								Getattr
									Name
										'os'


									'path'


								'isfile'


							Name
								'filename'


							None

							None


						Stmt
							Discard
								CallFunc
									Getattr
										Name
											'self'


										'add'


									CallFunc
										Name
											'ConfigSource'


										Or
											CallFunc
												Name
													'load_yaml'


												Name
													'filename'


												None

												None


											Dict


										Name
											'filename'


										None

										None


									None

									None




						None




			Function
				'_add_default_source'

				'self'

				0

				Stmt
					If
						Getattr
							Name
								'self'


							'modname'


						Stmt
							Assign
								AssName
									'pkg_path'


								CallFunc
									Name
										'_package_path'


									Getattr
										Name
											'self'


										'modname'


									None

									None



							If
								Name
									'pkg_path'


								Stmt
									Assign
										AssName
											'filename'


										CallFunc
											Getattr
												Getattr
													Name
														'os'


													'path'


												'join'


											Name
												'pkg_path'


											Name
												'DEFAULT_FILENAME'


											None

											None



									If
										CallFunc
											Getattr
												Getattr
													Name
														'os'


													'path'


												'isfile'


											Name
												'filename'


											None

											None


										Stmt
											Discard
												CallFunc
													Getattr
														Name
															'self'


														'add'


													CallFunc
														Name
															'ConfigSource'


														CallFunc
															Name
																'load_yaml'


															Name
																'filename'


															None

															None


														Name
															'filename'


														Name
															'True'


														None

														None


													None

													None




										None



								None



						None




			Function
				'read'

				'self'

				'user'

				'defaults'

				Name
					'True'


				Name
					'True'


				0

				Stmt
					If
						Name
							'user'


						Stmt
							Discard
								CallFunc
									Getattr
										Name
											'self'


										'_add_user_source'


									None

									None




						None


					If
						Name
							'defaults'


						Stmt
							Discard
								CallFunc
									Getattr
										Name
											'self'


										'_add_default_source'


									None

									None




						None




			Function
				'config_dir'

				'self'

				0

				Stmt
					If
						Compare
							Getattr
								Name
									'self'


								'_env_var'


							'in'

							Getattr
								Name
									'os'


								'environ'



						Stmt
							Assign
								AssName
									'appdir'


								Subscript
									Getattr
										Name
											'os'


										'environ'


									'OP_APPLY'

									Getattr
										Name
											'self'


										'_env_var'




							Assign
								AssName
									'appdir'


								CallFunc
									Getattr
										Getattr
											Name
												'os'


											'path'


										'abspath'


									CallFunc
										Getattr
											Getattr
												Name
													'os'


												'path'


											'expanduser'


										Name
											'appdir'


										None

										None


									None

									None



							If
								CallFunc
									Getattr
										Getattr
											Name
												'os'


											'path'


										'isfile'


									Name
										'appdir'


									None

									None


								Stmt
									Raise
										CallFunc
											Name
												'ConfigError'


											CallFunc
												Getattr
													Const
														"'{0} must be a directory'"


													'format'


												Getattr
													Name
														'self'


													'_env_var'


												None

												None


											None

											None


										None

										None



								None



						Stmt
							For
								AssName
									'confdir'


								CallFunc
									Name
										'config_dirs'


									None

									None


								Stmt
									Assign
										AssName
											'appdir'


										CallFunc
											Getattr
												Getattr
													Name
														'os'


													'path'


												'join'


											Name
												'confdir'


											Getattr
												Name
													'self'


												'appname'


											None

											None



									If
										CallFunc
											Getattr
												Getattr
													Name
														'os'


													'path'


												'isfile'


											CallFunc
												Getattr
													Getattr
														Name
															'os'


														'path'


													'join'


												Name
													'appdir'


												Name
													'CONFIG_FILENAME'


												None

												None


											None

											None


										Stmt
											Break


										None



								None




					If
						Not
							CallFunc
								Getattr
									Getattr
										Name
											'os'


										'path'


									'isdir'


								Name
									'appdir'


								None

								None



						Stmt
							Discard
								CallFunc
									Getattr
										Name
											'os'


										'makedirs'


									Name
										'appdir'


									None

									None




						None


					Return
						Name
							'appdir'





			Function
				'set_file'

				'self'

				'filename'

				0

				Stmt
					Assign
						AssName
							'filename'


						CallFunc
							Getattr
								Getattr
									Name
										'os'


									'path'


								'abspath'


							Name
								'filename'


							None

							None



					Discard
						CallFunc
							Getattr
								Name
									'self'


								'set'


							CallFunc
								Name
									'ConfigSource'


								CallFunc
									Name
										'load_yaml'


									Name
										'filename'


									None

									None


								Name
									'filename'


								None

								None


							None

							None





			Function
				'dump'

				'self'

				'full'

				Name
					'True'


				0

				Stmt
					If
						Name
							'full'


						Stmt
							Assign
								AssName
									'out_dict'


								CallFunc
									Getattr
										Name
											'self'


										'flatten'


									None

									None




						Stmt
							Assign
								AssName
									'sources'


								ListComp
									Name
										's'


									ListCompFor
										AssName
											's'


										Getattr
											Name
												'self'


											'sources'


										ListCompIf
											Not
												Getattr
													Name
														's'


													'default'







							Assign
								AssName
									'out_dict'


								CallFunc
									Getattr
										CallFunc
											Name
												'RootView'


											Name
												'sources'


											None

											None


										'flatten'


									None

									None





					Assign
						AssName
							'yaml_out'


						CallFunc
							Getattr
								Name
									'yaml'


								'dump'


							Name
								'out_dict'


							Keyword
								'Dumper'

								Name
									'Dumper'



							Keyword
								'default_flow_style'

								Name
									'None'



							Keyword
								'indent'

								Const
									'4'



							Keyword
								'width'

								Const
									'1000'



							None

							None



					Assign
						AssName
							'default_source'


						Name
							'None'



					For
						AssName
							'source'


						Getattr
							Name
								'self'


							'sources'


						Stmt
							If
								Getattr
									Name
										'source'


									'default'


								Stmt
									Assign
										AssName
											'default_source'


										Name
											'source'



									Break


								None



						None


					If
						Name
							'default_source'


						Stmt
							With
								CallFunc
									Name
										'open'


									Getattr
										Name
											'default_source'


										'filename'


									Const
										"'r'"


									None

									None


								AssName
									'fp'


								Stmt
									Assign
										AssName
											'default_data'


										CallFunc
											Getattr
												Name
													'fp'


												'read'


											None

											None





							Assign
								AssName
									'yaml_out'


								CallFunc
									Name
										'restore_yaml_comments'


									Name
										'yaml_out'


									Name
										'default_data'


									None

									None




						None


					Return
						Name
							'yaml_out'







	Class
		'LazyConfig'

		Name
			'Configuration'


		Stmt
			Function
				'__init__'

				'self'

				'appname'

				'modname'

				Name
					'None'


				0

				Stmt
					Discard
						CallFunc
							Getattr
								CallFunc
									Name
										'super'


									Name
										'LazyConfig'


									Name
										'self'


									None

									None


								'__init__'


							Name
								'appname'


							Name
								'modname'


							Name
								'False'


							None

							None



					Assign
						AssAttr
							Name
								'self'


							'_materialized'

							'OP_ASSIGN'


						Name
							'False'



					Assign
						AssAttr
							Name
								'self'


							'_lazy_prefix'

							'OP_ASSIGN'


						List


					Assign
						AssAttr
							Name
								'self'


							'_lazy_suffix'

							'OP_ASSIGN'


						List




			Function
				'read'

				'self'

				'user'

				'defaults'

				Name
					'True'


				Name
					'True'


				0

				Stmt
					Assign
						AssAttr
							Name
								'self'


							'_materialized'

							'OP_ASSIGN'


						Name
							'True'



					Discard
						CallFunc
							Getattr
								CallFunc
									Name
										'super'


									Name
										'LazyConfig'


									Name
										'self'


									None

									None


								'read'


							Name
								'user'


							Name
								'defaults'


							None

							None





			Function
				'resolve'

				'self'

				0

				Stmt
					If
						Not
							Getattr
								Name
									'self'


								'_materialized'



						Stmt
							Discard
								CallFunc
									Getattr
										Name
											'self'


										'read'


									None

									None



							AugAssign
								Getattr
									Name
										'self'


									'sources'


								'+='

								Getattr
									Name
										'self'


									'_lazy_suffix'



							Assign
								Slice
									Getattr
										Name
											'self'


										'sources'


									'OP_ASSIGN'

									None

									Const
										'0'



								Getattr
									Name
										'self'


									'_lazy_prefix'




						None


					Return
						CallFunc
							Getattr
								CallFunc
									Name
										'super'


									Name
										'LazyConfig'


									Name
										'self'


									None

									None


								'resolve'


							None

							None





			Function
				'add'

				'self'

				'value'

				0

				Stmt
					Discard
						CallFunc
							Getattr
								CallFunc
									Name
										'super'


									Name
										'LazyConfig'


									Name
										'self'


									None

									None


								'add'


							Name
								'value'


							None

							None



					If
						Not
							Getattr
								Name
									'self'


								'_materialized'



						Stmt
							AugAssign
								Getattr
									Name
										'self'


									'_lazy_suffix'


								'+='

								Getattr
									Name
										'self'


									'sources'



							Slice
								Getattr
									Name
										'self'


									'sources'


								'OP_DELETE'

								None

								None



						None




			Function
				'set'

				'self'

				'value'

				0

				Stmt
					Discard
						CallFunc
							Getattr
								CallFunc
									Name
										'super'


									Name
										'LazyConfig'


									Name
										'self'


									None

									None


								'set'


							Name
								'value'


							None

							None



					If
						Not
							Getattr
								Name
									'self'


								'_materialized'



						Stmt
							Assign
								Slice
									Getattr
										Name
											'self'


										'_lazy_prefix'


									'OP_ASSIGN'

									None

									Const
										'0'



								Getattr
									Name
										'self'


									'sources'



							Slice
								Getattr
									Name
										'self'


									'sources'


								'OP_DELETE'

								None

								None



						None




			Function
				'clear'

				'self'

				0

				Stmt
					Slice
						Getattr
							Name
								'self'


							'sources'


						'OP_DELETE'

						None

						None


					Assign
						AssAttr
							Name
								'self'


							'_lazy_suffix'

							'OP_ASSIGN'


						List


					Assign
						AssAttr
							Name
								'self'


							'_lazy_prefix'

							'OP_ASSIGN'


						List







